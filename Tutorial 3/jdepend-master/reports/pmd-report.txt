src/jdepend/framework/AbstractParser.java:17:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/AbstractParser.java:17:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/AbstractParser.java:17:	CommentRequired: Field comments are required
src/jdepend/framework/AbstractParser.java:17:	CommentRequired: Field comments are required
src/jdepend/framework/AbstractParser.java:17:	LooseCoupling: Avoid using implementation types like 'ArrayList'; use the interface instead
src/jdepend/framework/AbstractParser.java:17:	LooseCoupling: Avoid using implementation types like 'ArrayList'; use the interface instead
src/jdepend/framework/AbstractParser.java:18:	CommentRequired: Field comments are required
src/jdepend/framework/AbstractParser.java:18:	CommentRequired: Field comments are required
src/jdepend/framework/AbstractParser.java:19:	AvoidFieldNameMatchingMethodName: Field DEBUG has the same name as a method
src/jdepend/framework/AbstractParser.java:19:	AvoidFieldNameMatchingMethodName: Field DEBUG has the same name as a method
src/jdepend/framework/AbstractParser.java:19:	CommentRequired: Field comments are required
src/jdepend/framework/AbstractParser.java:19:	CommentRequired: Field comments are required
src/jdepend/framework/AbstractParser.java:19:	RedundantFieldInitializer: Avoid using redundant field initializer for 'DEBUG'
src/jdepend/framework/AbstractParser.java:19:	RedundantFieldInitializer: Avoid using redundant field initializer for 'DEBUG'
src/jdepend/framework/AbstractParser.java:19:	SuspiciousConstantFieldName: The field name indicates a constant but its modifiers do not
src/jdepend/framework/AbstractParser.java:19:	SuspiciousConstantFieldName: The field name indicates a constant but its modifiers do not
src/jdepend/framework/AbstractParser.java:22:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/AbstractParser.java:22:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/AbstractParser.java:26:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/AbstractParser.java:26:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/AbstractParser.java:26:	MethodArgumentCouldBeFinal: Parameter 'filter' is not assigned and could be declared final
src/jdepend/framework/AbstractParser.java:26:	MethodArgumentCouldBeFinal: Parameter 'filter' is not assigned and could be declared final
src/jdepend/framework/AbstractParser.java:27:	ConstructorCallsOverridableMethod: Overridable method 'setFilter' called during object construction
src/jdepend/framework/AbstractParser.java:27:	ConstructorCallsOverridableMethod: Overridable method 'setFilter' called during object construction
src/jdepend/framework/AbstractParser.java:31:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/AbstractParser.java:31:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/AbstractParser.java:31:	MethodArgumentCouldBeFinal: Parameter 'listener' is not assigned and could be declared final
src/jdepend/framework/AbstractParser.java:31:	MethodArgumentCouldBeFinal: Parameter 'listener' is not assigned and could be declared final
src/jdepend/framework/AbstractParser.java:39:	ShortVariable: Avoid variables with short names like is
src/jdepend/framework/AbstractParser.java:39:	ShortVariable: Avoid variables with short names like is
src/jdepend/framework/AbstractParser.java:47:	MethodArgumentCouldBeFinal: Parameter 'jClass' is not assigned and could be declared final
src/jdepend/framework/AbstractParser.java:47:	MethodArgumentCouldBeFinal: Parameter 'jClass' is not assigned and could be declared final
src/jdepend/framework/AbstractParser.java:48:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/AbstractParser.java:48:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/AbstractParser.java:48:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/AbstractParser.java:48:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/AbstractParser.java:49:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/AbstractParser.java:49:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/AbstractParser.java:60:	MethodArgumentCouldBeFinal: Parameter 'filter' is not assigned and could be declared final
src/jdepend/framework/AbstractParser.java:60:	MethodArgumentCouldBeFinal: Parameter 'filter' is not assigned and could be declared final
src/jdepend/framework/AbstractParser.java:64:	CommentRequired: Protected method constructor comments are required
src/jdepend/framework/AbstractParser.java:64:	CommentRequired: Protected method constructor comments are required
src/jdepend/framework/AbstractParser.java:64:	MethodArgumentCouldBeFinal: Parameter 'message' is not assigned and could be declared final
src/jdepend/framework/AbstractParser.java:64:	MethodArgumentCouldBeFinal: Parameter 'message' is not assigned and could be declared final
src/jdepend/framework/AbstractParser.java:66:	SystemPrintln: System.err.println is used
src/jdepend/framework/AbstractParser.java:66:	SystemPrintln: System.err.println is used
src/jdepend/framework/ClassFileParser.java:15:	GodClass: Possible God Class (WMC=123, ATFD=67, TCC=31.855%)
src/jdepend/framework/ClassFileParser.java:15:	GodClass: Possible God Class (WMC=123, ATFD=67, TCC=31.855%)
src/jdepend/framework/ClassFileParser.java:15:	TooManyMethods: This class has too many methods, consider refactoring it.
src/jdepend/framework/ClassFileParser.java:15:	TooManyMethods: This class has too many methods, consider refactoring it.
src/jdepend/framework/ClassFileParser.java:17:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:17:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:18:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:18:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:19:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:19:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:20:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:20:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:21:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:21:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:22:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:22:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:23:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:23:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:24:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:24:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:25:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:25:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:26:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:26:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:27:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:27:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:28:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:28:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:28:	LongVariable: Avoid excessively long variable names like CONSTANT_INTERFACEMETHOD
src/jdepend/framework/ClassFileParser.java:28:	LongVariable: Avoid excessively long variable names like CONSTANT_INTERFACEMETHOD
src/jdepend/framework/ClassFileParser.java:29:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:29:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:29:	LongVariable: Avoid excessively long variable names like CONSTANT_NAMEANDTYPE
src/jdepend/framework/ClassFileParser.java:29:	LongVariable: Avoid excessively long variable names like CONSTANT_NAMEANDTYPE
src/jdepend/framework/ClassFileParser.java:30:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:30:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:30:	LongVariable: Avoid excessively long variable names like CONSTANT_METHOD_HANDLE
src/jdepend/framework/ClassFileParser.java:30:	LongVariable: Avoid excessively long variable names like CONSTANT_METHOD_HANDLE
src/jdepend/framework/ClassFileParser.java:31:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:31:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:31:	LongVariable: Avoid excessively long variable names like CONSTANT_METHOD_TYPE
src/jdepend/framework/ClassFileParser.java:31:	LongVariable: Avoid excessively long variable names like CONSTANT_METHOD_TYPE
src/jdepend/framework/ClassFileParser.java:32:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:32:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:32:	LongVariable: Avoid excessively long variable names like CONSTANT_INVOKEDYNAMIC
src/jdepend/framework/ClassFileParser.java:32:	LongVariable: Avoid excessively long variable names like CONSTANT_INVOKEDYNAMIC
src/jdepend/framework/ClassFileParser.java:34:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:34:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:35:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:35:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:36:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:36:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:38:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:38:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:38:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:38:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:39:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:39:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:39:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:39:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:40:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:40:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:40:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:40:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:41:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:41:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:41:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:41:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:42:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:42:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:42:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:42:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:43:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:43:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:43:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:43:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:44:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:44:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:44:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:44:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:45:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:45:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:45:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:45:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:46:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:46:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:46:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:46:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:47:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:47:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:47:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:47:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:48:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:48:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:48:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:48:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:48:	ShortVariable: Avoid variables with short names like in
src/jdepend/framework/ClassFileParser.java:48:	ShortVariable: Avoid variables with short names like in
src/jdepend/framework/ClassFileParser.java:51:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/ClassFileParser.java:51:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/ClassFileParser.java:55:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/ClassFileParser.java:55:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/ClassFileParser.java:55:	MethodArgumentCouldBeFinal: Parameter 'filter' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:55:	MethodArgumentCouldBeFinal: Parameter 'filter' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:61:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/jdepend/framework/ClassFileParser.java:61:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/jdepend/framework/ClassFileParser.java:62:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/jdepend/framework/ClassFileParser.java:62:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/jdepend/framework/ClassFileParser.java:66:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/jdepend/framework/ClassFileParser.java:66:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/jdepend/framework/ClassFileParser.java:77:	MethodArgumentCouldBeFinal: Parameter 'classFile' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:77:	MethodArgumentCouldBeFinal: Parameter 'classFile' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:81:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/jdepend/framework/ClassFileParser.java:81:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/jdepend/framework/ClassFileParser.java:83:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'in' (lines '83'-'87').
src/jdepend/framework/ClassFileParser.java:83:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'in' (lines '83'-'87').
src/jdepend/framework/ClassFileParser.java:83:	ShortVariable: Avoid variables with short names like in
src/jdepend/framework/ClassFileParser.java:83:	ShortVariable: Avoid variables with short names like in
src/jdepend/framework/ClassFileParser.java:87:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/jdepend/framework/ClassFileParser.java:87:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/jdepend/framework/ClassFileParser.java:96:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/jdepend/framework/ClassFileParser.java:96:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/jdepend/framework/ClassFileParser.java:102:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/ClassFileParser.java:102:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/ClassFileParser.java:102:	MethodArgumentCouldBeFinal: Parameter 'is' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:102:	MethodArgumentCouldBeFinal: Parameter 'is' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:102:	MissingOverride: The method 'parse(InputStream)' is missing an @Override annotation.
src/jdepend/framework/ClassFileParser.java:102:	MissingOverride: The method 'parse(InputStream)' is missing an @Override annotation.
src/jdepend/framework/ClassFileParser.java:102:	ShortVariable: Avoid variables with short names like is
src/jdepend/framework/ClassFileParser.java:102:	ShortVariable: Avoid variables with short names like is
src/jdepend/framework/ClassFileParser.java:110:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'magic' (lines '110'-'138').
src/jdepend/framework/ClassFileParser.java:110:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'magic' (lines '110'-'138').
src/jdepend/framework/ClassFileParser.java:110:	LocalVariableCouldBeFinal: Local variable 'magic' could be declared final
src/jdepend/framework/ClassFileParser.java:110:	LocalVariableCouldBeFinal: Local variable 'magic' could be declared final
src/jdepend/framework/ClassFileParser.java:110:	PrematureDeclaration: Avoid declaring a variable if it is unreferenced before a possible exit point.
src/jdepend/framework/ClassFileParser.java:110:	PrematureDeclaration: Avoid declaring a variable if it is unreferenced before a possible exit point.
src/jdepend/framework/ClassFileParser.java:110:	UnusedLocalVariable: Avoid unused local variables such as 'magic'.
src/jdepend/framework/ClassFileParser.java:110:	UnusedLocalVariable: Avoid unused local variables such as 'magic'.
src/jdepend/framework/ClassFileParser.java:112:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'minorVersion' (lines '112'-'138').
src/jdepend/framework/ClassFileParser.java:112:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'minorVersion' (lines '112'-'138').
src/jdepend/framework/ClassFileParser.java:112:	LocalVariableCouldBeFinal: Local variable 'minorVersion' could be declared final
src/jdepend/framework/ClassFileParser.java:112:	LocalVariableCouldBeFinal: Local variable 'minorVersion' could be declared final
src/jdepend/framework/ClassFileParser.java:112:	PrematureDeclaration: Avoid declaring a variable if it is unreferenced before a possible exit point.
src/jdepend/framework/ClassFileParser.java:112:	PrematureDeclaration: Avoid declaring a variable if it is unreferenced before a possible exit point.
src/jdepend/framework/ClassFileParser.java:112:	UnusedLocalVariable: Avoid unused local variables such as 'minorVersion'.
src/jdepend/framework/ClassFileParser.java:112:	UnusedLocalVariable: Avoid unused local variables such as 'minorVersion'.
src/jdepend/framework/ClassFileParser.java:113:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'majorVersion' (lines '113'-'138').
src/jdepend/framework/ClassFileParser.java:113:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'majorVersion' (lines '113'-'138').
src/jdepend/framework/ClassFileParser.java:113:	LocalVariableCouldBeFinal: Local variable 'majorVersion' could be declared final
src/jdepend/framework/ClassFileParser.java:113:	LocalVariableCouldBeFinal: Local variable 'majorVersion' could be declared final
src/jdepend/framework/ClassFileParser.java:113:	PrematureDeclaration: Avoid declaring a variable if it is unreferenced before a possible exit point.
src/jdepend/framework/ClassFileParser.java:113:	PrematureDeclaration: Avoid declaring a variable if it is unreferenced before a possible exit point.
src/jdepend/framework/ClassFileParser.java:113:	UnusedLocalVariable: Avoid unused local variables such as 'majorVersion'.
src/jdepend/framework/ClassFileParser.java:113:	UnusedLocalVariable: Avoid unused local variables such as 'majorVersion'.
src/jdepend/framework/ClassFileParser.java:141:	LocalVariableCouldBeFinal: Local variable 'magic' could be declared final
src/jdepend/framework/ClassFileParser.java:141:	LocalVariableCouldBeFinal: Local variable 'magic' could be declared final
src/jdepend/framework/ClassFileParser.java:158:	LocalVariableCouldBeFinal: Local variable 'constantPoolSize' could be declared final
src/jdepend/framework/ClassFileParser.java:158:	LocalVariableCouldBeFinal: Local variable 'constantPoolSize' could be declared final
src/jdepend/framework/ClassFileParser.java:160:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'pool' (lines '160'-'166').
src/jdepend/framework/ClassFileParser.java:160:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'pool' (lines '160'-'166').
src/jdepend/framework/ClassFileParser.java:164:	LocalVariableCouldBeFinal: Local variable 'constant' could be declared final
src/jdepend/framework/ClassFileParser.java:164:	LocalVariableCouldBeFinal: Local variable 'constant' could be declared final
src/jdepend/framework/ClassFileParser.java:166:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'pool' (lines '166'-'166').
src/jdepend/framework/ClassFileParser.java:166:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'pool' (lines '166'-'166').
src/jdepend/framework/ClassFileParser.java:171:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/ClassFileParser.java:171:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/ClassFileParser.java:172:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/ClassFileParser.java:172:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/ClassFileParser.java:173:	AvoidReassigningLoopVariables: Avoid reassigning the loop control variable 'i'
src/jdepend/framework/ClassFileParser.java:173:	AvoidReassigningLoopVariables: Avoid reassigning the loop control variable 'i'
src/jdepend/framework/ClassFileParser.java:173:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'i' (lines '173'-'162').
src/jdepend/framework/ClassFileParser.java:173:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'i' (lines '173'-'162').
src/jdepend/framework/ClassFileParser.java:181:	LocalVariableCouldBeFinal: Local variable 'accessFlags' could be declared final
src/jdepend/framework/ClassFileParser.java:181:	LocalVariableCouldBeFinal: Local variable 'accessFlags' could be declared final
src/jdepend/framework/ClassFileParser.java:183:	LocalVariableCouldBeFinal: Local variable 'isAbstract' could be declared final
src/jdepend/framework/ClassFileParser.java:183:	LocalVariableCouldBeFinal: Local variable 'isAbstract' could be declared final
src/jdepend/framework/ClassFileParser.java:183:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:183:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:184:	LocalVariableCouldBeFinal: Local variable 'isInterface' could be declared final
src/jdepend/framework/ClassFileParser.java:184:	LocalVariableCouldBeFinal: Local variable 'isInterface' could be declared final
src/jdepend/framework/ClassFileParser.java:184:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:184:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:187:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:187:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:189:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/jdepend/framework/ClassFileParser.java:189:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/jdepend/framework/ClassFileParser.java:189:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:189:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:193:	LocalVariableCouldBeFinal: Local variable 'entryIndex' could be declared final
src/jdepend/framework/ClassFileParser.java:193:	LocalVariableCouldBeFinal: Local variable 'entryIndex' could be declared final
src/jdepend/framework/ClassFileParser.java:194:	LocalVariableCouldBeFinal: Local variable 'className' could be declared final
src/jdepend/framework/ClassFileParser.java:194:	LocalVariableCouldBeFinal: Local variable 'className' could be declared final
src/jdepend/framework/ClassFileParser.java:198:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/jdepend/framework/ClassFileParser.java:198:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/jdepend/framework/ClassFileParser.java:199:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/jdepend/framework/ClassFileParser.java:199:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/jdepend/framework/ClassFileParser.java:205:	LocalVariableCouldBeFinal: Local variable 'entryIndex' could be declared final
src/jdepend/framework/ClassFileParser.java:205:	LocalVariableCouldBeFinal: Local variable 'entryIndex' could be declared final
src/jdepend/framework/ClassFileParser.java:206:	LocalVariableCouldBeFinal: Local variable 'superClassName' could be declared final
src/jdepend/framework/ClassFileParser.java:206:	LocalVariableCouldBeFinal: Local variable 'superClassName' could be declared final
src/jdepend/framework/ClassFileParser.java:209:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/jdepend/framework/ClassFileParser.java:209:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/jdepend/framework/ClassFileParser.java:215:	LocalVariableCouldBeFinal: Local variable 'interfacesCount' could be declared final
src/jdepend/framework/ClassFileParser.java:215:	LocalVariableCouldBeFinal: Local variable 'interfacesCount' could be declared final
src/jdepend/framework/ClassFileParser.java:216:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'interfaceNames' (lines '216'-'219').
src/jdepend/framework/ClassFileParser.java:216:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'interfaceNames' (lines '216'-'219').
src/jdepend/framework/ClassFileParser.java:218:	LocalVariableCouldBeFinal: Local variable 'entryIndex' could be declared final
src/jdepend/framework/ClassFileParser.java:218:	LocalVariableCouldBeFinal: Local variable 'entryIndex' could be declared final
src/jdepend/framework/ClassFileParser.java:220:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:220:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:220:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:220:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:222:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/jdepend/framework/ClassFileParser.java:222:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/jdepend/framework/ClassFileParser.java:222:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:222:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:229:	LocalVariableCouldBeFinal: Local variable 'fieldsCount' could be declared final
src/jdepend/framework/ClassFileParser.java:229:	LocalVariableCouldBeFinal: Local variable 'fieldsCount' could be declared final
src/jdepend/framework/ClassFileParser.java:230:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'fields' (lines '230'-'232').
src/jdepend/framework/ClassFileParser.java:230:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'fields' (lines '230'-'232').
src/jdepend/framework/ClassFileParser.java:233:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:233:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:233:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:233:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:233:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:233:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:233:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:233:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:233:	LocalVariableCouldBeFinal: Local variable 'descriptor' could be declared final
src/jdepend/framework/ClassFileParser.java:233:	LocalVariableCouldBeFinal: Local variable 'descriptor' could be declared final
src/jdepend/framework/ClassFileParser.java:234:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/jdepend/framework/ClassFileParser.java:234:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/jdepend/framework/ClassFileParser.java:235:	LocalVariableCouldBeFinal: Local variable 'types' could be declared final
src/jdepend/framework/ClassFileParser.java:235:	LocalVariableCouldBeFinal: Local variable 'types' could be declared final
src/jdepend/framework/ClassFileParser.java:236:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/ClassFileParser.java:236:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/ClassFileParser.java:237:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:237:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:237:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:237:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:238:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/jdepend/framework/ClassFileParser.java:238:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/jdepend/framework/ClassFileParser.java:238:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:238:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:246:	LocalVariableCouldBeFinal: Local variable 'methodsCount' could be declared final
src/jdepend/framework/ClassFileParser.java:246:	LocalVariableCouldBeFinal: Local variable 'methodsCount' could be declared final
src/jdepend/framework/ClassFileParser.java:247:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'methods' (lines '247'-'249').
src/jdepend/framework/ClassFileParser.java:247:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'methods' (lines '247'-'249').
src/jdepend/framework/ClassFileParser.java:250:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:250:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:250:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:250:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:250:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:250:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:250:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:250:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:250:	LocalVariableCouldBeFinal: Local variable 'descriptor' could be declared final
src/jdepend/framework/ClassFileParser.java:250:	LocalVariableCouldBeFinal: Local variable 'descriptor' could be declared final
src/jdepend/framework/ClassFileParser.java:251:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/jdepend/framework/ClassFileParser.java:251:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/jdepend/framework/ClassFileParser.java:252:	LocalVariableCouldBeFinal: Local variable 'types' could be declared final
src/jdepend/framework/ClassFileParser.java:252:	LocalVariableCouldBeFinal: Local variable 'types' could be declared final
src/jdepend/framework/ClassFileParser.java:253:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/ClassFileParser.java:253:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/ClassFileParser.java:254:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:254:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:254:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:254:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:255:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:255:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:255:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:255:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:256:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/jdepend/framework/ClassFileParser.java:256:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/jdepend/framework/ClassFileParser.java:256:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:256:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:268:	LocalVariableCouldBeFinal: Local variable 'tag' could be declared final
src/jdepend/framework/ClassFileParser.java:268:	LocalVariableCouldBeFinal: Local variable 'tag' could be declared final
src/jdepend/framework/ClassFileParser.java:272:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:272:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:273:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:273:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:274:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:274:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:277:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:277:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:278:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:278:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:279:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:279:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:280:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:280:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:281:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:281:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:285:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:285:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:286:	IntegerInstantiation: Avoid instantiating Integer objects. Call Integer.valueOf() instead.
src/jdepend/framework/ClassFileParser.java:286:	IntegerInstantiation: Avoid instantiating Integer objects. Call Integer.valueOf() instead.
src/jdepend/framework/ClassFileParser.java:288:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:288:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:291:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:291:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:292:	LongInstantiation: Avoid instantiating Long objects.Call Long.valueOf() instead
src/jdepend/framework/ClassFileParser.java:292:	LongInstantiation: Avoid instantiating Long objects.Call Long.valueOf() instead
src/jdepend/framework/ClassFileParser.java:294:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:294:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:297:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:297:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:300:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:300:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:312:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/jdepend/framework/ClassFileParser.java:312:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/jdepend/framework/ClassFileParser.java:316:	LocalVariableCouldBeFinal: Local variable 'attributesCount' could be declared final
src/jdepend/framework/ClassFileParser.java:316:	LocalVariableCouldBeFinal: Local variable 'attributesCount' could be declared final
src/jdepend/framework/ClassFileParser.java:318:	LocalVariableCouldBeFinal: Local variable 'attribute' could be declared final
src/jdepend/framework/ClassFileParser.java:318:	LocalVariableCouldBeFinal: Local variable 'attribute' could be declared final
src/jdepend/framework/ClassFileParser.java:319:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:319:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:320:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:320:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:328:	LocalVariableCouldBeFinal: Local variable 'attributesCount' could be declared final
src/jdepend/framework/ClassFileParser.java:328:	LocalVariableCouldBeFinal: Local variable 'attributesCount' could be declared final
src/jdepend/framework/ClassFileParser.java:335:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:335:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:335:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:335:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:336:	CollapsibleIfStatements: These nested if statements could be combined
src/jdepend/framework/ClassFileParser.java:336:	CollapsibleIfStatements: These nested if statements could be combined
src/jdepend/framework/ClassFileParser.java:336:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:336:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:336:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:336:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:336:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:336:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:337:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:337:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:337:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:337:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:337:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
src/jdepend/framework/ClassFileParser.java:337:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
src/jdepend/framework/ClassFileParser.java:337:	ShortVariable: Avoid variables with short names like b
src/jdepend/framework/ClassFileParser.java:337:	ShortVariable: Avoid variables with short names like b
src/jdepend/framework/ClassFileParser.java:338:	LocalVariableCouldBeFinal: Local variable 'b0' could be declared final
src/jdepend/framework/ClassFileParser.java:338:	LocalVariableCouldBeFinal: Local variable 'b0' could be declared final
src/jdepend/framework/ClassFileParser.java:338:	ShortVariable: Avoid variables with short names like b0
src/jdepend/framework/ClassFileParser.java:338:	ShortVariable: Avoid variables with short names like b0
src/jdepend/framework/ClassFileParser.java:339:	LocalVariableCouldBeFinal: Local variable 'b1' could be declared final
src/jdepend/framework/ClassFileParser.java:339:	LocalVariableCouldBeFinal: Local variable 'b1' could be declared final
src/jdepend/framework/ClassFileParser.java:339:	ShortVariable: Avoid variables with short names like b1
src/jdepend/framework/ClassFileParser.java:339:	ShortVariable: Avoid variables with short names like b1
src/jdepend/framework/ClassFileParser.java:340:	LocalVariableCouldBeFinal: Local variable 'pe' could be declared final
src/jdepend/framework/ClassFileParser.java:340:	LocalVariableCouldBeFinal: Local variable 'pe' could be declared final
src/jdepend/framework/ClassFileParser.java:340:	ShortVariable: Avoid variables with short names like pe
src/jdepend/framework/ClassFileParser.java:340:	ShortVariable: Avoid variables with short names like pe
src/jdepend/framework/ClassFileParser.java:342:	LocalVariableCouldBeFinal: Local variable 'descriptor' could be declared final
src/jdepend/framework/ClassFileParser.java:342:	LocalVariableCouldBeFinal: Local variable 'descriptor' could be declared final
src/jdepend/framework/ClassFileParser.java:350:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/jdepend/framework/ClassFileParser.java:350:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/jdepend/framework/ClassFileParser.java:352:	LocalVariableCouldBeFinal: Local variable 'nameIndex' could be declared final
src/jdepend/framework/ClassFileParser.java:352:	LocalVariableCouldBeFinal: Local variable 'nameIndex' could be declared final
src/jdepend/framework/ClassFileParser.java:357:	LocalVariableCouldBeFinal: Local variable 'attributeLength' could be declared final
src/jdepend/framework/ClassFileParser.java:357:	LocalVariableCouldBeFinal: Local variable 'attributeLength' could be declared final
src/jdepend/framework/ClassFileParser.java:358:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'value' (lines '358'-'360').
src/jdepend/framework/ClassFileParser.java:358:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'value' (lines '358'-'360').
src/jdepend/framework/ClassFileParser.java:360:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'value' (lines '360'-'360').
src/jdepend/framework/ClassFileParser.java:360:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'value' (lines '360'-'360').
src/jdepend/framework/ClassFileParser.java:367:	MethodArgumentCouldBeFinal: Parameter 'entryIndex' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:367:	MethodArgumentCouldBeFinal: Parameter 'entryIndex' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:378:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:378:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:378:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:378:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:379:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:379:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:379:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:379:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:379:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:379:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:379:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:379:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:379:	LocalVariableCouldBeFinal: Local variable 'name' could be declared final
src/jdepend/framework/ClassFileParser.java:379:	LocalVariableCouldBeFinal: Local variable 'name' could be declared final
src/jdepend/framework/ClassFileParser.java:382:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/jdepend/framework/ClassFileParser.java:382:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/jdepend/framework/ClassFileParser.java:385:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:385:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:385:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:385:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:386:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:386:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:386:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:386:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:387:	AvoidReassigningLoopVariables: Avoid reassigning the loop control variable 'j'
src/jdepend/framework/ClassFileParser.java:387:	AvoidReassigningLoopVariables: Avoid reassigning the loop control variable 'j'
src/jdepend/framework/ClassFileParser.java:387:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'j' (lines '387'-'377').
src/jdepend/framework/ClassFileParser.java:387:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'j' (lines '387'-'377').
src/jdepend/framework/ClassFileParser.java:394:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:394:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:395:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:395:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:399:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:399:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:400:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:400:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:400:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:400:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:400:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:400:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:404:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:404:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:405:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:405:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:405:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:405:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:405:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:405:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:410:	MethodArgumentCouldBeFinal: Parameter 'annotation' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:410:	MethodArgumentCouldBeFinal: Parameter 'annotation' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:412:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:412:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:412:	LocalVariableCouldBeFinal: Local variable 'data' could be declared final
src/jdepend/framework/ClassFileParser.java:412:	LocalVariableCouldBeFinal: Local variable 'data' could be declared final
src/jdepend/framework/ClassFileParser.java:413:	LocalVariableCouldBeFinal: Local variable 'numAnnotations' could be declared final
src/jdepend/framework/ClassFileParser.java:413:	LocalVariableCouldBeFinal: Local variable 'numAnnotations' could be declared final
src/jdepend/framework/ClassFileParser.java:414:	LocalVariableCouldBeFinal: Local variable 'annotationIndex' could be declared final
src/jdepend/framework/ClassFileParser.java:414:	LocalVariableCouldBeFinal: Local variable 'annotationIndex' could be declared final
src/jdepend/framework/ClassFileParser.java:418:	AvoidReassigningParameters: Avoid reassigning parameters such as 'index'
src/jdepend/framework/ClassFileParser.java:418:	AvoidReassigningParameters: Avoid reassigning parameters such as 'index'
src/jdepend/framework/ClassFileParser.java:418:	AvoidReassigningParameters: Avoid reassigning parameters such as 'index'
src/jdepend/framework/ClassFileParser.java:418:	AvoidReassigningParameters: Avoid reassigning parameters such as 'index'
src/jdepend/framework/ClassFileParser.java:418:	AvoidReassigningParameters: Avoid reassigning parameters such as 'index'
src/jdepend/framework/ClassFileParser.java:418:	AvoidReassigningParameters: Avoid reassigning parameters such as 'index'
src/jdepend/framework/ClassFileParser.java:418:	AvoidReassigningParameters: Avoid reassigning parameters such as 'index'
src/jdepend/framework/ClassFileParser.java:418:	AvoidReassigningParameters: Avoid reassigning parameters such as 'index'
src/jdepend/framework/ClassFileParser.java:418:	MethodArgumentCouldBeFinal: Parameter 'data' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:418:	MethodArgumentCouldBeFinal: Parameter 'data' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:418:	MethodArgumentCouldBeFinal: Parameter 'numAnnotations' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:418:	MethodArgumentCouldBeFinal: Parameter 'numAnnotations' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:419:	LongVariable: Avoid excessively long variable names like visitedAnnotations
src/jdepend/framework/ClassFileParser.java:419:	LongVariable: Avoid excessively long variable names like visitedAnnotations
src/jdepend/framework/ClassFileParser.java:421:	LocalVariableCouldBeFinal: Local variable 'typeIndex' could be declared final
src/jdepend/framework/ClassFileParser.java:421:	LocalVariableCouldBeFinal: Local variable 'typeIndex' could be declared final
src/jdepend/framework/ClassFileParser.java:422:	LocalVariableCouldBeFinal: Local variable 'numElementValuePairs' could be declared final
src/jdepend/framework/ClassFileParser.java:422:	LocalVariableCouldBeFinal: Local variable 'numElementValuePairs' could be declared final
src/jdepend/framework/ClassFileParser.java:422:	LongVariable: Avoid excessively long variable names like numElementValuePairs
src/jdepend/framework/ClassFileParser.java:422:	LongVariable: Avoid excessively long variable names like numElementValuePairs
src/jdepend/framework/ClassFileParser.java:423:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:423:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:423:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:423:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:423:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:423:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:424:	LongVariable: Avoid excessively long variable names like visitedElementValuePairs
src/jdepend/framework/ClassFileParser.java:424:	LongVariable: Avoid excessively long variable names like visitedElementValuePairs
src/jdepend/framework/ClassFileParser.java:435:	AvoidReassigningParameters: Avoid reassigning parameters such as 'index'
src/jdepend/framework/ClassFileParser.java:435:	AvoidReassigningParameters: Avoid reassigning parameters such as 'index'
src/jdepend/framework/ClassFileParser.java:435:	AvoidReassigningParameters: Avoid reassigning parameters such as 'index'
src/jdepend/framework/ClassFileParser.java:435:	AvoidReassigningParameters: Avoid reassigning parameters such as 'index'
src/jdepend/framework/ClassFileParser.java:435:	AvoidReassigningParameters: Avoid reassigning parameters such as 'index'
src/jdepend/framework/ClassFileParser.java:435:	AvoidReassigningParameters: Avoid reassigning parameters such as 'index'
src/jdepend/framework/ClassFileParser.java:435:	AvoidReassigningParameters: Avoid reassigning parameters such as 'index'
src/jdepend/framework/ClassFileParser.java:435:	AvoidReassigningParameters: Avoid reassigning parameters such as 'index'
src/jdepend/framework/ClassFileParser.java:435:	AvoidReassigningParameters: Avoid reassigning parameters such as 'index'
src/jdepend/framework/ClassFileParser.java:435:	AvoidReassigningParameters: Avoid reassigning parameters such as 'index'
src/jdepend/framework/ClassFileParser.java:435:	AvoidReassigningParameters: Avoid reassigning parameters such as 'index'
src/jdepend/framework/ClassFileParser.java:435:	AvoidReassigningParameters: Avoid reassigning parameters such as 'index'
src/jdepend/framework/ClassFileParser.java:435:	AvoidReassigningParameters: Avoid reassigning parameters such as 'index'
src/jdepend/framework/ClassFileParser.java:435:	AvoidReassigningParameters: Avoid reassigning parameters such as 'index'
src/jdepend/framework/ClassFileParser.java:435:	MethodArgumentCouldBeFinal: Parameter 'data' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:435:	MethodArgumentCouldBeFinal: Parameter 'data' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:436:	LocalVariableCouldBeFinal: Local variable 'tag' could be declared final
src/jdepend/framework/ClassFileParser.java:436:	LocalVariableCouldBeFinal: Local variable 'tag' could be declared final
src/jdepend/framework/ClassFileParser.java:438:	SwitchStmtsShouldHaveDefault: Switch statements should have a default label
src/jdepend/framework/ClassFileParser.java:438:	SwitchStmtsShouldHaveDefault: Switch statements should have a default label
src/jdepend/framework/ClassFileParser.java:452:	LocalVariableCouldBeFinal: Local variable 'enumTypeIndex' could be declared final
src/jdepend/framework/ClassFileParser.java:452:	LocalVariableCouldBeFinal: Local variable 'enumTypeIndex' could be declared final
src/jdepend/framework/ClassFileParser.java:453:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:453:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:453:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:453:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:453:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:453:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:458:	LocalVariableCouldBeFinal: Local variable 'classInfoIndex' could be declared final
src/jdepend/framework/ClassFileParser.java:458:	LocalVariableCouldBeFinal: Local variable 'classInfoIndex' could be declared final
src/jdepend/framework/ClassFileParser.java:459:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:459:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:459:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:459:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:459:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:459:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:468:	LocalVariableCouldBeFinal: Local variable 'numValues' could be declared final
src/jdepend/framework/ClassFileParser.java:468:	LocalVariableCouldBeFinal: Local variable 'numValues' could be declared final
src/jdepend/framework/ClassFileParser.java:478:	MethodArgumentCouldBeFinal: Parameter 'data' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:478:	MethodArgumentCouldBeFinal: Parameter 'data' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:478:	MethodArgumentCouldBeFinal: Parameter 'index' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:478:	MethodArgumentCouldBeFinal: Parameter 'index' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:478:	ShortMethodName: Avoid using short method names
src/jdepend/framework/ClassFileParser.java:478:	ShortMethodName: Avoid using short method names
src/jdepend/framework/ClassFileParser.java:482:	MethodArgumentCouldBeFinal: Parameter 'entryIndex' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:482:	MethodArgumentCouldBeFinal: Parameter 'entryIndex' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:484:	LocalVariableCouldBeFinal: Local variable 'entry' could be declared final
src/jdepend/framework/ClassFileParser.java:484:	LocalVariableCouldBeFinal: Local variable 'entry' could be declared final
src/jdepend/framework/ClassFileParser.java:486:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/ClassFileParser.java:486:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/ClassFileParser.java:488:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/ClassFileParser.java:488:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/ClassFileParser.java:491:	MethodArgumentCouldBeFinal: Parameter 'entryIndex' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:491:	MethodArgumentCouldBeFinal: Parameter 'entryIndex' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:492:	LocalVariableCouldBeFinal: Local variable 'entry' could be declared final
src/jdepend/framework/ClassFileParser.java:492:	LocalVariableCouldBeFinal: Local variable 'entry' could be declared final
src/jdepend/framework/ClassFileParser.java:493:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/ClassFileParser.java:493:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/ClassFileParser.java:501:	MethodArgumentCouldBeFinal: Parameter 'importPackage' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:501:	MethodArgumentCouldBeFinal: Parameter 'importPackage' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:502:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:502:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:502:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:502:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:502:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:502:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:502:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:502:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:507:	MethodArgumentCouldBeFinal: Parameter 's' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:507:	MethodArgumentCouldBeFinal: Parameter 's' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:507:	ShortVariable: Avoid variables with short names like s
src/jdepend/framework/ClassFileParser.java:507:	ShortVariable: Avoid variables with short names like s
src/jdepend/framework/ClassFileParser.java:511:	AvoidReassigningParameters: Avoid reassigning parameters such as 's'
src/jdepend/framework/ClassFileParser.java:511:	AvoidReassigningParameters: Avoid reassigning parameters such as 's'
src/jdepend/framework/ClassFileParser.java:511:	AvoidReassigningParameters: Avoid reassigning parameters such as 's'
src/jdepend/framework/ClassFileParser.java:511:	AvoidReassigningParameters: Avoid reassigning parameters such as 's'
src/jdepend/framework/ClassFileParser.java:511:	ShortVariable: Avoid variables with short names like s
src/jdepend/framework/ClassFileParser.java:511:	ShortVariable: Avoid variables with short names like s
src/jdepend/framework/ClassFileParser.java:512:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:512:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:512:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:512:	UselessParentheses: Useless parentheses.
src/jdepend/framework/ClassFileParser.java:513:	LocalVariableCouldBeFinal: Local variable 'types' could be declared final
src/jdepend/framework/ClassFileParser.java:513:	LocalVariableCouldBeFinal: Local variable 'types' could be declared final
src/jdepend/framework/ClassFileParser.java:515:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/ClassFileParser.java:515:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/ClassFileParser.java:522:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/ClassFileParser.java:522:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/ClassFileParser.java:522:	LocalVariableCouldBeFinal: Local variable 'index' could be declared final
src/jdepend/framework/ClassFileParser.java:522:	LocalVariableCouldBeFinal: Local variable 'index' could be declared final
src/jdepend/framework/ClassFileParser.java:522:	UseIndexOfChar: String.indexOf(char) is faster than String.indexOf(String).
src/jdepend/framework/ClassFileParser.java:522:	UseIndexOfChar: String.indexOf(char) is faster than String.indexOf(String).
src/jdepend/framework/ClassFileParser.java:524:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/ClassFileParser.java:524:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/ClassFileParser.java:530:	MethodArgumentCouldBeFinal: Parameter 'descriptor' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:530:	MethodArgumentCouldBeFinal: Parameter 'descriptor' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:532:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'typesCount' (lines '532'-'535').
src/jdepend/framework/ClassFileParser.java:532:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'typesCount' (lines '532'-'535').
src/jdepend/framework/ClassFileParser.java:534:	AvoidLiteralsInIfCondition: Avoid using Literals in Conditional Statements
src/jdepend/framework/ClassFileParser.java:534:	AvoidLiteralsInIfCondition: Avoid using Literals in Conditional Statements
src/jdepend/framework/ClassFileParser.java:535:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'typesCount' (lines '535'-'535').
src/jdepend/framework/ClassFileParser.java:535:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'typesCount' (lines '535'-'535').
src/jdepend/framework/ClassFileParser.java:539:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'types' (lines '539'-'550').
src/jdepend/framework/ClassFileParser.java:539:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'types' (lines '539'-'550').
src/jdepend/framework/ClassFileParser.java:541:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'typeIndex' (lines '541'-'554').
src/jdepend/framework/ClassFileParser.java:541:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'typeIndex' (lines '541'-'554').
src/jdepend/framework/ClassFileParser.java:544:	LocalVariableCouldBeFinal: Local variable 'startIndex' could be declared final
src/jdepend/framework/ClassFileParser.java:544:	LocalVariableCouldBeFinal: Local variable 'startIndex' could be declared final
src/jdepend/framework/ClassFileParser.java:549:	AvoidReassigningLoopVariables: Avoid reassigning the loop control variable 'index'
src/jdepend/framework/ClassFileParser.java:549:	AvoidReassigningLoopVariables: Avoid reassigning the loop control variable 'index'
src/jdepend/framework/ClassFileParser.java:550:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'types' (lines '550'-'550').
src/jdepend/framework/ClassFileParser.java:550:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'types' (lines '550'-'550').
src/jdepend/framework/ClassFileParser.java:556:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the Constant nested class if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:556:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the Constant nested class if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:556:	CommentRequired: Header comments are required
src/jdepend/framework/ClassFileParser.java:556:	CommentRequired: Header comments are required
src/jdepend/framework/ClassFileParser.java:558:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:558:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:558:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:558:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:560:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:560:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:560:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:560:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:562:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:562:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:562:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:562:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:564:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:564:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:564:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:564:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:566:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the Constant constructor if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:566:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the Constant constructor if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:566:	MethodArgumentCouldBeFinal: Parameter 'nameIndex' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:566:	MethodArgumentCouldBeFinal: Parameter 'nameIndex' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:566:	MethodArgumentCouldBeFinal: Parameter 'tag' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:566:	MethodArgumentCouldBeFinal: Parameter 'tag' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:570:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the Constant constructor if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:570:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the Constant constructor if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:570:	MethodArgumentCouldBeFinal: Parameter 'tag' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:570:	MethodArgumentCouldBeFinal: Parameter 'tag' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:570:	MethodArgumentCouldBeFinal: Parameter 'value' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:570:	MethodArgumentCouldBeFinal: Parameter 'value' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:575:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the Constant constructor if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:575:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the Constant constructor if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:575:	MethodArgumentCouldBeFinal: Parameter 'nameIndex' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:575:	MethodArgumentCouldBeFinal: Parameter 'nameIndex' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:575:	MethodArgumentCouldBeFinal: Parameter 'tag' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:575:	MethodArgumentCouldBeFinal: Parameter 'tag' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:575:	MethodArgumentCouldBeFinal: Parameter 'typeIndex' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:575:	MethodArgumentCouldBeFinal: Parameter 'typeIndex' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:579:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/jdepend/framework/ClassFileParser.java:579:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/jdepend/framework/ClassFileParser.java:582:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the getTag method if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:582:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the getTag method if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:582:	DefaultPackage: Use explicit scoping instead of the default package private level
src/jdepend/framework/ClassFileParser.java:582:	DefaultPackage: Use explicit scoping instead of the default package private level
src/jdepend/framework/ClassFileParser.java:586:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the getNameIndex method if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:586:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the getNameIndex method if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:586:	DefaultPackage: Use explicit scoping instead of the default package private level
src/jdepend/framework/ClassFileParser.java:586:	DefaultPackage: Use explicit scoping instead of the default package private level
src/jdepend/framework/ClassFileParser.java:590:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the getTypeIndex method if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:590:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the getTypeIndex method if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:590:	DefaultPackage: Use explicit scoping instead of the default package private level
src/jdepend/framework/ClassFileParser.java:590:	DefaultPackage: Use explicit scoping instead of the default package private level
src/jdepend/framework/ClassFileParser.java:594:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the getValue method if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:594:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the getValue method if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:594:	DefaultPackage: Use explicit scoping instead of the default package private level
src/jdepend/framework/ClassFileParser.java:594:	DefaultPackage: Use explicit scoping instead of the default package private level
src/jdepend/framework/ClassFileParser.java:598:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/ClassFileParser.java:598:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/ClassFileParser.java:598:	MissingOverride: The method 'toString()' is missing an @Override annotation.
src/jdepend/framework/ClassFileParser.java:598:	MissingOverride: The method 'toString()' is missing an @Override annotation.
src/jdepend/framework/ClassFileParser.java:600:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/framework/ClassFileParser.java:600:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/framework/ClassFileParser.java:600:	InsufficientStringBufferDeclaration: StringBuffer constructor is initialized with size 16, but has at least 37 characters appended.
src/jdepend/framework/ClassFileParser.java:600:	InsufficientStringBufferDeclaration: StringBuffer constructor is initialized with size 16, but has at least 37 characters appended.
src/jdepend/framework/ClassFileParser.java:600:	LocalVariableCouldBeFinal: Local variable 's' could be declared final
src/jdepend/framework/ClassFileParser.java:600:	LocalVariableCouldBeFinal: Local variable 's' could be declared final
src/jdepend/framework/ClassFileParser.java:600:	ShortVariable: Avoid variables with short names like s
src/jdepend/framework/ClassFileParser.java:600:	ShortVariable: Avoid variables with short names like s
src/jdepend/framework/ClassFileParser.java:602:	InefficientStringBuffering: Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append().
src/jdepend/framework/ClassFileParser.java:602:	InefficientStringBuffering: Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append().
src/jdepend/framework/ClassFileParser.java:605:	InefficientStringBuffering: Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append().
src/jdepend/framework/ClassFileParser.java:605:	InefficientStringBuffering: Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append().
src/jdepend/framework/ClassFileParser.java:609:	InefficientStringBuffering: Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append().
src/jdepend/framework/ClassFileParser.java:609:	InefficientStringBuffering: Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append().
src/jdepend/framework/ClassFileParser.java:613:	InefficientStringBuffering: Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append().
src/jdepend/framework/ClassFileParser.java:613:	InefficientStringBuffering: Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append().
src/jdepend/framework/ClassFileParser.java:620:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the FieldOrMethodInfo nested class if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:620:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the FieldOrMethodInfo nested class if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:620:	CommentRequired: Header comments are required
src/jdepend/framework/ClassFileParser.java:620:	CommentRequired: Header comments are required
src/jdepend/framework/ClassFileParser.java:622:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:622:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:622:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:622:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:622:	ImmutableField: Private field '_accessFlags' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/framework/ClassFileParser.java:622:	ImmutableField: Private field '_accessFlags' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/framework/ClassFileParser.java:624:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:624:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:624:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:624:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:624:	ImmutableField: Private field '_nameIndex' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/framework/ClassFileParser.java:624:	ImmutableField: Private field '_nameIndex' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/framework/ClassFileParser.java:626:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:626:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:626:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:626:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:626:	ImmutableField: Private field '_descriptorIndex' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/framework/ClassFileParser.java:626:	ImmutableField: Private field '_descriptorIndex' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/framework/ClassFileParser.java:628:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:628:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/ClassFileParser.java:628:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:628:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:628:	LongVariable: Avoid excessively long variable names like _runtimeVisibleAnnotations
src/jdepend/framework/ClassFileParser.java:628:	LongVariable: Avoid excessively long variable names like _runtimeVisibleAnnotations
src/jdepend/framework/ClassFileParser.java:630:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the FieldOrMethodInfo constructor if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:630:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the FieldOrMethodInfo constructor if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:630:	MethodArgumentCouldBeFinal: Parameter 'accessFlags' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:630:	MethodArgumentCouldBeFinal: Parameter 'accessFlags' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:630:	MethodArgumentCouldBeFinal: Parameter 'descriptorIndex' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:630:	MethodArgumentCouldBeFinal: Parameter 'descriptorIndex' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:630:	MethodArgumentCouldBeFinal: Parameter 'nameIndex' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:630:	MethodArgumentCouldBeFinal: Parameter 'nameIndex' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:637:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the accessFlags method if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:637:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the accessFlags method if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:637:	DefaultPackage: Use explicit scoping instead of the default package private level
src/jdepend/framework/ClassFileParser.java:637:	DefaultPackage: Use explicit scoping instead of the default package private level
src/jdepend/framework/ClassFileParser.java:641:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the getNameIndex method if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:641:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the getNameIndex method if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:641:	DefaultPackage: Use explicit scoping instead of the default package private level
src/jdepend/framework/ClassFileParser.java:641:	DefaultPackage: Use explicit scoping instead of the default package private level
src/jdepend/framework/ClassFileParser.java:645:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the getDescriptorIndex method if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:645:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the getDescriptorIndex method if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:645:	DefaultPackage: Use explicit scoping instead of the default package private level
src/jdepend/framework/ClassFileParser.java:645:	DefaultPackage: Use explicit scoping instead of the default package private level
src/jdepend/framework/ClassFileParser.java:649:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/ClassFileParser.java:649:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/ClassFileParser.java:649:	MissingOverride: The method 'toString()' is missing an @Override annotation.
src/jdepend/framework/ClassFileParser.java:649:	MissingOverride: The method 'toString()' is missing an @Override annotation.
src/jdepend/framework/ClassFileParser.java:650:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/framework/ClassFileParser.java:650:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/framework/ClassFileParser.java:650:	InsufficientStringBufferDeclaration: StringBuffer constructor is initialized with size 16, but has at least 56 characters appended.
src/jdepend/framework/ClassFileParser.java:650:	InsufficientStringBufferDeclaration: StringBuffer constructor is initialized with size 16, but has at least 56 characters appended.
src/jdepend/framework/ClassFileParser.java:650:	LocalVariableCouldBeFinal: Local variable 's' could be declared final
src/jdepend/framework/ClassFileParser.java:650:	LocalVariableCouldBeFinal: Local variable 's' could be declared final
src/jdepend/framework/ClassFileParser.java:650:	ShortVariable: Avoid variables with short names like s
src/jdepend/framework/ClassFileParser.java:650:	ShortVariable: Avoid variables with short names like s
src/jdepend/framework/ClassFileParser.java:655:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:655:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:658:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:658:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:660:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:660:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:660:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:660:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/framework/ClassFileParser.java:660:	LocalVariableCouldBeFinal: Local variable 'types' could be declared final
src/jdepend/framework/ClassFileParser.java:660:	LocalVariableCouldBeFinal: Local variable 'types' could be declared final
src/jdepend/framework/ClassFileParser.java:661:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/ClassFileParser.java:661:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/ClassFileParser.java:662:	InefficientStringBuffering: Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append().
src/jdepend/framework/ClassFileParser.java:662:	InefficientStringBuffering: Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append().
src/jdepend/framework/ClassFileParser.java:665:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/jdepend/framework/ClassFileParser.java:665:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/jdepend/framework/ClassFileParser.java:666:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/jdepend/framework/ClassFileParser.java:666:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/jdepend/framework/ClassFileParser.java:673:	AtLeastOneConstructor: Each class should declare at least one constructor
src/jdepend/framework/ClassFileParser.java:673:	AtLeastOneConstructor: Each class should declare at least one constructor
src/jdepend/framework/ClassFileParser.java:673:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the AttributeInfo nested class if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:673:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the AttributeInfo nested class if you want a default access modifier
src/jdepend/framework/ClassFileParser.java:673:	CommentRequired: Header comments are required
src/jdepend/framework/ClassFileParser.java:673:	CommentRequired: Header comments are required
src/jdepend/framework/ClassFileParser.java:673:	DataClass: The class 'AttributeInfo' is suspected to be a Data Class (WOC=0.000%, NOPA=0, NOAM=4, WMC=4)
src/jdepend/framework/ClassFileParser.java:673:	DataClass: The class 'AttributeInfo' is suspected to be a Data Class (WOC=0.000%, NOPA=0, NOAM=4, WMC=4)
src/jdepend/framework/ClassFileParser.java:675:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:675:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:677:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:677:	CommentRequired: Field comments are required
src/jdepend/framework/ClassFileParser.java:679:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:679:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:687:	ArrayIsStoredDirectly: The user-supplied array 'value' is stored directly.
src/jdepend/framework/ClassFileParser.java:687:	ArrayIsStoredDirectly: The user-supplied array 'value' is stored directly.
src/jdepend/framework/ClassFileParser.java:687:	MethodArgumentCouldBeFinal: Parameter 'value' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:687:	MethodArgumentCouldBeFinal: Parameter 'value' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:692:	MethodReturnsInternalArray: Returning 'value' may expose an internal array.
src/jdepend/framework/ClassFileParser.java:692:	MethodReturnsInternalArray: Returning 'value' may expose an internal array.
src/jdepend/framework/ClassFileParser.java:701:	MissingOverride: The method 'toString()' is missing an @Override annotation.
src/jdepend/framework/ClassFileParser.java:701:	MissingOverride: The method 'toString()' is missing an @Override annotation.
src/jdepend/framework/ClassFileParser.java:703:	InsufficientStringBufferDeclaration: StringBuffer constructor is initialized with size 16, but has at least 128 characters appended.
src/jdepend/framework/ClassFileParser.java:703:	InsufficientStringBufferDeclaration: StringBuffer constructor is initialized with size 16, but has at least 128 characters appended.
src/jdepend/framework/ClassFileParser.java:703:	LocalVariableCouldBeFinal: Local variable 's' could be declared final
src/jdepend/framework/ClassFileParser.java:703:	LocalVariableCouldBeFinal: Local variable 's' could be declared final
src/jdepend/framework/ClassFileParser.java:703:	ShortVariable: Avoid variables with short names like s
src/jdepend/framework/ClassFileParser.java:703:	ShortVariable: Avoid variables with short names like s
src/jdepend/framework/ClassFileParser.java:707:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/framework/ClassFileParser.java:707:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/framework/ClassFileParser.java:711:	LocalVariableCouldBeFinal: Local variable 'entry' could be declared final
src/jdepend/framework/ClassFileParser.java:711:	LocalVariableCouldBeFinal: Local variable 'entry' could be declared final
src/jdepend/framework/ClassFileParser.java:712:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/ClassFileParser.java:712:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/ClassFileParser.java:713:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/ClassFileParser.java:713:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/ClassFileParser.java:714:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/ClassFileParser.java:714:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/ClassFileParser.java:715:	AvoidReassigningLoopVariables: Avoid reassigning the loop control variable 'i'
src/jdepend/framework/ClassFileParser.java:715:	AvoidReassigningLoopVariables: Avoid reassigning the loop control variable 'i'
src/jdepend/framework/ClassFileParser.java:715:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'i' (lines '715'-'710').
src/jdepend/framework/ClassFileParser.java:715:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'i' (lines '715'-'710').
src/jdepend/framework/ClassFileParser.java:719:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/framework/ClassFileParser.java:719:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/framework/ClassFileParser.java:722:	InefficientStringBuffering: Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append().
src/jdepend/framework/ClassFileParser.java:722:	InefficientStringBuffering: Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append().
src/jdepend/framework/ClassFileParser.java:723:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/ClassFileParser.java:723:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/ClassFileParser.java:728:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/ClassFileParser.java:728:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/ClassFileParser.java:729:	InefficientStringBuffering: Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append().
src/jdepend/framework/ClassFileParser.java:729:	InefficientStringBuffering: Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append().
src/jdepend/framework/ClassFileParser.java:729:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:729:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:729:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:729:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:733:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/ClassFileParser.java:733:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/ClassFileParser.java:734:	InefficientStringBuffering: Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append().
src/jdepend/framework/ClassFileParser.java:734:	InefficientStringBuffering: Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append().
src/jdepend/framework/ClassFileParser.java:734:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:734:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:734:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:734:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:738:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:738:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ClassFileParser.java:738:	LocalVariableCouldBeFinal: Local variable 'imports' could be declared final
src/jdepend/framework/ClassFileParser.java:738:	LocalVariableCouldBeFinal: Local variable 'imports' could be declared final
src/jdepend/framework/ClassFileParser.java:740:	LocalVariableCouldBeFinal: Local variable 'jPackage' could be declared final
src/jdepend/framework/ClassFileParser.java:740:	LocalVariableCouldBeFinal: Local variable 'jPackage' could be declared final
src/jdepend/framework/ClassFileParser.java:741:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/ClassFileParser.java:741:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/ClassFileParser.java:744:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/jdepend/framework/ClassFileParser.java:744:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/jdepend/framework/ClassFileParser.java:745:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/jdepend/framework/ClassFileParser.java:745:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/jdepend/framework/ClassFileParser.java:754:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:754:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
src/jdepend/framework/ClassFileParser.java:760:	SystemPrintln: System.err.println is used
src/jdepend/framework/ClassFileParser.java:760:	SystemPrintln: System.err.println is used
src/jdepend/framework/ClassFileParser.java:761:	DoNotCallSystemExit: System.exit() should not be used in J2EE/JEE apps
src/jdepend/framework/ClassFileParser.java:761:	DoNotCallSystemExit: System.exit() should not be used in J2EE/JEE apps
src/jdepend/framework/ClassFileParser.java:764:	LocalVariableCouldBeFinal: Local variable 'parser' could be declared final
src/jdepend/framework/ClassFileParser.java:764:	LocalVariableCouldBeFinal: Local variable 'parser' could be declared final
src/jdepend/framework/ClassFileParser.java:768:	SystemPrintln: System.err.println is used
src/jdepend/framework/ClassFileParser.java:768:	SystemPrintln: System.err.println is used
src/jdepend/framework/ClassFileParser.java:770:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/jdepend/framework/ClassFileParser.java:770:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/jdepend/framework/ClassFileParser.java:771:	SystemPrintln: System.err.println is used
src/jdepend/framework/ClassFileParser.java:771:	SystemPrintln: System.err.println is used
src/jdepend/framework/DependencyConstraint.java:5:	ImportFromSamePackage: No need to import a type that lives in the same package
src/jdepend/framework/DependencyConstraint.java:5:	ImportFromSamePackage: No need to import a type that lives in the same package
src/jdepend/framework/DependencyConstraint.java:7:	CommentSize: Comment is too large: Too many lines
src/jdepend/framework/DependencyConstraint.java:7:	CommentSize: Comment is too large: Too many lines
src/jdepend/framework/DependencyConstraint.java:48:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/DependencyConstraint.java:48:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/DependencyConstraint.java:48:	CommentRequired: Field comments are required
src/jdepend/framework/DependencyConstraint.java:48:	CommentRequired: Field comments are required
src/jdepend/framework/DependencyConstraint.java:48:	ImmutableField: Private field 'packages' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/framework/DependencyConstraint.java:48:	ImmutableField: Private field 'packages' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/framework/DependencyConstraint.java:48:	LooseCoupling: Avoid using implementation types like 'HashMap'; use the interface instead
src/jdepend/framework/DependencyConstraint.java:48:	LooseCoupling: Avoid using implementation types like 'HashMap'; use the interface instead
src/jdepend/framework/DependencyConstraint.java:50:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/DependencyConstraint.java:50:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/DependencyConstraint.java:54:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/DependencyConstraint.java:54:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/DependencyConstraint.java:54:	MethodArgumentCouldBeFinal: Parameter 'packageName' is not assigned and could be declared final
src/jdepend/framework/DependencyConstraint.java:54:	MethodArgumentCouldBeFinal: Parameter 'packageName' is not assigned and could be declared final
src/jdepend/framework/DependencyConstraint.java:63:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/DependencyConstraint.java:63:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/DependencyConstraint.java:63:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/framework/DependencyConstraint.java:63:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/framework/DependencyConstraint.java:79:	MethodArgumentCouldBeFinal: Parameter 'expectedPackages' is not assigned and could be declared final
src/jdepend/framework/DependencyConstraint.java:79:	MethodArgumentCouldBeFinal: Parameter 'expectedPackages' is not assigned and could be declared final
src/jdepend/framework/DependencyConstraint.java:83:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/DependencyConstraint.java:83:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/DependencyConstraint.java:83:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/DependencyConstraint.java:83:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/DependencyConstraint.java:84:	LocalVariableCouldBeFinal: Local variable 'next' could be declared final
src/jdepend/framework/DependencyConstraint.java:84:	LocalVariableCouldBeFinal: Local variable 'next' could be declared final
src/jdepend/framework/DependencyConstraint.java:86:	LocalVariableCouldBeFinal: Local variable 'nextPackage' could be declared final
src/jdepend/framework/DependencyConstraint.java:86:	LocalVariableCouldBeFinal: Local variable 'nextPackage' could be declared final
src/jdepend/framework/DependencyConstraint.java:88:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/DependencyConstraint.java:88:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/DependencyConstraint.java:94:	AvoidBranchingStatementAsLastInLoop: Avoid using a branching statement as the last in a loop.
src/jdepend/framework/DependencyConstraint.java:94:	AvoidBranchingStatementAsLastInLoop: Avoid using a branching statement as the last in a loop.
src/jdepend/framework/DependencyConstraint.java:94:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/DependencyConstraint.java:94:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/DependencyConstraint.java:101:	MethodArgumentCouldBeFinal: Parameter 'expectedPackage' is not assigned and could be declared final
src/jdepend/framework/DependencyConstraint.java:101:	MethodArgumentCouldBeFinal: Parameter 'expectedPackage' is not assigned and could be declared final
src/jdepend/framework/DependencyConstraint.java:103:	LocalVariableCouldBeFinal: Local variable 'actualPackage' could be declared final
src/jdepend/framework/DependencyConstraint.java:103:	LocalVariableCouldBeFinal: Local variable 'actualPackage' could be declared final
src/jdepend/framework/DependencyConstraint.java:107:	CollapsibleIfStatements: These nested if statements could be combined
src/jdepend/framework/DependencyConstraint.java:107:	CollapsibleIfStatements: These nested if statements could be combined
src/jdepend/framework/DependencyConstraint.java:108:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/DependencyConstraint.java:108:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/DependencyConstraint.java:115:	MethodArgumentCouldBeFinal: Parameter 'a' is not assigned and could be declared final
src/jdepend/framework/DependencyConstraint.java:115:	MethodArgumentCouldBeFinal: Parameter 'a' is not assigned and could be declared final
src/jdepend/framework/DependencyConstraint.java:115:	MethodArgumentCouldBeFinal: Parameter 'b' is not assigned and could be declared final
src/jdepend/framework/DependencyConstraint.java:115:	MethodArgumentCouldBeFinal: Parameter 'b' is not assigned and could be declared final
src/jdepend/framework/DependencyConstraint.java:115:	ShortVariable: Avoid variables with short names like a
src/jdepend/framework/DependencyConstraint.java:115:	ShortVariable: Avoid variables with short names like a
src/jdepend/framework/DependencyConstraint.java:115:	ShortVariable: Avoid variables with short names like b
src/jdepend/framework/DependencyConstraint.java:115:	ShortVariable: Avoid variables with short names like b
src/jdepend/framework/DependencyConstraint.java:119:	MethodArgumentCouldBeFinal: Parameter 'a' is not assigned and could be declared final
src/jdepend/framework/DependencyConstraint.java:119:	MethodArgumentCouldBeFinal: Parameter 'a' is not assigned and could be declared final
src/jdepend/framework/DependencyConstraint.java:119:	MethodArgumentCouldBeFinal: Parameter 'b' is not assigned and could be declared final
src/jdepend/framework/DependencyConstraint.java:119:	MethodArgumentCouldBeFinal: Parameter 'b' is not assigned and could be declared final
src/jdepend/framework/DependencyConstraint.java:119:	ShortVariable: Avoid variables with short names like a
src/jdepend/framework/DependencyConstraint.java:119:	ShortVariable: Avoid variables with short names like a
src/jdepend/framework/DependencyConstraint.java:119:	ShortVariable: Avoid variables with short names like b
src/jdepend/framework/DependencyConstraint.java:119:	ShortVariable: Avoid variables with short names like b
src/jdepend/framework/DependencyConstraint.java:123:	LocalVariableCouldBeFinal: Local variable 'otherAfferents' could be declared final
src/jdepend/framework/DependencyConstraint.java:123:	LocalVariableCouldBeFinal: Local variable 'otherAfferents' could be declared final
src/jdepend/framework/DependencyConstraint.java:125:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/DependencyConstraint.java:125:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/DependencyConstraint.java:125:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/DependencyConstraint.java:125:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/DependencyConstraint.java:126:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/DependencyConstraint.java:126:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/DependencyConstraint.java:126:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/DependencyConstraint.java:126:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/DependencyConstraint.java:126:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/DependencyConstraint.java:126:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/DependencyConstraint.java:127:	LocalVariableCouldBeFinal: Local variable 'afferent' could be declared final
src/jdepend/framework/DependencyConstraint.java:127:	LocalVariableCouldBeFinal: Local variable 'afferent' could be declared final
src/jdepend/framework/DependencyConstraint.java:128:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/DependencyConstraint.java:128:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/DependencyConstraint.java:129:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/DependencyConstraint.java:129:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/DependencyConstraint.java:133:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/DependencyConstraint.java:133:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/DependencyConstraint.java:140:	MethodArgumentCouldBeFinal: Parameter 'a' is not assigned and could be declared final
src/jdepend/framework/DependencyConstraint.java:140:	MethodArgumentCouldBeFinal: Parameter 'a' is not assigned and could be declared final
src/jdepend/framework/DependencyConstraint.java:140:	MethodArgumentCouldBeFinal: Parameter 'b' is not assigned and could be declared final
src/jdepend/framework/DependencyConstraint.java:140:	MethodArgumentCouldBeFinal: Parameter 'b' is not assigned and could be declared final
src/jdepend/framework/DependencyConstraint.java:140:	ShortVariable: Avoid variables with short names like a
src/jdepend/framework/DependencyConstraint.java:140:	ShortVariable: Avoid variables with short names like a
src/jdepend/framework/DependencyConstraint.java:140:	ShortVariable: Avoid variables with short names like b
src/jdepend/framework/DependencyConstraint.java:140:	ShortVariable: Avoid variables with short names like b
src/jdepend/framework/DependencyConstraint.java:144:	LocalVariableCouldBeFinal: Local variable 'otherEfferents' could be declared final
src/jdepend/framework/DependencyConstraint.java:144:	LocalVariableCouldBeFinal: Local variable 'otherEfferents' could be declared final
src/jdepend/framework/DependencyConstraint.java:146:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/DependencyConstraint.java:146:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/DependencyConstraint.java:146:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/DependencyConstraint.java:146:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/DependencyConstraint.java:147:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/DependencyConstraint.java:147:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/DependencyConstraint.java:147:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/DependencyConstraint.java:147:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/DependencyConstraint.java:147:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/DependencyConstraint.java:147:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/DependencyConstraint.java:148:	LocalVariableCouldBeFinal: Local variable 'efferent' could be declared final
src/jdepend/framework/DependencyConstraint.java:148:	LocalVariableCouldBeFinal: Local variable 'efferent' could be declared final
src/jdepend/framework/DependencyConstraint.java:149:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/DependencyConstraint.java:149:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/DependencyConstraint.java:150:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/DependencyConstraint.java:150:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/DependencyConstraint.java:154:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/DependencyConstraint.java:154:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/FileManager.java:17:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/FileManager.java:17:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/FileManager.java:17:	CommentRequired: Field comments are required
src/jdepend/framework/FileManager.java:17:	CommentRequired: Field comments are required
src/jdepend/framework/FileManager.java:17:	ImmutableField: Private field 'directories' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/framework/FileManager.java:17:	ImmutableField: Private field 'directories' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/framework/FileManager.java:17:	LooseCoupling: Avoid using implementation types like 'ArrayList'; use the interface instead
src/jdepend/framework/FileManager.java:17:	LooseCoupling: Avoid using implementation types like 'ArrayList'; use the interface instead
src/jdepend/framework/FileManager.java:18:	AvoidFieldNameMatchingMethodName: Field acceptInnerClasses has the same name as a method
src/jdepend/framework/FileManager.java:18:	AvoidFieldNameMatchingMethodName: Field acceptInnerClasses has the same name as a method
src/jdepend/framework/FileManager.java:18:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/FileManager.java:18:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/FileManager.java:18:	CommentRequired: Field comments are required
src/jdepend/framework/FileManager.java:18:	CommentRequired: Field comments are required
src/jdepend/framework/FileManager.java:18:	LongVariable: Avoid excessively long variable names like acceptInnerClasses
src/jdepend/framework/FileManager.java:18:	LongVariable: Avoid excessively long variable names like acceptInnerClasses
src/jdepend/framework/FileManager.java:21:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/FileManager.java:21:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/FileManager.java:32:	MethodArgumentCouldBeFinal: Parameter 'b' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:32:	MethodArgumentCouldBeFinal: Parameter 'b' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:32:	ShortVariable: Avoid variables with short names like b
src/jdepend/framework/FileManager.java:32:	ShortVariable: Avoid variables with short names like b
src/jdepend/framework/FileManager.java:36:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/FileManager.java:36:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/FileManager.java:36:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:36:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:38:	LocalVariableCouldBeFinal: Local variable 'directory' could be declared final
src/jdepend/framework/FileManager.java:38:	LocalVariableCouldBeFinal: Local variable 'directory' could be declared final
src/jdepend/framework/FileManager.java:47:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/FileManager.java:47:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/FileManager.java:47:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:47:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:51:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/FileManager.java:51:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/FileManager.java:51:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:51:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:53:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/FileManager.java:53:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/FileManager.java:58:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/FileManager.java:58:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/FileManager.java:58:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:58:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:61:	CollapsibleIfStatements: These nested if statements could be combined
src/jdepend/framework/FileManager.java:61:	CollapsibleIfStatements: These nested if statements could be combined
src/jdepend/framework/FileManager.java:61:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/FileManager.java:61:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/FileManager.java:61:	UseLocaleWithCaseConversions: When doing a String.toLowerCase()/toUpperCase() call, use a Locale
src/jdepend/framework/FileManager.java:61:	UseLocaleWithCaseConversions: When doing a String.toLowerCase()/toUpperCase() call, use a Locale
src/jdepend/framework/FileManager.java:62:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/FileManager.java:62:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/FileManager.java:66:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/FileManager.java:66:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/FileManager.java:66:	SimplifyBooleanReturns: Avoid unnecessary if..then..else statements when returning booleans
src/jdepend/framework/FileManager.java:66:	SimplifyBooleanReturns: Avoid unnecessary if..then..else statements when returning booleans
src/jdepend/framework/FileManager.java:66:	UseLocaleWithCaseConversions: When doing a String.toLowerCase()/toUpperCase() call, use a Locale
src/jdepend/framework/FileManager.java:66:	UseLocaleWithCaseConversions: When doing a String.toLowerCase()/toUpperCase() call, use a Locale
src/jdepend/framework/FileManager.java:67:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/FileManager.java:67:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/FileManager.java:73:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/FileManager.java:73:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/FileManager.java:73:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:73:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:77:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/FileManager.java:77:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/FileManager.java:79:	LocalVariableCouldBeFinal: Local variable 'files' could be declared final
src/jdepend/framework/FileManager.java:79:	LocalVariableCouldBeFinal: Local variable 'files' could be declared final
src/jdepend/framework/FileManager.java:81:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/FileManager.java:81:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/FileManager.java:81:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/FileManager.java:81:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/FileManager.java:82:	LocalVariableCouldBeFinal: Local variable 'directory' could be declared final
src/jdepend/framework/FileManager.java:82:	LocalVariableCouldBeFinal: Local variable 'directory' could be declared final
src/jdepend/framework/FileManager.java:89:	MethodArgumentCouldBeFinal: Parameter 'directory' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:89:	MethodArgumentCouldBeFinal: Parameter 'directory' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:89:	MethodArgumentCouldBeFinal: Parameter 'files' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:89:	MethodArgumentCouldBeFinal: Parameter 'files' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:97:	LocalVariableCouldBeFinal: Local variable 'directoryFiles' could be declared final
src/jdepend/framework/FileManager.java:97:	LocalVariableCouldBeFinal: Local variable 'directoryFiles' could be declared final
src/jdepend/framework/FileManager.java:99:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/FileManager.java:99:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/FileManager.java:101:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/jdepend/framework/FileManager.java:101:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/jdepend/framework/FileManager.java:101:	LocalVariableCouldBeFinal: Local variable 'file' could be declared final
src/jdepend/framework/FileManager.java:101:	LocalVariableCouldBeFinal: Local variable 'file' could be declared final
src/jdepend/framework/FileManager.java:111:	MethodArgumentCouldBeFinal: Parameter 'f' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:111:	MethodArgumentCouldBeFinal: Parameter 'f' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:111:	MethodArgumentCouldBeFinal: Parameter 'files' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:111:	MethodArgumentCouldBeFinal: Parameter 'files' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:111:	ShortVariable: Avoid variables with short names like f
src/jdepend/framework/FileManager.java:111:	ShortVariable: Avoid variables with short names like f
src/jdepend/framework/FileManager.java:117:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:117:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:121:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:121:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:125:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:125:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:129:	MethodArgumentCouldBeFinal: Parameter 'extension' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:129:	MethodArgumentCouldBeFinal: Parameter 'extension' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:129:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:129:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/jdepend/framework/FileManager.java:131:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/FileManager.java:131:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/FileManager.java:131:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/FileManager.java:131:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/FileManager.java:131:	UseLocaleWithCaseConversions: When doing a String.toLowerCase()/toUpperCase() call, use a Locale
src/jdepend/framework/FileManager.java:131:	UseLocaleWithCaseConversions: When doing a String.toLowerCase()/toUpperCase() call, use a Locale
src/jdepend/framework/JDepend.java:6:	CommentSize: Comment is too large: Too many lines
src/jdepend/framework/JDepend.java:6:	CommentSize: Comment is too large: Too many lines
src/jdepend/framework/JDepend.java:103:	TooManyMethods: This class has too many methods, consider refactoring it.
src/jdepend/framework/JDepend.java:103:	TooManyMethods: This class has too many methods, consider refactoring it.
src/jdepend/framework/JDepend.java:105:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JDepend.java:105:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JDepend.java:105:	CommentRequired: Field comments are required
src/jdepend/framework/JDepend.java:105:	CommentRequired: Field comments are required
src/jdepend/framework/JDepend.java:105:	LooseCoupling: Avoid using implementation types like 'HashMap'; use the interface instead
src/jdepend/framework/JDepend.java:105:	LooseCoupling: Avoid using implementation types like 'HashMap'; use the interface instead
src/jdepend/framework/JDepend.java:106:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JDepend.java:106:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JDepend.java:106:	CommentRequired: Field comments are required
src/jdepend/framework/JDepend.java:106:	CommentRequired: Field comments are required
src/jdepend/framework/JDepend.java:107:	CommentRequired: Field comments are required
src/jdepend/framework/JDepend.java:107:	CommentRequired: Field comments are required
src/jdepend/framework/JDepend.java:108:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JDepend.java:108:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JDepend.java:108:	CommentRequired: Field comments are required
src/jdepend/framework/JDepend.java:108:	CommentRequired: Field comments are required
src/jdepend/framework/JDepend.java:109:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JDepend.java:109:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JDepend.java:109:	CommentRequired: Field comments are required
src/jdepend/framework/JDepend.java:109:	CommentRequired: Field comments are required
src/jdepend/framework/JDepend.java:110:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JDepend.java:110:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JDepend.java:110:	CommentRequired: Field comments are required
src/jdepend/framework/JDepend.java:110:	CommentRequired: Field comments are required
src/jdepend/framework/JDepend.java:112:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JDepend.java:112:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JDepend.java:116:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JDepend.java:116:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JDepend.java:116:	MethodArgumentCouldBeFinal: Parameter 'filter' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:116:	MethodArgumentCouldBeFinal: Parameter 'filter' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:118:	ConstructorCallsOverridableMethod: Overridable method 'setFilter' called during object construction
src/jdepend/framework/JDepend.java:118:	ConstructorCallsOverridableMethod: Overridable method 'setFilter' called during object construction
src/jdepend/framework/JDepend.java:126:	LocalVariableCouldBeFinal: Local variable 'config' could be declared final
src/jdepend/framework/JDepend.java:126:	LocalVariableCouldBeFinal: Local variable 'config' could be declared final
src/jdepend/framework/JDepend.java:127:	ConstructorCallsOverridableMethod: Overridable method 'addPackages' called during object construction
src/jdepend/framework/JDepend.java:127:	ConstructorCallsOverridableMethod: Overridable method 'addPackages' called during object construction
src/jdepend/framework/JDepend.java:139:	LocalVariableCouldBeFinal: Local variable 'classes' could be declared final
src/jdepend/framework/JDepend.java:139:	LocalVariableCouldBeFinal: Local variable 'classes' could be declared final
src/jdepend/framework/JDepend.java:141:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/JDepend.java:141:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/JDepend.java:141:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/JDepend.java:141:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/JDepend.java:155:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:155:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:164:	MethodArgumentCouldBeFinal: Parameter 'components' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:164:	MethodArgumentCouldBeFinal: Parameter 'components' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:166:	LocalVariableCouldBeFinal: Local variable 'st' could be declared final
src/jdepend/framework/JDepend.java:166:	LocalVariableCouldBeFinal: Local variable 'st' could be declared final
src/jdepend/framework/JDepend.java:166:	ShortVariable: Avoid variables with short names like st
src/jdepend/framework/JDepend.java:166:	ShortVariable: Avoid variables with short names like st
src/jdepend/framework/JDepend.java:168:	LocalVariableCouldBeFinal: Local variable 'component' could be declared final
src/jdepend/framework/JDepend.java:168:	LocalVariableCouldBeFinal: Local variable 'component' could be declared final
src/jdepend/framework/JDepend.java:179:	MethodArgumentCouldBeFinal: Parameter 'b' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:179:	MethodArgumentCouldBeFinal: Parameter 'b' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:179:	ShortVariable: Avoid variables with short names like b
src/jdepend/framework/JDepend.java:179:	ShortVariable: Avoid variables with short names like b
src/jdepend/framework/JDepend.java:198:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:198:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:208:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JDepend.java:208:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JDepend.java:226:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JDepend.java:226:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JDepend.java:226:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/JDepend.java:226:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/JDepend.java:227:	LocalVariableCouldBeFinal: Local variable 'jPackage' could be declared final
src/jdepend/framework/JDepend.java:227:	LocalVariableCouldBeFinal: Local variable 'jPackage' could be declared final
src/jdepend/framework/JDepend.java:228:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JDepend.java:228:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JDepend.java:229:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/JDepend.java:229:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/JDepend.java:243:	MethodArgumentCouldBeFinal: Parameter 'constraint' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:243:	MethodArgumentCouldBeFinal: Parameter 'constraint' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:252:	MethodArgumentCouldBeFinal: Parameter 'listener' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:252:	MethodArgumentCouldBeFinal: Parameter 'listener' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:263:	AvoidReassigningParameters: Avoid reassigning parameters such as 'name'
src/jdepend/framework/JDepend.java:263:	AvoidReassigningParameters: Avoid reassigning parameters such as 'name'
src/jdepend/framework/JDepend.java:274:	MethodArgumentCouldBeFinal: Parameter 'packageName' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:274:	MethodArgumentCouldBeFinal: Parameter 'packageName' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:276:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/JDepend.java:276:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/JDepend.java:276:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/JDepend.java:276:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/JDepend.java:277:	LocalVariableCouldBeFinal: Local variable 'component' could be declared final
src/jdepend/framework/JDepend.java:277:	LocalVariableCouldBeFinal: Local variable 'component' could be declared final
src/jdepend/framework/JDepend.java:279:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/JDepend.java:279:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/JDepend.java:292:	MethodArgumentCouldBeFinal: Parameter 'packages' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:292:	MethodArgumentCouldBeFinal: Parameter 'packages' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:293:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/JDepend.java:293:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/JDepend.java:293:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/JDepend.java:293:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/JDepend.java:294:	LocalVariableCouldBeFinal: Local variable 'pkg' could be declared final
src/jdepend/framework/JDepend.java:294:	LocalVariableCouldBeFinal: Local variable 'pkg' could be declared final
src/jdepend/framework/JDepend.java:305:	MethodArgumentCouldBeFinal: Parameter 'pkg' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:305:	MethodArgumentCouldBeFinal: Parameter 'pkg' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:319:	MethodArgumentCouldBeFinal: Parameter 'filter' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:319:	MethodArgumentCouldBeFinal: Parameter 'filter' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:326:	MethodArgumentCouldBeFinal: Parameter 'clazz' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:326:	MethodArgumentCouldBeFinal: Parameter 'clazz' is not assigned and could be declared final
src/jdepend/framework/JDepend.java:328:	LocalVariableCouldBeFinal: Local variable 'packageName' could be declared final
src/jdepend/framework/JDepend.java:328:	LocalVariableCouldBeFinal: Local variable 'packageName' could be declared final
src/jdepend/framework/JDepend.java:330:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JDepend.java:330:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JDepend.java:334:	LocalVariableCouldBeFinal: Local variable 'clazzPackage' could be declared final
src/jdepend/framework/JDepend.java:334:	LocalVariableCouldBeFinal: Local variable 'clazzPackage' could be declared final
src/jdepend/framework/JDepend.java:335:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JDepend.java:335:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JDepend.java:337:	LocalVariableCouldBeFinal: Local variable 'imports' could be declared final
src/jdepend/framework/JDepend.java:337:	LocalVariableCouldBeFinal: Local variable 'imports' could be declared final
src/jdepend/framework/JDepend.java:338:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/JDepend.java:338:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/JDepend.java:338:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/JDepend.java:338:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/JDepend.java:340:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JDepend.java:340:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JavaClass.java:15:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JavaClass.java:15:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JavaClass.java:15:	CommentRequired: Field comments are required
src/jdepend/framework/JavaClass.java:15:	CommentRequired: Field comments are required
src/jdepend/framework/JavaClass.java:16:	CommentRequired: Field comments are required
src/jdepend/framework/JavaClass.java:16:	CommentRequired: Field comments are required
src/jdepend/framework/JavaClass.java:17:	AvoidFieldNameMatchingMethodName: Field isAbstract has the same name as a method
src/jdepend/framework/JavaClass.java:17:	AvoidFieldNameMatchingMethodName: Field isAbstract has the same name as a method
src/jdepend/framework/JavaClass.java:17:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JavaClass.java:17:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JavaClass.java:17:	CommentRequired: Field comments are required
src/jdepend/framework/JavaClass.java:17:	CommentRequired: Field comments are required
src/jdepend/framework/JavaClass.java:18:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JavaClass.java:18:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JavaClass.java:18:	CommentRequired: Field comments are required
src/jdepend/framework/JavaClass.java:18:	CommentRequired: Field comments are required
src/jdepend/framework/JavaClass.java:18:	ImmutableField: Private field 'imports' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/framework/JavaClass.java:18:	ImmutableField: Private field 'imports' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/framework/JavaClass.java:18:	LooseCoupling: Avoid using implementation types like 'HashMap'; use the interface instead
src/jdepend/framework/JavaClass.java:18:	LooseCoupling: Avoid using implementation types like 'HashMap'; use the interface instead
src/jdepend/framework/JavaClass.java:19:	CommentRequired: Field comments are required
src/jdepend/framework/JavaClass.java:19:	CommentRequired: Field comments are required
src/jdepend/framework/JavaClass.java:22:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClass.java:22:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClass.java:22:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/framework/JavaClass.java:22:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/framework/JavaClass.java:30:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClass.java:30:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClass.java:30:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/framework/JavaClass.java:30:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/framework/JavaClass.java:34:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClass.java:34:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClass.java:38:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/framework/JavaClass.java:38:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/framework/JavaClass.java:46:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/framework/JavaClass.java:46:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/framework/JavaClass.java:54:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClass.java:54:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClass.java:58:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClass.java:58:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClass.java:58:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/framework/JavaClass.java:58:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/framework/JavaClass.java:59:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JavaClass.java:59:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JavaClass.java:64:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClass.java:64:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClass.java:68:	MethodArgumentCouldBeFinal: Parameter 'isAbstract' is not assigned and could be declared final
src/jdepend/framework/JavaClass.java:68:	MethodArgumentCouldBeFinal: Parameter 'isAbstract' is not assigned and could be declared final
src/jdepend/framework/JavaClass.java:72:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClass.java:72:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClass.java:72:	MethodArgumentCouldBeFinal: Parameter 'other' is not assigned and could be declared final
src/jdepend/framework/JavaClass.java:72:	MethodArgumentCouldBeFinal: Parameter 'other' is not assigned and could be declared final
src/jdepend/framework/JavaClass.java:72:	MissingOverride: The method 'equals(Object)' is missing an @Override annotation.
src/jdepend/framework/JavaClass.java:72:	MissingOverride: The method 'equals(Object)' is missing an @Override annotation.
src/jdepend/framework/JavaClass.java:75:	LocalVariableCouldBeFinal: Local variable 'otherClass' could be declared final
src/jdepend/framework/JavaClass.java:75:	LocalVariableCouldBeFinal: Local variable 'otherClass' could be declared final
src/jdepend/framework/JavaClass.java:76:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JavaClass.java:76:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JavaClass.java:76:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JavaClass.java:76:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JavaClass.java:76:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/JavaClass.java:76:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/JavaClass.java:82:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClass.java:82:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClass.java:82:	MissingOverride: The method 'hashCode()' is missing an @Override annotation.
src/jdepend/framework/JavaClass.java:82:	MissingOverride: The method 'hashCode()' is missing an @Override annotation.
src/jdepend/framework/JavaClass.java:83:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JavaClass.java:83:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JavaClass.java:86:	CommentRequired: Header comments are required
src/jdepend/framework/JavaClass.java:86:	CommentRequired: Header comments are required
src/jdepend/framework/JavaClass.java:88:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClass.java:88:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClass.java:88:	MethodArgumentCouldBeFinal: Parameter 'a' is not assigned and could be declared final
src/jdepend/framework/JavaClass.java:88:	MethodArgumentCouldBeFinal: Parameter 'a' is not assigned and could be declared final
src/jdepend/framework/JavaClass.java:88:	MethodArgumentCouldBeFinal: Parameter 'b' is not assigned and could be declared final
src/jdepend/framework/JavaClass.java:88:	MethodArgumentCouldBeFinal: Parameter 'b' is not assigned and could be declared final
src/jdepend/framework/JavaClass.java:88:	MissingOverride: The method 'compare(Object, Object)' is missing an @Override annotation.
src/jdepend/framework/JavaClass.java:88:	MissingOverride: The method 'compare(Object, Object)' is missing an @Override annotation.
src/jdepend/framework/JavaClass.java:88:	ShortVariable: Avoid variables with short names like a
src/jdepend/framework/JavaClass.java:88:	ShortVariable: Avoid variables with short names like a
src/jdepend/framework/JavaClass.java:88:	ShortVariable: Avoid variables with short names like b
src/jdepend/framework/JavaClass.java:88:	ShortVariable: Avoid variables with short names like b
src/jdepend/framework/JavaClass.java:89:	LocalVariableCouldBeFinal: Local variable 'c1' could be declared final
src/jdepend/framework/JavaClass.java:89:	LocalVariableCouldBeFinal: Local variable 'c1' could be declared final
src/jdepend/framework/JavaClass.java:89:	ShortVariable: Avoid variables with short names like c1
src/jdepend/framework/JavaClass.java:89:	ShortVariable: Avoid variables with short names like c1
src/jdepend/framework/JavaClass.java:90:	LocalVariableCouldBeFinal: Local variable 'c2' could be declared final
src/jdepend/framework/JavaClass.java:90:	LocalVariableCouldBeFinal: Local variable 'c2' could be declared final
src/jdepend/framework/JavaClass.java:90:	ShortVariable: Avoid variables with short names like c2
src/jdepend/framework/JavaClass.java:90:	ShortVariable: Avoid variables with short names like c2
src/jdepend/framework/JavaClass.java:92:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JavaClass.java:92:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JavaClass.java:92:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JavaClass.java:92:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JavaClass.java:92:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JavaClass.java:92:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JavaClassBuilder.java:18:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JavaClassBuilder.java:18:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JavaClassBuilder.java:18:	CommentRequired: Field comments are required
src/jdepend/framework/JavaClassBuilder.java:18:	CommentRequired: Field comments are required
src/jdepend/framework/JavaClassBuilder.java:19:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JavaClassBuilder.java:19:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JavaClassBuilder.java:19:	CommentRequired: Field comments are required
src/jdepend/framework/JavaClassBuilder.java:19:	CommentRequired: Field comments are required
src/jdepend/framework/JavaClassBuilder.java:22:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClassBuilder.java:22:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClassBuilder.java:26:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClassBuilder.java:26:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClassBuilder.java:26:	MethodArgumentCouldBeFinal: Parameter 'fm' is not assigned and could be declared final
src/jdepend/framework/JavaClassBuilder.java:26:	MethodArgumentCouldBeFinal: Parameter 'fm' is not assigned and could be declared final
src/jdepend/framework/JavaClassBuilder.java:26:	ShortVariable: Avoid variables with short names like fm
src/jdepend/framework/JavaClassBuilder.java:26:	ShortVariable: Avoid variables with short names like fm
src/jdepend/framework/JavaClassBuilder.java:30:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClassBuilder.java:30:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClassBuilder.java:30:	MethodArgumentCouldBeFinal: Parameter 'fm' is not assigned and could be declared final
src/jdepend/framework/JavaClassBuilder.java:30:	MethodArgumentCouldBeFinal: Parameter 'fm' is not assigned and could be declared final
src/jdepend/framework/JavaClassBuilder.java:30:	MethodArgumentCouldBeFinal: Parameter 'parser' is not assigned and could be declared final
src/jdepend/framework/JavaClassBuilder.java:30:	MethodArgumentCouldBeFinal: Parameter 'parser' is not assigned and could be declared final
src/jdepend/framework/JavaClassBuilder.java:30:	ShortVariable: Avoid variables with short names like fm
src/jdepend/framework/JavaClassBuilder.java:30:	ShortVariable: Avoid variables with short names like fm
src/jdepend/framework/JavaClassBuilder.java:35:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClassBuilder.java:35:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClassBuilder.java:36:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'counter' (lines '36'-'46').
src/jdepend/framework/JavaClassBuilder.java:36:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'counter' (lines '36'-'46').
src/jdepend/framework/JavaClassBuilder.java:36:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'counter' (lines '36'-'46').
src/jdepend/framework/JavaClassBuilder.java:36:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'counter' (lines '36'-'46').
src/jdepend/framework/JavaClassBuilder.java:36:	LocalVariableCouldBeFinal: Local variable 'counter' could be declared final
src/jdepend/framework/JavaClassBuilder.java:36:	LocalVariableCouldBeFinal: Local variable 'counter' could be declared final
src/jdepend/framework/JavaClassBuilder.java:38:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClassBuilder.java:38:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaClassBuilder.java:38:	MethodArgumentCouldBeFinal: Parameter 'is' is not assigned and could be declared final
src/jdepend/framework/JavaClassBuilder.java:38:	MethodArgumentCouldBeFinal: Parameter 'is' is not assigned and could be declared final
src/jdepend/framework/JavaClassBuilder.java:38:	MissingOverride: The method 'parse(InputStream)' is missing an @Override annotation.
src/jdepend/framework/JavaClassBuilder.java:38:	MissingOverride: The method 'parse(InputStream)' is missing an @Override annotation.
src/jdepend/framework/JavaClassBuilder.java:38:	ShortVariable: Avoid variables with short names like is
src/jdepend/framework/JavaClassBuilder.java:38:	ShortVariable: Avoid variables with short names like is
src/jdepend/framework/JavaClassBuilder.java:43:	LocalVariableCouldBeFinal: Local variable 'builder' could be declared final
src/jdepend/framework/JavaClassBuilder.java:43:	LocalVariableCouldBeFinal: Local variable 'builder' could be declared final
src/jdepend/framework/JavaClassBuilder.java:44:	LocalVariableCouldBeFinal: Local variable 'classes' could be declared final
src/jdepend/framework/JavaClassBuilder.java:44:	LocalVariableCouldBeFinal: Local variable 'classes' could be declared final
src/jdepend/framework/JavaClassBuilder.java:45:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JavaClassBuilder.java:45:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JavaClassBuilder.java:55:	LocalVariableCouldBeFinal: Local variable 'classes' could be declared final
src/jdepend/framework/JavaClassBuilder.java:55:	LocalVariableCouldBeFinal: Local variable 'classes' could be declared final
src/jdepend/framework/JavaClassBuilder.java:57:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/JavaClassBuilder.java:57:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/JavaClassBuilder.java:57:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JavaClassBuilder.java:57:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JavaClassBuilder.java:57:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/JavaClassBuilder.java:57:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/JavaClassBuilder.java:59:	LocalVariableCouldBeFinal: Local variable 'nextFile' could be declared final
src/jdepend/framework/JavaClassBuilder.java:59:	LocalVariableCouldBeFinal: Local variable 'nextFile' could be declared final
src/jdepend/framework/JavaClassBuilder.java:66:	SystemPrintln: System.err.println is used
src/jdepend/framework/JavaClassBuilder.java:66:	SystemPrintln: System.err.println is used
src/jdepend/framework/JavaClassBuilder.java:80:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/jdepend/framework/JavaClassBuilder.java:80:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/jdepend/framework/JavaClassBuilder.java:83:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'is' (lines '83'-'85').
src/jdepend/framework/JavaClassBuilder.java:83:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'is' (lines '83'-'85').
src/jdepend/framework/JavaClassBuilder.java:83:	ShortVariable: Avoid variables with short names like is
src/jdepend/framework/JavaClassBuilder.java:83:	ShortVariable: Avoid variables with short names like is
src/jdepend/framework/JavaClassBuilder.java:85:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/jdepend/framework/JavaClassBuilder.java:85:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/jdepend/framework/JavaClassBuilder.java:86:	LocalVariableCouldBeFinal: Local variable 'parsedClass' could be declared final
src/jdepend/framework/JavaClassBuilder.java:86:	LocalVariableCouldBeFinal: Local variable 'parsedClass' could be declared final
src/jdepend/framework/JavaClassBuilder.java:87:	LocalVariableCouldBeFinal: Local variable 'javaClasses' could be declared final
src/jdepend/framework/JavaClassBuilder.java:87:	LocalVariableCouldBeFinal: Local variable 'javaClasses' could be declared final
src/jdepend/framework/JavaClassBuilder.java:89:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/JavaClassBuilder.java:89:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/JavaClassBuilder.java:97:	CloseResource: Ensure that resources like this JarFile object are closed after use
src/jdepend/framework/JavaClassBuilder.java:97:	CloseResource: Ensure that resources like this JarFile object are closed after use
src/jdepend/framework/JavaClassBuilder.java:97:	LocalVariableCouldBeFinal: Local variable 'jarFile' could be declared final
src/jdepend/framework/JavaClassBuilder.java:97:	LocalVariableCouldBeFinal: Local variable 'jarFile' could be declared final
src/jdepend/framework/JavaClassBuilder.java:98:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/jdepend/framework/JavaClassBuilder.java:98:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/jdepend/framework/JavaClassBuilder.java:116:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/jdepend/framework/JavaClassBuilder.java:116:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/jdepend/framework/JavaClassBuilder.java:118:	LocalVariableCouldBeFinal: Local variable 'javaClasses' could be declared final
src/jdepend/framework/JavaClassBuilder.java:118:	LocalVariableCouldBeFinal: Local variable 'javaClasses' could be declared final
src/jdepend/framework/JavaClassBuilder.java:120:	LocalVariableCouldBeFinal: Local variable 'entries' could be declared final
src/jdepend/framework/JavaClassBuilder.java:120:	LocalVariableCouldBeFinal: Local variable 'entries' could be declared final
src/jdepend/framework/JavaClassBuilder.java:121:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JavaClassBuilder.java:121:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JavaClassBuilder.java:122:	LocalVariableCouldBeFinal: Local variable 'e' could be declared final
src/jdepend/framework/JavaClassBuilder.java:122:	LocalVariableCouldBeFinal: Local variable 'e' could be declared final
src/jdepend/framework/JavaClassBuilder.java:122:	ShortVariable: Avoid variables with short names like e
src/jdepend/framework/JavaClassBuilder.java:122:	ShortVariable: Avoid variables with short names like e
src/jdepend/framework/JavaClassBuilder.java:123:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JavaClassBuilder.java:123:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JavaClassBuilder.java:124:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'is' (lines '124'-'126').
src/jdepend/framework/JavaClassBuilder.java:124:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'is' (lines '124'-'126').
src/jdepend/framework/JavaClassBuilder.java:124:	ShortVariable: Avoid variables with short names like is
src/jdepend/framework/JavaClassBuilder.java:124:	ShortVariable: Avoid variables with short names like is
src/jdepend/framework/JavaClassBuilder.java:126:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/jdepend/framework/JavaClassBuilder.java:126:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/jdepend/framework/JavaClassBuilder.java:127:	LocalVariableCouldBeFinal: Local variable 'jc' could be declared final
src/jdepend/framework/JavaClassBuilder.java:127:	LocalVariableCouldBeFinal: Local variable 'jc' could be declared final
src/jdepend/framework/JavaClassBuilder.java:127:	ShortVariable: Avoid variables with short names like jc
src/jdepend/framework/JavaClassBuilder.java:127:	ShortVariable: Avoid variables with short names like jc
src/jdepend/framework/JavaPackage.java:12:	TooManyMethods: This class has too many methods, consider refactoring it.
src/jdepend/framework/JavaPackage.java:12:	TooManyMethods: This class has too many methods, consider refactoring it.
src/jdepend/framework/JavaPackage.java:14:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JavaPackage.java:14:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JavaPackage.java:14:	CommentRequired: Field comments are required
src/jdepend/framework/JavaPackage.java:14:	CommentRequired: Field comments are required
src/jdepend/framework/JavaPackage.java:15:	CommentRequired: Field comments are required
src/jdepend/framework/JavaPackage.java:15:	CommentRequired: Field comments are required
src/jdepend/framework/JavaPackage.java:16:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JavaPackage.java:16:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/JavaPackage.java:16:	CommentRequired: Field comments are required
src/jdepend/framework/JavaPackage.java:16:	CommentRequired: Field comments are required
src/jdepend/framework/JavaPackage.java:16:	LooseCoupling: Avoid using implementation types like 'HashSet'; use the interface instead
src/jdepend/framework/JavaPackage.java:16:	LooseCoupling: Avoid using implementation types like 'HashSet'; use the interface instead
src/jdepend/framework/JavaPackage.java:17:	CommentRequired: Field comments are required
src/jdepend/framework/JavaPackage.java:17:	CommentRequired: Field comments are required
src/jdepend/framework/JavaPackage.java:18:	CommentRequired: Field comments are required
src/jdepend/framework/JavaPackage.java:18:	CommentRequired: Field comments are required
src/jdepend/framework/JavaPackage.java:21:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaPackage.java:21:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaPackage.java:21:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:21:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:25:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaPackage.java:25:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaPackage.java:25:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:25:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:25:	MethodArgumentCouldBeFinal: Parameter 'volatility' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:25:	MethodArgumentCouldBeFinal: Parameter 'volatility' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:47:	MethodArgumentCouldBeFinal: Parameter 'v' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:47:	MethodArgumentCouldBeFinal: Parameter 'v' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:47:	ShortVariable: Avoid variables with short names like v
src/jdepend/framework/JavaPackage.java:47:	ShortVariable: Avoid variables with short names like v
src/jdepend/framework/JavaPackage.java:51:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaPackage.java:51:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaPackage.java:55:	CommentSize: Comment is too large: Too many lines
src/jdepend/framework/JavaPackage.java:55:	CommentSize: Comment is too large: Too many lines
src/jdepend/framework/JavaPackage.java:64:	MethodArgumentCouldBeFinal: Parameter 'list' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:64:	MethodArgumentCouldBeFinal: Parameter 'list' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:68:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/JavaPackage.java:68:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/JavaPackage.java:73:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JavaPackage.java:73:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JavaPackage.java:73:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/JavaPackage.java:73:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/JavaPackage.java:74:	LocalVariableCouldBeFinal: Local variable 'efferent' could be declared final
src/jdepend/framework/JavaPackage.java:74:	LocalVariableCouldBeFinal: Local variable 'efferent' could be declared final
src/jdepend/framework/JavaPackage.java:75:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JavaPackage.java:75:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JavaPackage.java:76:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/JavaPackage.java:76:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/JavaPackage.java:85:	CommentSize: Comment is too large: Too many lines
src/jdepend/framework/JavaPackage.java:85:	CommentSize: Comment is too large: Too many lines
src/jdepend/framework/JavaPackage.java:97:	MethodArgumentCouldBeFinal: Parameter 'list' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:97:	MethodArgumentCouldBeFinal: Parameter 'list' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:101:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/JavaPackage.java:101:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/JavaPackage.java:106:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'containsCycle' (lines '106'-'110').
src/jdepend/framework/JavaPackage.java:106:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'containsCycle' (lines '106'-'110').
src/jdepend/framework/JavaPackage.java:107:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JavaPackage.java:107:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JavaPackage.java:107:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/JavaPackage.java:107:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/JavaPackage.java:108:	LocalVariableCouldBeFinal: Local variable 'efferent' could be declared final
src/jdepend/framework/JavaPackage.java:108:	LocalVariableCouldBeFinal: Local variable 'efferent' could be declared final
src/jdepend/framework/JavaPackage.java:109:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JavaPackage.java:109:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JavaPackage.java:110:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'containsCycle' (lines '110'-'110').
src/jdepend/framework/JavaPackage.java:110:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'containsCycle' (lines '110'-'110').
src/jdepend/framework/JavaPackage.java:115:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/JavaPackage.java:115:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/JavaPackage.java:122:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaPackage.java:122:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaPackage.java:122:	MethodArgumentCouldBeFinal: Parameter 'clazz' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:122:	MethodArgumentCouldBeFinal: Parameter 'clazz' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:130:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaPackage.java:130:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaPackage.java:134:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaPackage.java:134:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaPackage.java:135:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'count' (lines '135'-'140').
src/jdepend/framework/JavaPackage.java:135:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'count' (lines '135'-'140').
src/jdepend/framework/JavaPackage.java:137:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/JavaPackage.java:137:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/JavaPackage.java:137:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/JavaPackage.java:137:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/JavaPackage.java:138:	LocalVariableCouldBeFinal: Local variable 'clazz' could be declared final
src/jdepend/framework/JavaPackage.java:138:	LocalVariableCouldBeFinal: Local variable 'clazz' could be declared final
src/jdepend/framework/JavaPackage.java:139:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JavaPackage.java:139:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JavaPackage.java:140:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'count' (lines '140'-'140').
src/jdepend/framework/JavaPackage.java:140:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'count' (lines '140'-'140').
src/jdepend/framework/JavaPackage.java:147:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaPackage.java:147:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaPackage.java:148:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'count' (lines '148'-'153').
src/jdepend/framework/JavaPackage.java:148:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'count' (lines '148'-'153').
src/jdepend/framework/JavaPackage.java:150:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/JavaPackage.java:150:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/JavaPackage.java:150:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/JavaPackage.java:150:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/JavaPackage.java:151:	LocalVariableCouldBeFinal: Local variable 'clazz' could be declared final
src/jdepend/framework/JavaPackage.java:151:	LocalVariableCouldBeFinal: Local variable 'clazz' could be declared final
src/jdepend/framework/JavaPackage.java:152:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JavaPackage.java:152:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JavaPackage.java:153:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'count' (lines '153'-'153').
src/jdepend/framework/JavaPackage.java:153:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'count' (lines '153'-'153').
src/jdepend/framework/JavaPackage.java:166:	MethodArgumentCouldBeFinal: Parameter 'imported' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:166:	MethodArgumentCouldBeFinal: Parameter 'imported' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:176:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:176:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:177:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JavaPackage.java:177:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JavaPackage.java:178:	CollapsibleIfStatements: These nested if statements could be combined
src/jdepend/framework/JavaPackage.java:178:	CollapsibleIfStatements: These nested if statements could be combined
src/jdepend/framework/JavaPackage.java:188:	MethodArgumentCouldBeFinal: Parameter 'afferents' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:188:	MethodArgumentCouldBeFinal: Parameter 'afferents' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:192:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaPackage.java:192:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaPackage.java:192:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:192:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:193:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JavaPackage.java:193:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JavaPackage.java:194:	CollapsibleIfStatements: These nested if statements could be combined
src/jdepend/framework/JavaPackage.java:194:	CollapsibleIfStatements: These nested if statements could be combined
src/jdepend/framework/JavaPackage.java:204:	MethodArgumentCouldBeFinal: Parameter 'efferents' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:204:	MethodArgumentCouldBeFinal: Parameter 'efferents' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:227:	LocalVariableCouldBeFinal: Local variable 'totalCoupling' could be declared final
src/jdepend/framework/JavaPackage.java:227:	LocalVariableCouldBeFinal: Local variable 'totalCoupling' could be declared final
src/jdepend/framework/JavaPackage.java:231:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/JavaPackage.java:231:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/JavaPackage.java:243:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/JavaPackage.java:243:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/JavaPackage.java:253:	LocalVariableCouldBeFinal: Local variable 'd' could be declared final
src/jdepend/framework/JavaPackage.java:253:	LocalVariableCouldBeFinal: Local variable 'd' could be declared final
src/jdepend/framework/JavaPackage.java:253:	ShortVariable: Avoid variables with short names like d
src/jdepend/framework/JavaPackage.java:253:	ShortVariable: Avoid variables with short names like d
src/jdepend/framework/JavaPackage.java:257:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaPackage.java:257:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaPackage.java:257:	MethodArgumentCouldBeFinal: Parameter 'other' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:257:	MethodArgumentCouldBeFinal: Parameter 'other' is not assigned and could be declared final
src/jdepend/framework/JavaPackage.java:257:	MissingOverride: The method 'equals(Object)' is missing an @Override annotation.
src/jdepend/framework/JavaPackage.java:257:	MissingOverride: The method 'equals(Object)' is missing an @Override annotation.
src/jdepend/framework/JavaPackage.java:259:	LocalVariableCouldBeFinal: Local variable 'otherPackage' could be declared final
src/jdepend/framework/JavaPackage.java:259:	LocalVariableCouldBeFinal: Local variable 'otherPackage' could be declared final
src/jdepend/framework/JavaPackage.java:260:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JavaPackage.java:260:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JavaPackage.java:260:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JavaPackage.java:260:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/JavaPackage.java:260:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/JavaPackage.java:260:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/JavaPackage.java:265:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaPackage.java:265:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaPackage.java:265:	MissingOverride: The method 'hashCode()' is missing an @Override annotation.
src/jdepend/framework/JavaPackage.java:265:	MissingOverride: The method 'hashCode()' is missing an @Override annotation.
src/jdepend/framework/JavaPackage.java:266:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JavaPackage.java:266:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/JavaPackage.java:269:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaPackage.java:269:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/JavaPackage.java:269:	MissingOverride: The method 'toString()' is missing an @Override annotation.
src/jdepend/framework/JavaPackage.java:269:	MissingOverride: The method 'toString()' is missing an @Override annotation.
src/jdepend/framework/PackageComparator.java:16:	AvoidFieldNameMatchingMethodName: Field byWhat has the same name as a method
src/jdepend/framework/PackageComparator.java:16:	AvoidFieldNameMatchingMethodName: Field byWhat has the same name as a method
src/jdepend/framework/PackageComparator.java:16:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/PackageComparator.java:16:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/PackageComparator.java:16:	CommentRequired: Field comments are required
src/jdepend/framework/PackageComparator.java:16:	CommentRequired: Field comments are required
src/jdepend/framework/PackageComparator.java:18:	AvoidFieldNameMatchingMethodName: Field byName has the same name as a method
src/jdepend/framework/PackageComparator.java:18:	AvoidFieldNameMatchingMethodName: Field byName has the same name as a method
src/jdepend/framework/PackageComparator.java:18:	CommentRequired: Field comments are required
src/jdepend/framework/PackageComparator.java:18:	CommentRequired: Field comments are required
src/jdepend/framework/PackageComparator.java:23:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/PackageComparator.java:23:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/PackageComparator.java:30:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/PackageComparator.java:30:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/PackageComparator.java:30:	MethodArgumentCouldBeFinal: Parameter 'byWhat' is not assigned and could be declared final
src/jdepend/framework/PackageComparator.java:30:	MethodArgumentCouldBeFinal: Parameter 'byWhat' is not assigned and could be declared final
src/jdepend/framework/PackageComparator.java:38:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/PackageComparator.java:38:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/PackageComparator.java:38:	MethodArgumentCouldBeFinal: Parameter 'p1' is not assigned and could be declared final
src/jdepend/framework/PackageComparator.java:38:	MethodArgumentCouldBeFinal: Parameter 'p1' is not assigned and could be declared final
src/jdepend/framework/PackageComparator.java:38:	MethodArgumentCouldBeFinal: Parameter 'p2' is not assigned and could be declared final
src/jdepend/framework/PackageComparator.java:38:	MethodArgumentCouldBeFinal: Parameter 'p2' is not assigned and could be declared final
src/jdepend/framework/PackageComparator.java:38:	MissingOverride: The method 'compare(Object, Object)' is missing an @Override annotation.
src/jdepend/framework/PackageComparator.java:38:	MissingOverride: The method 'compare(Object, Object)' is missing an @Override annotation.
src/jdepend/framework/PackageComparator.java:38:	ShortVariable: Avoid variables with short names like p1
src/jdepend/framework/PackageComparator.java:38:	ShortVariable: Avoid variables with short names like p1
src/jdepend/framework/PackageComparator.java:38:	ShortVariable: Avoid variables with short names like p2
src/jdepend/framework/PackageComparator.java:38:	ShortVariable: Avoid variables with short names like p2
src/jdepend/framework/PackageComparator.java:40:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'a' (lines '40'-'48').
src/jdepend/framework/PackageComparator.java:40:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'a' (lines '40'-'48').
src/jdepend/framework/PackageComparator.java:40:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
src/jdepend/framework/PackageComparator.java:40:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
src/jdepend/framework/PackageComparator.java:40:	ShortVariable: Avoid variables with short names like a
src/jdepend/framework/PackageComparator.java:40:	ShortVariable: Avoid variables with short names like a
src/jdepend/framework/PackageComparator.java:41:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'b' (lines '41'-'48').
src/jdepend/framework/PackageComparator.java:41:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'b' (lines '41'-'48').
src/jdepend/framework/PackageComparator.java:41:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
src/jdepend/framework/PackageComparator.java:41:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
src/jdepend/framework/PackageComparator.java:41:	ShortVariable: Avoid variables with short names like b
src/jdepend/framework/PackageComparator.java:41:	ShortVariable: Avoid variables with short names like b
src/jdepend/framework/PackageComparator.java:44:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/PackageComparator.java:44:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/PackageComparator.java:44:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/PackageComparator.java:44:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/PackageFilter.java:6:	CommentSize: Comment is too large: Too many lines
src/jdepend/framework/PackageFilter.java:6:	CommentSize: Comment is too large: Too many lines
src/jdepend/framework/PackageFilter.java:20:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/PackageFilter.java:20:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/PackageFilter.java:20:	CommentRequired: Field comments are required
src/jdepend/framework/PackageFilter.java:20:	CommentRequired: Field comments are required
src/jdepend/framework/PackageFilter.java:29:	LocalVariableCouldBeFinal: Local variable 'config' could be declared final
src/jdepend/framework/PackageFilter.java:29:	LocalVariableCouldBeFinal: Local variable 'config' could be declared final
src/jdepend/framework/PackageFilter.java:30:	ConstructorCallsOverridableMethod: Overridable method 'addPackages' called during object construction
src/jdepend/framework/PackageFilter.java:30:	ConstructorCallsOverridableMethod: Overridable method 'addPackages' called during object construction
src/jdepend/framework/PackageFilter.java:39:	MethodArgumentCouldBeFinal: Parameter 'f' is not assigned and could be declared final
src/jdepend/framework/PackageFilter.java:39:	MethodArgumentCouldBeFinal: Parameter 'f' is not assigned and could be declared final
src/jdepend/framework/PackageFilter.java:39:	ShortVariable: Avoid variables with short names like f
src/jdepend/framework/PackageFilter.java:39:	ShortVariable: Avoid variables with short names like f
src/jdepend/framework/PackageFilter.java:41:	LocalVariableCouldBeFinal: Local variable 'config' could be declared final
src/jdepend/framework/PackageFilter.java:41:	LocalVariableCouldBeFinal: Local variable 'config' could be declared final
src/jdepend/framework/PackageFilter.java:42:	ConstructorCallsOverridableMethod: Overridable method 'addPackages' called during object construction
src/jdepend/framework/PackageFilter.java:42:	ConstructorCallsOverridableMethod: Overridable method 'addPackages' called during object construction
src/jdepend/framework/PackageFilter.java:51:	MethodArgumentCouldBeFinal: Parameter 'packageNames' is not assigned and could be declared final
src/jdepend/framework/PackageFilter.java:51:	MethodArgumentCouldBeFinal: Parameter 'packageNames' is not assigned and could be declared final
src/jdepend/framework/PackageFilter.java:53:	ConstructorCallsOverridableMethod: Overridable method 'addPackages' called during object construction
src/jdepend/framework/PackageFilter.java:53:	ConstructorCallsOverridableMethod: Overridable method 'addPackages' called during object construction
src/jdepend/framework/PackageFilter.java:72:	MethodArgumentCouldBeFinal: Parameter 'packageName' is not assigned and could be declared final
src/jdepend/framework/PackageFilter.java:72:	MethodArgumentCouldBeFinal: Parameter 'packageName' is not assigned and could be declared final
src/jdepend/framework/PackageFilter.java:73:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/PackageFilter.java:73:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/PackageFilter.java:73:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/PackageFilter.java:73:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/PackageFilter.java:74:	LocalVariableCouldBeFinal: Local variable 'nameToFilter' could be declared final
src/jdepend/framework/PackageFilter.java:74:	LocalVariableCouldBeFinal: Local variable 'nameToFilter' could be declared final
src/jdepend/framework/PackageFilter.java:76:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/PackageFilter.java:76:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/PackageFilter.java:83:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/PackageFilter.java:83:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/PackageFilter.java:83:	MethodArgumentCouldBeFinal: Parameter 'packageNames' is not assigned and could be declared final
src/jdepend/framework/PackageFilter.java:83:	MethodArgumentCouldBeFinal: Parameter 'packageNames' is not assigned and could be declared final
src/jdepend/framework/PackageFilter.java:84:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/PackageFilter.java:84:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/framework/PackageFilter.java:84:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/PackageFilter.java:84:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/framework/PackageFilter.java:89:	AvoidReassigningParameters: Avoid reassigning parameters such as 'packageName'
src/jdepend/framework/PackageFilter.java:89:	AvoidReassigningParameters: Avoid reassigning parameters such as 'packageName'
src/jdepend/framework/PackageFilter.java:89:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/PackageFilter.java:89:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/PackageFilter.java:94:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/PackageFilter.java:94:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/PackageFilter.java:95:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/PackageFilter.java:95:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/ParserListener.java:3:	CommentSize: Comment is too large: Too many lines
src/jdepend/framework/ParserListener.java:3:	CommentSize: Comment is too large: Too many lines
src/jdepend/framework/ParserListener.java:22:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'onParsedJavaClass': the method is declared in an interface type
src/jdepend/framework/ParserListener.java:22:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'onParsedJavaClass': the method is declared in an interface type
src/jdepend/framework/PropertyConfigurator.java:13:	CommentSize: Comment is too large: Too many lines
src/jdepend/framework/PropertyConfigurator.java:13:	CommentSize: Comment is too large: Too many lines
src/jdepend/framework/PropertyConfigurator.java:25:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/PropertyConfigurator.java:25:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/framework/PropertyConfigurator.java:25:	CommentRequired: Field comments are required
src/jdepend/framework/PropertyConfigurator.java:25:	CommentRequired: Field comments are required
src/jdepend/framework/PropertyConfigurator.java:27:	CommentRequired: Field comments are required
src/jdepend/framework/PropertyConfigurator.java:27:	CommentRequired: Field comments are required
src/jdepend/framework/PropertyConfigurator.java:27:	LongVariable: Avoid excessively long variable names like DEFAULT_PROPERTY_FILE
src/jdepend/framework/PropertyConfigurator.java:27:	LongVariable: Avoid excessively long variable names like DEFAULT_PROPERTY_FILE
src/jdepend/framework/PropertyConfigurator.java:44:	MethodArgumentCouldBeFinal: Parameter 'p' is not assigned and could be declared final
src/jdepend/framework/PropertyConfigurator.java:44:	MethodArgumentCouldBeFinal: Parameter 'p' is not assigned and could be declared final
src/jdepend/framework/PropertyConfigurator.java:44:	ShortVariable: Avoid variables with short names like p
src/jdepend/framework/PropertyConfigurator.java:44:	ShortVariable: Avoid variables with short names like p
src/jdepend/framework/PropertyConfigurator.java:54:	MethodArgumentCouldBeFinal: Parameter 'f' is not assigned and could be declared final
src/jdepend/framework/PropertyConfigurator.java:54:	MethodArgumentCouldBeFinal: Parameter 'f' is not assigned and could be declared final
src/jdepend/framework/PropertyConfigurator.java:54:	ShortVariable: Avoid variables with short names like f
src/jdepend/framework/PropertyConfigurator.java:54:	ShortVariable: Avoid variables with short names like f
src/jdepend/framework/PropertyConfigurator.java:58:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/PropertyConfigurator.java:58:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/PropertyConfigurator.java:60:	LocalVariableCouldBeFinal: Local variable 'packages' could be declared final
src/jdepend/framework/PropertyConfigurator.java:60:	LocalVariableCouldBeFinal: Local variable 'packages' could be declared final
src/jdepend/framework/PropertyConfigurator.java:62:	LocalVariableCouldBeFinal: Local variable 'e' could be declared final
src/jdepend/framework/PropertyConfigurator.java:62:	LocalVariableCouldBeFinal: Local variable 'e' could be declared final
src/jdepend/framework/PropertyConfigurator.java:62:	ShortVariable: Avoid variables with short names like e
src/jdepend/framework/PropertyConfigurator.java:62:	ShortVariable: Avoid variables with short names like e
src/jdepend/framework/PropertyConfigurator.java:63:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/PropertyConfigurator.java:63:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/PropertyConfigurator.java:64:	LocalVariableCouldBeFinal: Local variable 'key' could be declared final
src/jdepend/framework/PropertyConfigurator.java:64:	LocalVariableCouldBeFinal: Local variable 'key' could be declared final
src/jdepend/framework/PropertyConfigurator.java:65:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/PropertyConfigurator.java:65:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/PropertyConfigurator.java:66:	LocalVariableCouldBeFinal: Local variable 'path' could be declared final
src/jdepend/framework/PropertyConfigurator.java:66:	LocalVariableCouldBeFinal: Local variable 'path' could be declared final
src/jdepend/framework/PropertyConfigurator.java:67:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/jdepend/framework/PropertyConfigurator.java:67:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/jdepend/framework/PropertyConfigurator.java:67:	LocalVariableCouldBeFinal: Local variable 'st' could be declared final
src/jdepend/framework/PropertyConfigurator.java:67:	LocalVariableCouldBeFinal: Local variable 'st' could be declared final
src/jdepend/framework/PropertyConfigurator.java:67:	ShortVariable: Avoid variables with short names like st
src/jdepend/framework/PropertyConfigurator.java:67:	ShortVariable: Avoid variables with short names like st
src/jdepend/framework/PropertyConfigurator.java:70:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/PropertyConfigurator.java:70:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/PropertyConfigurator.java:79:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/PropertyConfigurator.java:79:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/PropertyConfigurator.java:81:	LocalVariableCouldBeFinal: Local variable 'packages' could be declared final
src/jdepend/framework/PropertyConfigurator.java:81:	LocalVariableCouldBeFinal: Local variable 'packages' could be declared final
src/jdepend/framework/PropertyConfigurator.java:83:	LocalVariableCouldBeFinal: Local variable 'e' could be declared final
src/jdepend/framework/PropertyConfigurator.java:83:	LocalVariableCouldBeFinal: Local variable 'e' could be declared final
src/jdepend/framework/PropertyConfigurator.java:83:	ShortVariable: Avoid variables with short names like e
src/jdepend/framework/PropertyConfigurator.java:83:	ShortVariable: Avoid variables with short names like e
src/jdepend/framework/PropertyConfigurator.java:84:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/PropertyConfigurator.java:84:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/PropertyConfigurator.java:85:	LocalVariableCouldBeFinal: Local variable 'key' could be declared final
src/jdepend/framework/PropertyConfigurator.java:85:	LocalVariableCouldBeFinal: Local variable 'key' could be declared final
src/jdepend/framework/PropertyConfigurator.java:86:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/PropertyConfigurator.java:86:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/PropertyConfigurator.java:87:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/PropertyConfigurator.java:87:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/framework/PropertyConfigurator.java:87:	PositionLiteralsFirstInComparisons: Position literals first in String comparisons
src/jdepend/framework/PropertyConfigurator.java:87:	PositionLiteralsFirstInComparisons: Position literals first in String comparisons
src/jdepend/framework/PropertyConfigurator.java:87:	UselessParentheses: Useless parentheses.
src/jdepend/framework/PropertyConfigurator.java:87:	UselessParentheses: Useless parentheses.
src/jdepend/framework/PropertyConfigurator.java:88:	LocalVariableCouldBeFinal: Local variable 'v' could be declared final
src/jdepend/framework/PropertyConfigurator.java:88:	LocalVariableCouldBeFinal: Local variable 'v' could be declared final
src/jdepend/framework/PropertyConfigurator.java:88:	ShortVariable: Avoid variables with short names like v
src/jdepend/framework/PropertyConfigurator.java:88:	ShortVariable: Avoid variables with short names like v
src/jdepend/framework/PropertyConfigurator.java:89:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/jdepend/framework/PropertyConfigurator.java:89:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/jdepend/framework/PropertyConfigurator.java:89:	IntegerInstantiation: Avoid instantiating Integer objects. Call Integer.valueOf() instead.
src/jdepend/framework/PropertyConfigurator.java:89:	IntegerInstantiation: Avoid instantiating Integer objects. Call Integer.valueOf() instead.
src/jdepend/framework/PropertyConfigurator.java:96:	BooleanGetMethodName: A getX() method which returns a boolean should be named isX()
src/jdepend/framework/PropertyConfigurator.java:96:	BooleanGetMethodName: A getX() method which returns a boolean should be named isX()
src/jdepend/framework/PropertyConfigurator.java:96:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/PropertyConfigurator.java:96:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/PropertyConfigurator.java:98:	LocalVariableCouldBeFinal: Local variable 'key' could be declared final
src/jdepend/framework/PropertyConfigurator.java:98:	LocalVariableCouldBeFinal: Local variable 'key' could be declared final
src/jdepend/framework/PropertyConfigurator.java:100:	LocalVariableCouldBeFinal: Local variable 'value' could be declared final
src/jdepend/framework/PropertyConfigurator.java:100:	LocalVariableCouldBeFinal: Local variable 'value' could be declared final
src/jdepend/framework/PropertyConfigurator.java:101:	BooleanInstantiation: Avoid instantiating Boolean objects; reference Boolean.TRUE or Boolean.FALSE or call Boolean.valueOf() instead.
src/jdepend/framework/PropertyConfigurator.java:101:	BooleanInstantiation: Avoid instantiating Boolean objects; reference Boolean.TRUE or Boolean.FALSE or call Boolean.valueOf() instead.
src/jdepend/framework/PropertyConfigurator.java:101:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/PropertyConfigurator.java:101:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/framework/PropertyConfigurator.java:107:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/PropertyConfigurator.java:107:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/PropertyConfigurator.java:108:	LocalVariableCouldBeFinal: Local variable 'home' could be declared final
src/jdepend/framework/PropertyConfigurator.java:108:	LocalVariableCouldBeFinal: Local variable 'home' could be declared final
src/jdepend/framework/PropertyConfigurator.java:112:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/PropertyConfigurator.java:112:	CommentRequired: Public method and constructor comments are required
src/jdepend/framework/PropertyConfigurator.java:112:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/jdepend/framework/PropertyConfigurator.java:112:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/jdepend/framework/PropertyConfigurator.java:114:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
src/jdepend/framework/PropertyConfigurator.java:114:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
src/jdepend/framework/PropertyConfigurator.java:114:	ShortVariable: Avoid variables with short names like p
src/jdepend/framework/PropertyConfigurator.java:114:	ShortVariable: Avoid variables with short names like p
src/jdepend/framework/PropertyConfigurator.java:116:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'is' (lines '116'-'120').
src/jdepend/framework/PropertyConfigurator.java:116:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'is' (lines '116'-'120').
src/jdepend/framework/PropertyConfigurator.java:116:	ShortVariable: Avoid variables with short names like is
src/jdepend/framework/PropertyConfigurator.java:116:	ShortVariable: Avoid variables with short names like is
src/jdepend/framework/PropertyConfigurator.java:120:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/jdepend/framework/PropertyConfigurator.java:120:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/jdepend/framework/PropertyConfigurator.java:120:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'is' (lines '120'-'123').
src/jdepend/framework/PropertyConfigurator.java:120:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'is' (lines '120'-'123').
src/jdepend/framework/PropertyConfigurator.java:122:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/jdepend/framework/PropertyConfigurator.java:122:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/jdepend/framework/PropertyConfigurator.java:123:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/framework/PropertyConfigurator.java:123:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/AboutDialog.java:14:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/jdepend/swingui/AboutDialog.java:14:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/jdepend/swingui/AboutDialog.java:21:	MethodArgumentCouldBeFinal: Parameter 'parent' is not assigned and could be declared final
src/jdepend/swingui/AboutDialog.java:21:	MethodArgumentCouldBeFinal: Parameter 'parent' is not assigned and could be declared final
src/jdepend/swingui/AboutDialog.java:33:	CommentRequired: Public method and constructor comments are required
src/jdepend/swingui/AboutDialog.java:33:	CommentRequired: Public method and constructor comments are required
src/jdepend/swingui/AboutDialog.java:33:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/jdepend/swingui/AboutDialog.java:33:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/jdepend/swingui/AboutDialog.java:33:	MissingOverride: The method 'windowClosing(WindowEvent)' is missing an @Override annotation.
src/jdepend/swingui/AboutDialog.java:33:	MissingOverride: The method 'windowClosing(WindowEvent)' is missing an @Override annotation.
src/jdepend/swingui/AboutDialog.java:33:	ShortVariable: Avoid variables with short names like e
src/jdepend/swingui/AboutDialog.java:33:	ShortVariable: Avoid variables with short names like e
src/jdepend/swingui/AboutDialog.java:38:	LocalVariableCouldBeFinal: Local variable 'panel' could be declared final
src/jdepend/swingui/AboutDialog.java:38:	LocalVariableCouldBeFinal: Local variable 'panel' could be declared final
src/jdepend/swingui/AboutDialog.java:41:	LocalVariableCouldBeFinal: Local variable 'titleLabel' could be declared final
src/jdepend/swingui/AboutDialog.java:41:	LocalVariableCouldBeFinal: Local variable 'titleLabel' could be declared final
src/jdepend/swingui/AboutDialog.java:42:	AvoidDuplicateLiterals: The String literal "dialog" appears 4 times in this file; the first occurrence is on line 42
src/jdepend/swingui/AboutDialog.java:42:	AvoidDuplicateLiterals: The String literal "dialog" appears 4 times in this file; the first occurrence is on line 42
src/jdepend/swingui/AboutDialog.java:44:	LocalVariableCouldBeFinal: Local variable 'nameLabel' could be declared final
src/jdepend/swingui/AboutDialog.java:44:	LocalVariableCouldBeFinal: Local variable 'nameLabel' could be declared final
src/jdepend/swingui/AboutDialog.java:47:	LocalVariableCouldBeFinal: Local variable 'companyLabel' could be declared final
src/jdepend/swingui/AboutDialog.java:47:	LocalVariableCouldBeFinal: Local variable 'companyLabel' could be declared final
src/jdepend/swingui/AboutDialog.java:50:	LocalVariableCouldBeFinal: Local variable 'httpLabel' could be declared final
src/jdepend/swingui/AboutDialog.java:50:	LocalVariableCouldBeFinal: Local variable 'httpLabel' could be declared final
src/jdepend/swingui/AboutDialog.java:53:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'blankLabel' (lines '53'-'74').
src/jdepend/swingui/AboutDialog.java:53:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'blankLabel' (lines '53'-'74').
src/jdepend/swingui/AboutDialog.java:53:	LocalVariableCouldBeFinal: Local variable 'blankLabel' could be declared final
src/jdepend/swingui/AboutDialog.java:53:	LocalVariableCouldBeFinal: Local variable 'blankLabel' could be declared final
src/jdepend/swingui/AboutDialog.java:53:	UnusedLocalVariable: Avoid unused local variables such as 'blankLabel'.
src/jdepend/swingui/AboutDialog.java:53:	UnusedLocalVariable: Avoid unused local variables such as 'blankLabel'.
src/jdepend/swingui/AboutDialog.java:55:	LocalVariableCouldBeFinal: Local variable 'closeButton' could be declared final
src/jdepend/swingui/AboutDialog.java:55:	LocalVariableCouldBeFinal: Local variable 'closeButton' could be declared final
src/jdepend/swingui/AboutDialog.java:82:	MethodArgumentCouldBeFinal: Parameter 'label' is not assigned and could be declared final
src/jdepend/swingui/AboutDialog.java:82:	MethodArgumentCouldBeFinal: Parameter 'label' is not assigned and could be declared final
src/jdepend/swingui/AboutDialog.java:84:	LocalVariableCouldBeFinal: Local variable 'button' could be declared final
src/jdepend/swingui/AboutDialog.java:84:	LocalVariableCouldBeFinal: Local variable 'button' could be declared final
src/jdepend/swingui/AboutDialog.java:87:	CommentRequired: Public method and constructor comments are required
src/jdepend/swingui/AboutDialog.java:87:	CommentRequired: Public method and constructor comments are required
src/jdepend/swingui/AboutDialog.java:87:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/jdepend/swingui/AboutDialog.java:87:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/jdepend/swingui/AboutDialog.java:87:	MissingOverride: The method 'actionPerformed(ActionEvent)' is missing an @Override annotation.
src/jdepend/swingui/AboutDialog.java:87:	MissingOverride: The method 'actionPerformed(ActionEvent)' is missing an @Override annotation.
src/jdepend/swingui/AboutDialog.java:87:	ShortVariable: Avoid variables with short names like e
src/jdepend/swingui/AboutDialog.java:87:	ShortVariable: Avoid variables with short names like e
src/jdepend/swingui/AboutDialog.java:103:	MethodArgumentCouldBeFinal: Parameter 'x' is not assigned and could be declared final
src/jdepend/swingui/AboutDialog.java:103:	MethodArgumentCouldBeFinal: Parameter 'x' is not assigned and could be declared final
src/jdepend/swingui/AboutDialog.java:103:	MethodArgumentCouldBeFinal: Parameter 'y' is not assigned and could be declared final
src/jdepend/swingui/AboutDialog.java:103:	MethodArgumentCouldBeFinal: Parameter 'y' is not assigned and could be declared final
src/jdepend/swingui/AboutDialog.java:103:	ShortVariable: Avoid variables with short names like x
src/jdepend/swingui/AboutDialog.java:103:	ShortVariable: Avoid variables with short names like x
src/jdepend/swingui/AboutDialog.java:103:	ShortVariable: Avoid variables with short names like y
src/jdepend/swingui/AboutDialog.java:103:	ShortVariable: Avoid variables with short names like y
src/jdepend/swingui/AboutDialog.java:105:	LocalVariableCouldBeFinal: Local variable 'constraints' could be declared final
src/jdepend/swingui/AboutDialog.java:105:	LocalVariableCouldBeFinal: Local variable 'constraints' could be declared final
src/jdepend/swingui/AfferentNode.java:24:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/swingui/AfferentNode.java:24:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/swingui/AfferentNode.java:24:	MethodArgumentCouldBeFinal: Parameter 'parent' is not assigned and could be declared final
src/jdepend/swingui/AfferentNode.java:24:	MethodArgumentCouldBeFinal: Parameter 'parent' is not assigned and could be declared final
src/jdepend/swingui/AfferentNode.java:36:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/swingui/AfferentNode.java:36:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/swingui/AfferentNode.java:36:	MethodArgumentCouldBeFinal: Parameter 'parent' is not assigned and could be declared final
src/jdepend/swingui/AfferentNode.java:36:	MethodArgumentCouldBeFinal: Parameter 'parent' is not assigned and could be declared final
src/jdepend/swingui/AfferentNode.java:36:	MissingOverride: The method 'makeNode(PackageNode, JavaPackage)' is missing an @Override annotation.
src/jdepend/swingui/AfferentNode.java:36:	MissingOverride: The method 'makeNode(PackageNode, JavaPackage)' is missing an @Override annotation.
src/jdepend/swingui/AfferentNode.java:46:	MissingOverride: The method 'getCoupledPackages()' is missing an @Override annotation.
src/jdepend/swingui/AfferentNode.java:46:	MissingOverride: The method 'getCoupledPackages()' is missing an @Override annotation.
src/jdepend/swingui/AfferentNode.java:47:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/AfferentNode.java:47:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/AfferentNode.java:56:	MissingOverride: The method 'toString()' is missing an @Override annotation.
src/jdepend/swingui/AfferentNode.java:56:	MissingOverride: The method 'toString()' is missing an @Override annotation.
src/jdepend/swingui/AfferentNode.java:58:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/swingui/AfferentNode.java:58:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/swingui/AfferentNode.java:59:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/AfferentNode.java:59:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/DependTree.java:18:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/jdepend/swingui/DependTree.java:18:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/jdepend/swingui/DependTree.java:20:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/DependTree.java:20:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/DependTree.java:20:	CommentRequired: Field comments are required
src/jdepend/swingui/DependTree.java:20:	CommentRequired: Field comments are required
src/jdepend/swingui/DependTree.java:22:	CommentRequired: Field comments are required
src/jdepend/swingui/DependTree.java:22:	CommentRequired: Field comments are required
src/jdepend/swingui/DependTree.java:22:	SingularField: Perhaps 'model' could be replaced by a local variable.
src/jdepend/swingui/DependTree.java:22:	SingularField: Perhaps 'model' could be replaced by a local variable.
src/jdepend/swingui/DependTree.java:36:	CallSuperInConstructor: It is a good practice to call super() in a constructor
src/jdepend/swingui/DependTree.java:36:	CallSuperInConstructor: It is a good practice to call super() in a constructor
src/jdepend/swingui/DependTree.java:36:	MethodArgumentCouldBeFinal: Parameter 'model' is not assigned and could be declared final
src/jdepend/swingui/DependTree.java:36:	MethodArgumentCouldBeFinal: Parameter 'model' is not assigned and could be declared final
src/jdepend/swingui/DependTree.java:40:	ConstructorCallsOverridableMethod: Overridable method 'setModel' called during object construction
src/jdepend/swingui/DependTree.java:40:	ConstructorCallsOverridableMethod: Overridable method 'setModel' called during object construction
src/jdepend/swingui/DependTree.java:44:	LocalVariableCouldBeFinal: Local variable 'pane' could be declared final
src/jdepend/swingui/DependTree.java:44:	LocalVariableCouldBeFinal: Local variable 'pane' could be declared final
src/jdepend/swingui/DependTree.java:54:	MethodArgumentCouldBeFinal: Parameter 'model' is not assigned and could be declared final
src/jdepend/swingui/DependTree.java:54:	MethodArgumentCouldBeFinal: Parameter 'model' is not assigned and could be declared final
src/jdepend/swingui/DependTree.java:56:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/DependTree.java:56:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/DependTree.java:56:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/DependTree.java:56:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/DependTree.java:56:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/DependTree.java:56:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/DependTree.java:57:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/DependTree.java:57:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/DependTree.java:57:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/DependTree.java:57:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/DependTree.java:67:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/DependTree.java:67:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/DependTree.java:75:	MethodArgumentCouldBeFinal: Parameter 'l' is not assigned and could be declared final
src/jdepend/swingui/DependTree.java:75:	MethodArgumentCouldBeFinal: Parameter 'l' is not assigned and could be declared final
src/jdepend/swingui/DependTree.java:75:	ShortVariable: Avoid variables with short names like l
src/jdepend/swingui/DependTree.java:75:	ShortVariable: Avoid variables with short names like l
src/jdepend/swingui/DependTree.java:76:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/DependTree.java:76:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/DependTree.java:85:	MethodArgumentCouldBeFinal: Parameter 'te' is not assigned and could be declared final
src/jdepend/swingui/DependTree.java:85:	MethodArgumentCouldBeFinal: Parameter 'te' is not assigned and could be declared final
src/jdepend/swingui/DependTree.java:85:	MissingOverride: The method 'valueChanged(TreeSelectionEvent)' is missing an @Override annotation.
src/jdepend/swingui/DependTree.java:85:	MissingOverride: The method 'valueChanged(TreeSelectionEvent)' is missing an @Override annotation.
src/jdepend/swingui/DependTree.java:85:	ShortVariable: Avoid variables with short names like te
src/jdepend/swingui/DependTree.java:85:	ShortVariable: Avoid variables with short names like te
src/jdepend/swingui/DependTree.java:87:	LocalVariableCouldBeFinal: Local variable 'path' could be declared final
src/jdepend/swingui/DependTree.java:87:	LocalVariableCouldBeFinal: Local variable 'path' could be declared final
src/jdepend/swingui/DependTree.java:90:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'o' (lines '90'-'92').
src/jdepend/swingui/DependTree.java:90:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'o' (lines '90'-'92').
src/jdepend/swingui/DependTree.java:90:	LocalVariableCouldBeFinal: Local variable 'o' could be declared final
src/jdepend/swingui/DependTree.java:90:	LocalVariableCouldBeFinal: Local variable 'o' could be declared final
src/jdepend/swingui/DependTree.java:90:	ShortVariable: Avoid variables with short names like o
src/jdepend/swingui/DependTree.java:90:	ShortVariable: Avoid variables with short names like o
src/jdepend/swingui/DependTree.java:90:	UnusedLocalVariable: Avoid unused local variables such as 'o'.
src/jdepend/swingui/DependTree.java:90:	UnusedLocalVariable: Avoid unused local variables such as 'o'.
src/jdepend/swingui/DependTree.java:100:	LocalVariableCouldBeFinal: Local variable 'pane' could be declared final
src/jdepend/swingui/DependTree.java:100:	LocalVariableCouldBeFinal: Local variable 'pane' could be declared final
src/jdepend/swingui/DependTree.java:101:	UnnecessaryLocalBeforeReturn: Consider simply returning the value vs storing it in local variable 'pane'
src/jdepend/swingui/DependTree.java:101:	UnnecessaryLocalBeforeReturn: Consider simply returning the value vs storing it in local variable 'pane'
src/jdepend/swingui/DependTree.java:111:	LocalVariableCouldBeFinal: Local variable 'tree' could be declared final
src/jdepend/swingui/DependTree.java:111:	LocalVariableCouldBeFinal: Local variable 'tree' could be declared final
src/jdepend/swingui/DependTreeModel.java:17:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/DependTreeModel.java:17:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/DependTreeModel.java:17:	CommentRequired: Field comments are required
src/jdepend/swingui/DependTreeModel.java:17:	CommentRequired: Field comments are required
src/jdepend/swingui/DependTreeModel.java:17:	ImmutableField: Private field 'root' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/swingui/DependTreeModel.java:17:	ImmutableField: Private field 'root' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/swingui/DependTreeModel.java:19:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/DependTreeModel.java:19:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/DependTreeModel.java:19:	CommentRequired: Field comments are required
src/jdepend/swingui/DependTreeModel.java:19:	CommentRequired: Field comments are required
src/jdepend/swingui/DependTreeModel.java:19:	ImmutableField: Private field 'listeners' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/swingui/DependTreeModel.java:19:	ImmutableField: Private field 'listeners' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/swingui/DependTreeModel.java:19:	LooseCoupling: Avoid using implementation types like 'Vector'; use the interface instead
src/jdepend/swingui/DependTreeModel.java:19:	LooseCoupling: Avoid using implementation types like 'Vector'; use the interface instead
src/jdepend/swingui/DependTreeModel.java:19:	ReplaceVectorWithList: Consider replacing this Vector with the newer java.util.List
src/jdepend/swingui/DependTreeModel.java:19:	ReplaceVectorWithList: Consider replacing this Vector with the newer java.util.List
src/jdepend/swingui/DependTreeModel.java:27:	MethodArgumentCouldBeFinal: Parameter 'root' is not assigned and could be declared final
src/jdepend/swingui/DependTreeModel.java:27:	MethodArgumentCouldBeFinal: Parameter 'root' is not assigned and could be declared final
src/jdepend/swingui/DependTreeModel.java:38:	MissingOverride: The method 'getRoot()' is missing an @Override annotation.
src/jdepend/swingui/DependTreeModel.java:38:	MissingOverride: The method 'getRoot()' is missing an @Override annotation.
src/jdepend/swingui/DependTreeModel.java:42:	CommentSize: Comment is too large: Too many lines
src/jdepend/swingui/DependTreeModel.java:42:	CommentSize: Comment is too large: Too many lines
src/jdepend/swingui/DependTreeModel.java:53:	MethodArgumentCouldBeFinal: Parameter 'index' is not assigned and could be declared final
src/jdepend/swingui/DependTreeModel.java:53:	MethodArgumentCouldBeFinal: Parameter 'index' is not assigned and could be declared final
src/jdepend/swingui/DependTreeModel.java:53:	MethodArgumentCouldBeFinal: Parameter 'parent' is not assigned and could be declared final
src/jdepend/swingui/DependTreeModel.java:53:	MethodArgumentCouldBeFinal: Parameter 'parent' is not assigned and could be declared final
src/jdepend/swingui/DependTreeModel.java:53:	MissingOverride: The method 'getChild(Object, int)' is missing an @Override annotation.
src/jdepend/swingui/DependTreeModel.java:53:	MissingOverride: The method 'getChild(Object, int)' is missing an @Override annotation.
src/jdepend/swingui/DependTreeModel.java:55:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'answer' (lines '55'-'63').
src/jdepend/swingui/DependTreeModel.java:55:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'answer' (lines '55'-'63').
src/jdepend/swingui/DependTreeModel.java:59:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/DependTreeModel.java:59:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/DependTreeModel.java:62:	CollapsibleIfStatements: These nested if statements could be combined
src/jdepend/swingui/DependTreeModel.java:62:	CollapsibleIfStatements: These nested if statements could be combined
src/jdepend/swingui/DependTreeModel.java:71:	CommentSize: Comment is too large: Too many lines
src/jdepend/swingui/DependTreeModel.java:71:	CommentSize: Comment is too large: Too many lines
src/jdepend/swingui/DependTreeModel.java:81:	MethodArgumentCouldBeFinal: Parameter 'parent' is not assigned and could be declared final
src/jdepend/swingui/DependTreeModel.java:81:	MethodArgumentCouldBeFinal: Parameter 'parent' is not assigned and could be declared final
src/jdepend/swingui/DependTreeModel.java:81:	MissingOverride: The method 'getChildCount(Object)' is missing an @Override annotation.
src/jdepend/swingui/DependTreeModel.java:81:	MissingOverride: The method 'getChildCount(Object)' is missing an @Override annotation.
src/jdepend/swingui/DependTreeModel.java:83:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'answer' (lines '83'-'90').
src/jdepend/swingui/DependTreeModel.java:83:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'answer' (lines '83'-'90').
src/jdepend/swingui/DependTreeModel.java:87:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/DependTreeModel.java:87:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/DependTreeModel.java:104:	MethodArgumentCouldBeFinal: Parameter 'o' is not assigned and could be declared final
src/jdepend/swingui/DependTreeModel.java:104:	MethodArgumentCouldBeFinal: Parameter 'o' is not assigned and could be declared final
src/jdepend/swingui/DependTreeModel.java:104:	MissingOverride: The method 'isLeaf(Object)' is missing an @Override annotation.
src/jdepend/swingui/DependTreeModel.java:104:	MissingOverride: The method 'isLeaf(Object)' is missing an @Override annotation.
src/jdepend/swingui/DependTreeModel.java:104:	ShortVariable: Avoid variables with short names like o
src/jdepend/swingui/DependTreeModel.java:104:	ShortVariable: Avoid variables with short names like o
src/jdepend/swingui/DependTreeModel.java:106:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'answer' (lines '106'-'114').
src/jdepend/swingui/DependTreeModel.java:106:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'answer' (lines '106'-'114').
src/jdepend/swingui/DependTreeModel.java:106:	LocalVariableCouldBeFinal: Local variable 'answer' could be declared final
src/jdepend/swingui/DependTreeModel.java:106:	LocalVariableCouldBeFinal: Local variable 'answer' could be declared final
src/jdepend/swingui/DependTreeModel.java:106:	PrematureDeclaration: Avoid declaring a variable if it is unreferenced before a possible exit point.
src/jdepend/swingui/DependTreeModel.java:106:	PrematureDeclaration: Avoid declaring a variable if it is unreferenced before a possible exit point.
src/jdepend/swingui/DependTreeModel.java:109:	LocalVariableCouldBeFinal: Local variable 'node' could be declared final
src/jdepend/swingui/DependTreeModel.java:109:	LocalVariableCouldBeFinal: Local variable 'node' could be declared final
src/jdepend/swingui/DependTreeModel.java:110:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/swingui/DependTreeModel.java:110:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/swingui/DependTreeModel.java:110:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/swingui/DependTreeModel.java:110:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/swingui/DependTreeModel.java:123:	MethodArgumentCouldBeFinal: Parameter 'newValue' is not assigned and could be declared final
src/jdepend/swingui/DependTreeModel.java:123:	MethodArgumentCouldBeFinal: Parameter 'newValue' is not assigned and could be declared final
src/jdepend/swingui/DependTreeModel.java:123:	MethodArgumentCouldBeFinal: Parameter 'path' is not assigned and could be declared final
src/jdepend/swingui/DependTreeModel.java:123:	MethodArgumentCouldBeFinal: Parameter 'path' is not assigned and could be declared final
src/jdepend/swingui/DependTreeModel.java:123:	MissingOverride: The method 'valueForPathChanged(TreePath, Object)' is missing an @Override annotation.
src/jdepend/swingui/DependTreeModel.java:123:	MissingOverride: The method 'valueForPathChanged(TreePath, Object)' is missing an @Override annotation.
src/jdepend/swingui/DependTreeModel.java:134:	MethodArgumentCouldBeFinal: Parameter 'child' is not assigned and could be declared final
src/jdepend/swingui/DependTreeModel.java:134:	MethodArgumentCouldBeFinal: Parameter 'child' is not assigned and could be declared final
src/jdepend/swingui/DependTreeModel.java:134:	MethodArgumentCouldBeFinal: Parameter 'parent' is not assigned and could be declared final
src/jdepend/swingui/DependTreeModel.java:134:	MethodArgumentCouldBeFinal: Parameter 'parent' is not assigned and could be declared final
src/jdepend/swingui/DependTreeModel.java:134:	MissingOverride: The method 'getIndexOfChild(Object, Object)' is missing an @Override annotation.
src/jdepend/swingui/DependTreeModel.java:134:	MissingOverride: The method 'getIndexOfChild(Object, Object)' is missing an @Override annotation.
src/jdepend/swingui/DependTreeModel.java:135:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'answer' (lines '135'-'142').
src/jdepend/swingui/DependTreeModel.java:135:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'answer' (lines '135'-'142').
src/jdepend/swingui/DependTreeModel.java:136:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'children' (lines '136'-'139').
src/jdepend/swingui/DependTreeModel.java:136:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'children' (lines '136'-'139').
src/jdepend/swingui/DependTreeModel.java:136:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'children' (lines '136'-'147').
src/jdepend/swingui/DependTreeModel.java:136:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'children' (lines '136'-'147').
src/jdepend/swingui/DependTreeModel.java:139:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/DependTreeModel.java:139:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/DependTreeModel.java:155:	MethodArgumentCouldBeFinal: Parameter 'l' is not assigned and could be declared final
src/jdepend/swingui/DependTreeModel.java:155:	MethodArgumentCouldBeFinal: Parameter 'l' is not assigned and could be declared final
src/jdepend/swingui/DependTreeModel.java:155:	MissingOverride: The method 'addTreeModelListener(TreeModelListener)' is missing an @Override annotation.
src/jdepend/swingui/DependTreeModel.java:155:	MissingOverride: The method 'addTreeModelListener(TreeModelListener)' is missing an @Override annotation.
src/jdepend/swingui/DependTreeModel.java:155:	ShortVariable: Avoid variables with short names like l
src/jdepend/swingui/DependTreeModel.java:155:	ShortVariable: Avoid variables with short names like l
src/jdepend/swingui/DependTreeModel.java:157:	UselessParentheses: Useless parentheses.
src/jdepend/swingui/DependTreeModel.java:157:	UselessParentheses: Useless parentheses.
src/jdepend/swingui/DependTreeModel.java:167:	MethodArgumentCouldBeFinal: Parameter 'l' is not assigned and could be declared final
src/jdepend/swingui/DependTreeModel.java:167:	MethodArgumentCouldBeFinal: Parameter 'l' is not assigned and could be declared final
src/jdepend/swingui/DependTreeModel.java:167:	MissingOverride: The method 'removeTreeModelListener(TreeModelListener)' is missing an @Override annotation.
src/jdepend/swingui/DependTreeModel.java:167:	MissingOverride: The method 'removeTreeModelListener(TreeModelListener)' is missing an @Override annotation.
src/jdepend/swingui/DependTreeModel.java:167:	ShortVariable: Avoid variables with short names like l
src/jdepend/swingui/DependTreeModel.java:167:	ShortVariable: Avoid variables with short names like l
src/jdepend/swingui/EfferentNode.java:24:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/swingui/EfferentNode.java:24:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/swingui/EfferentNode.java:24:	MethodArgumentCouldBeFinal: Parameter 'parent' is not assigned and could be declared final
src/jdepend/swingui/EfferentNode.java:24:	MethodArgumentCouldBeFinal: Parameter 'parent' is not assigned and could be declared final
src/jdepend/swingui/EfferentNode.java:36:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/swingui/EfferentNode.java:36:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/swingui/EfferentNode.java:36:	MethodArgumentCouldBeFinal: Parameter 'parent' is not assigned and could be declared final
src/jdepend/swingui/EfferentNode.java:36:	MethodArgumentCouldBeFinal: Parameter 'parent' is not assigned and could be declared final
src/jdepend/swingui/EfferentNode.java:36:	MissingOverride: The method 'makeNode(PackageNode, JavaPackage)' is missing an @Override annotation.
src/jdepend/swingui/EfferentNode.java:36:	MissingOverride: The method 'makeNode(PackageNode, JavaPackage)' is missing an @Override annotation.
src/jdepend/swingui/EfferentNode.java:46:	MissingOverride: The method 'getCoupledPackages()' is missing an @Override annotation.
src/jdepend/swingui/EfferentNode.java:46:	MissingOverride: The method 'getCoupledPackages()' is missing an @Override annotation.
src/jdepend/swingui/EfferentNode.java:47:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/EfferentNode.java:47:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/EfferentNode.java:50:	CommentSize: Comment is too large: Too many lines
src/jdepend/swingui/EfferentNode.java:50:	CommentSize: Comment is too large: Too many lines
src/jdepend/swingui/EfferentNode.java:61:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/swingui/EfferentNode.java:61:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/swingui/EfferentNode.java:61:	MissingOverride: The method 'isChild(JavaPackage)' is missing an @Override annotation.
src/jdepend/swingui/EfferentNode.java:61:	MissingOverride: The method 'isChild(JavaPackage)' is missing an @Override annotation.
src/jdepend/swingui/EfferentNode.java:62:	ConfusingTernary: Avoid if (x != y) ..; else ..;
src/jdepend/swingui/EfferentNode.java:62:	ConfusingTernary: Avoid if (x != y) ..; else ..;
src/jdepend/swingui/EfferentNode.java:63:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/swingui/EfferentNode.java:63:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/swingui/EfferentNode.java:65:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/swingui/EfferentNode.java:65:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/swingui/EfferentNode.java:77:	MissingOverride: The method 'toString()' is missing an @Override annotation.
src/jdepend/swingui/EfferentNode.java:77:	MissingOverride: The method 'toString()' is missing an @Override annotation.
src/jdepend/swingui/EfferentNode.java:79:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/swingui/EfferentNode.java:79:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/swingui/EfferentNode.java:80:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/EfferentNode.java:80:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:27:	GodClass: Possible God Class (WMC=54, ATFD=54, TCC=2.674%)
src/jdepend/swingui/JDepend.java:27:	GodClass: Possible God Class (WMC=54, ATFD=54, TCC=2.674%)
src/jdepend/swingui/JDepend.java:27:	TooManyMethods: This class has too many methods, consider refactoring it.
src/jdepend/swingui/JDepend.java:27:	TooManyMethods: This class has too many methods, consider refactoring it.
src/jdepend/swingui/JDepend.java:29:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/JDepend.java:29:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/JDepend.java:29:	CommentRequired: Field comments are required
src/jdepend/swingui/JDepend.java:29:	CommentRequired: Field comments are required
src/jdepend/swingui/JDepend.java:29:	ImmutableField: Private field 'analyzer' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/swingui/JDepend.java:29:	ImmutableField: Private field 'analyzer' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/swingui/JDepend.java:31:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/JDepend.java:31:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/JDepend.java:31:	CommentRequired: Field comments are required
src/jdepend/swingui/JDepend.java:31:	CommentRequired: Field comments are required
src/jdepend/swingui/JDepend.java:33:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/JDepend.java:33:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/JDepend.java:33:	CommentRequired: Field comments are required
src/jdepend/swingui/JDepend.java:33:	CommentRequired: Field comments are required
src/jdepend/swingui/JDepend.java:35:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/JDepend.java:35:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/JDepend.java:35:	CommentRequired: Field comments are required
src/jdepend/swingui/JDepend.java:35:	CommentRequired: Field comments are required
src/jdepend/swingui/JDepend.java:37:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/JDepend.java:37:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/JDepend.java:37:	CommentRequired: Field comments are required
src/jdepend/swingui/JDepend.java:37:	CommentRequired: Field comments are required
src/jdepend/swingui/JDepend.java:39:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/JDepend.java:39:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/JDepend.java:39:	CommentRequired: Field comments are required
src/jdepend/swingui/JDepend.java:39:	CommentRequired: Field comments are required
src/jdepend/swingui/JDepend.java:41:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/JDepend.java:41:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/JDepend.java:41:	CommentRequired: Field comments are required
src/jdepend/swingui/JDepend.java:41:	CommentRequired: Field comments are required
src/jdepend/swingui/JDepend.java:43:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/JDepend.java:43:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/JDepend.java:43:	CommentRequired: Field comments are required
src/jdepend/swingui/JDepend.java:43:	CommentRequired: Field comments are required
src/jdepend/swingui/JDepend.java:43:	ImmutableField: Private field 'resourceStrings' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/swingui/JDepend.java:43:	ImmutableField: Private field 'resourceStrings' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/swingui/JDepend.java:43:	LooseCoupling: Avoid using implementation types like 'Hashtable'; use the interface instead
src/jdepend/swingui/JDepend.java:43:	LooseCoupling: Avoid using implementation types like 'Hashtable'; use the interface instead
src/jdepend/swingui/JDepend.java:43:	ReplaceHashtableWithMap: Consider replacing this Hashtable with the newer java.util.Map
src/jdepend/swingui/JDepend.java:43:	ReplaceHashtableWithMap: Consider replacing this Hashtable with the newer java.util.Map
src/jdepend/swingui/JDepend.java:45:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/JDepend.java:45:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/JDepend.java:45:	CommentRequired: Field comments are required
src/jdepend/swingui/JDepend.java:45:	CommentRequired: Field comments are required
src/jdepend/swingui/JDepend.java:45:	ImmutableField: Private field 'actions' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/swingui/JDepend.java:45:	ImmutableField: Private field 'actions' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/swingui/JDepend.java:45:	LooseCoupling: Avoid using implementation types like 'Hashtable'; use the interface instead
src/jdepend/swingui/JDepend.java:45:	LooseCoupling: Avoid using implementation types like 'Hashtable'; use the interface instead
src/jdepend/swingui/JDepend.java:45:	ReplaceHashtableWithMap: Consider replacing this Hashtable with the newer java.util.Map
src/jdepend/swingui/JDepend.java:45:	ReplaceHashtableWithMap: Consider replacing this Hashtable with the newer java.util.Map
src/jdepend/swingui/JDepend.java:47:	CommentRequired: Field comments are required
src/jdepend/swingui/JDepend.java:47:	CommentRequired: Field comments are required
src/jdepend/swingui/JDepend.java:47:	SuspiciousConstantFieldName: The field name indicates a constant but its modifiers do not
src/jdepend/swingui/JDepend.java:47:	SuspiciousConstantFieldName: The field name indicates a constant but its modifiers do not
src/jdepend/swingui/JDepend.java:65:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/jdepend/swingui/JDepend.java:65:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/jdepend/swingui/JDepend.java:66:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/jdepend/swingui/JDepend.java:66:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/jdepend/swingui/JDepend.java:91:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:91:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:100:	MethodArgumentCouldBeFinal: Parameter 'filter' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:100:	MethodArgumentCouldBeFinal: Parameter 'filter' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:107:	MethodArgumentCouldBeFinal: Parameter 'components' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:107:	MethodArgumentCouldBeFinal: Parameter 'components' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:121:	LocalVariableCouldBeFinal: Local variable 'packages' could be declared final
src/jdepend/swingui/JDepend.java:121:	LocalVariableCouldBeFinal: Local variable 'packages' could be declared final
src/jdepend/swingui/JDepend.java:137:	MissingOverride: The method 'onParsedJavaClass(JavaClass)' is missing an @Override annotation.
src/jdepend/swingui/JDepend.java:137:	MissingOverride: The method 'onParsedJavaClass(JavaClass)' is missing an @Override annotation.
src/jdepend/swingui/JDepend.java:138:	DoNotUseThreads: To be compliant to J2EE, a webapp should not use any thread.
src/jdepend/swingui/JDepend.java:138:	DoNotUseThreads: To be compliant to J2EE, a webapp should not use any thread.
src/jdepend/swingui/JDepend.java:140:	CommentRequired: Public method and constructor comments are required
src/jdepend/swingui/JDepend.java:140:	CommentRequired: Public method and constructor comments are required
src/jdepend/swingui/JDepend.java:140:	MissingOverride: The method 'run()' is missing an @Override annotation.
src/jdepend/swingui/JDepend.java:140:	MissingOverride: The method 'run()' is missing an @Override annotation.
src/jdepend/swingui/JDepend.java:141:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:141:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:141:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:141:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:151:	LooseCoupling: Avoid using implementation types like 'ArrayList'; use the interface instead
src/jdepend/swingui/JDepend.java:151:	LooseCoupling: Avoid using implementation types like 'ArrayList'; use the interface instead
src/jdepend/swingui/JDepend.java:151:	MethodArgumentCouldBeFinal: Parameter 'packages' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:151:	MethodArgumentCouldBeFinal: Parameter 'packages' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:153:	LocalVariableCouldBeFinal: Local variable 'jPackage' could be declared final
src/jdepend/swingui/JDepend.java:153:	LocalVariableCouldBeFinal: Local variable 'jPackage' could be declared final
src/jdepend/swingui/JDepend.java:157:	LocalVariableCouldBeFinal: Local variable 'ah' could be declared final
src/jdepend/swingui/JDepend.java:157:	LocalVariableCouldBeFinal: Local variable 'ah' could be declared final
src/jdepend/swingui/JDepend.java:157:	ShortVariable: Avoid variables with short names like ah
src/jdepend/swingui/JDepend.java:157:	ShortVariable: Avoid variables with short names like ah
src/jdepend/swingui/JDepend.java:160:	LocalVariableCouldBeFinal: Local variable 'eh' could be declared final
src/jdepend/swingui/JDepend.java:160:	LocalVariableCouldBeFinal: Local variable 'eh' could be declared final
src/jdepend/swingui/JDepend.java:160:	ShortVariable: Avoid variables with short names like eh
src/jdepend/swingui/JDepend.java:160:	ShortVariable: Avoid variables with short names like eh
src/jdepend/swingui/JDepend.java:165:	DoNotUseThreads: To be compliant to J2EE, a webapp should not use any thread.
src/jdepend/swingui/JDepend.java:165:	DoNotUseThreads: To be compliant to J2EE, a webapp should not use any thread.
src/jdepend/swingui/JDepend.java:167:	CommentRequired: Public method and constructor comments are required
src/jdepend/swingui/JDepend.java:167:	CommentRequired: Public method and constructor comments are required
src/jdepend/swingui/JDepend.java:167:	MissingOverride: The method 'run()' is missing an @Override annotation.
src/jdepend/swingui/JDepend.java:167:	MissingOverride: The method 'run()' is missing an @Override annotation.
src/jdepend/swingui/JDepend.java:168:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:168:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:169:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:169:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:170:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:170:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:170:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:170:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:176:	DoNotUseThreads: To be compliant to J2EE, a webapp should not use any thread.
src/jdepend/swingui/JDepend.java:176:	DoNotUseThreads: To be compliant to J2EE, a webapp should not use any thread.
src/jdepend/swingui/JDepend.java:178:	CommentRequired: Public method and constructor comments are required
src/jdepend/swingui/JDepend.java:178:	CommentRequired: Public method and constructor comments are required
src/jdepend/swingui/JDepend.java:178:	MissingOverride: The method 'run()' is missing an @Override annotation.
src/jdepend/swingui/JDepend.java:178:	MissingOverride: The method 'run()' is missing an @Override annotation.
src/jdepend/swingui/JDepend.java:179:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:179:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:179:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:179:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:180:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:180:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:180:	LocalVariableCouldBeFinal: Local variable 'classCount' could be declared final
src/jdepend/swingui/JDepend.java:180:	LocalVariableCouldBeFinal: Local variable 'classCount' could be declared final
src/jdepend/swingui/JDepend.java:181:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:181:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:181:	LocalVariableCouldBeFinal: Local variable 'packageCount' could be declared final
src/jdepend/swingui/JDepend.java:181:	LocalVariableCouldBeFinal: Local variable 'packageCount' could be declared final
src/jdepend/swingui/JDepend.java:182:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:182:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:190:	LocalVariableCouldBeFinal: Local variable 'frame' could be declared final
src/jdepend/swingui/JDepend.java:190:	LocalVariableCouldBeFinal: Local variable 'frame' could be declared final
src/jdepend/swingui/JDepend.java:192:	LocalVariableCouldBeFinal: Local variable 'menuBar' could be declared final
src/jdepend/swingui/JDepend.java:192:	LocalVariableCouldBeFinal: Local variable 'menuBar' could be declared final
src/jdepend/swingui/JDepend.java:193:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/swingui/JDepend.java:193:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/swingui/JDepend.java:195:	LocalVariableCouldBeFinal: Local variable 'treePanel' could be declared final
src/jdepend/swingui/JDepend.java:195:	LocalVariableCouldBeFinal: Local variable 'treePanel' could be declared final
src/jdepend/swingui/JDepend.java:196:	LocalVariableCouldBeFinal: Local variable 'statusPanel' could be declared final
src/jdepend/swingui/JDepend.java:196:	LocalVariableCouldBeFinal: Local variable 'statusPanel' could be declared final
src/jdepend/swingui/JDepend.java:198:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:198:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:198:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/swingui/JDepend.java:198:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/swingui/JDepend.java:199:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:199:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:199:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/swingui/JDepend.java:199:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/swingui/JDepend.java:200:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/swingui/JDepend.java:200:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/swingui/JDepend.java:202:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:202:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:202:	LocalVariableCouldBeFinal: Local variable 'screenSize' could be declared final
src/jdepend/swingui/JDepend.java:202:	LocalVariableCouldBeFinal: Local variable 'screenSize' could be declared final
src/jdepend/swingui/JDepend.java:203:	LocalVariableCouldBeFinal: Local variable 'width' could be declared final
src/jdepend/swingui/JDepend.java:203:	LocalVariableCouldBeFinal: Local variable 'width' could be declared final
src/jdepend/swingui/JDepend.java:204:	LocalVariableCouldBeFinal: Local variable 'height' could be declared final
src/jdepend/swingui/JDepend.java:204:	LocalVariableCouldBeFinal: Local variable 'height' could be declared final
src/jdepend/swingui/JDepend.java:205:	LocalVariableCouldBeFinal: Local variable 'x' could be declared final
src/jdepend/swingui/JDepend.java:205:	LocalVariableCouldBeFinal: Local variable 'x' could be declared final
src/jdepend/swingui/JDepend.java:205:	ShortVariable: Avoid variables with short names like x
src/jdepend/swingui/JDepend.java:205:	ShortVariable: Avoid variables with short names like x
src/jdepend/swingui/JDepend.java:206:	LocalVariableCouldBeFinal: Local variable 'y' could be declared final
src/jdepend/swingui/JDepend.java:206:	LocalVariableCouldBeFinal: Local variable 'y' could be declared final
src/jdepend/swingui/JDepend.java:206:	ShortVariable: Avoid variables with short names like y
src/jdepend/swingui/JDepend.java:206:	ShortVariable: Avoid variables with short names like y
src/jdepend/swingui/JDepend.java:207:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/swingui/JDepend.java:207:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/swingui/JDepend.java:208:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/swingui/JDepend.java:208:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/swingui/JDepend.java:213:	MethodArgumentCouldBeFinal: Parameter 'title' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:213:	MethodArgumentCouldBeFinal: Parameter 'title' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:215:	LocalVariableCouldBeFinal: Local variable 'frame' could be declared final
src/jdepend/swingui/JDepend.java:215:	LocalVariableCouldBeFinal: Local variable 'frame' could be declared final
src/jdepend/swingui/JDepend.java:222:	CommentRequired: Public method and constructor comments are required
src/jdepend/swingui/JDepend.java:222:	CommentRequired: Public method and constructor comments are required
src/jdepend/swingui/JDepend.java:222:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:222:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:222:	MissingOverride: The method 'windowClosing(WindowEvent)' is missing an @Override annotation.
src/jdepend/swingui/JDepend.java:222:	MissingOverride: The method 'windowClosing(WindowEvent)' is missing an @Override annotation.
src/jdepend/swingui/JDepend.java:222:	ShortVariable: Avoid variables with short names like e
src/jdepend/swingui/JDepend.java:222:	ShortVariable: Avoid variables with short names like e
src/jdepend/swingui/JDepend.java:232:	LocalVariableCouldBeFinal: Local variable 'panel' could be declared final
src/jdepend/swingui/JDepend.java:232:	LocalVariableCouldBeFinal: Local variable 'panel' could be declared final
src/jdepend/swingui/JDepend.java:251:	LocalVariableCouldBeFinal: Local variable 'panel' could be declared final
src/jdepend/swingui/JDepend.java:251:	LocalVariableCouldBeFinal: Local variable 'panel' could be declared final
src/jdepend/swingui/JDepend.java:258:	LocalVariableCouldBeFinal: Local variable 'bar' could be declared final
src/jdepend/swingui/JDepend.java:258:	LocalVariableCouldBeFinal: Local variable 'bar' could be declared final
src/jdepend/swingui/JDepend.java:265:	LocalVariableCouldBeFinal: Local variable 'statusField' could be declared final
src/jdepend/swingui/JDepend.java:265:	LocalVariableCouldBeFinal: Local variable 'statusField' could be declared final
src/jdepend/swingui/JDepend.java:272:	LocalVariableCouldBeFinal: Local variable 'insets' could be declared final
src/jdepend/swingui/JDepend.java:272:	LocalVariableCouldBeFinal: Local variable 'insets' could be declared final
src/jdepend/swingui/JDepend.java:280:	LocalVariableCouldBeFinal: Local variable 'menuBar' could be declared final
src/jdepend/swingui/JDepend.java:280:	LocalVariableCouldBeFinal: Local variable 'menuBar' could be declared final
src/jdepend/swingui/JDepend.java:282:	LocalVariableCouldBeFinal: Local variable 'menuKeys' could be declared final
src/jdepend/swingui/JDepend.java:282:	LocalVariableCouldBeFinal: Local variable 'menuKeys' could be declared final
src/jdepend/swingui/JDepend.java:283:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/swingui/JDepend.java:283:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/swingui/JDepend.java:284:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:284:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:284:	LocalVariableCouldBeFinal: Local variable 'm' could be declared final
src/jdepend/swingui/JDepend.java:284:	LocalVariableCouldBeFinal: Local variable 'm' could be declared final
src/jdepend/swingui/JDepend.java:284:	ShortVariable: Avoid variables with short names like m
src/jdepend/swingui/JDepend.java:284:	ShortVariable: Avoid variables with short names like m
src/jdepend/swingui/JDepend.java:293:	MethodArgumentCouldBeFinal: Parameter 'key' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:293:	MethodArgumentCouldBeFinal: Parameter 'key' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:295:	LocalVariableCouldBeFinal: Local variable 'itemKeys' could be declared final
src/jdepend/swingui/JDepend.java:295:	LocalVariableCouldBeFinal: Local variable 'itemKeys' could be declared final
src/jdepend/swingui/JDepend.java:296:	LocalVariableCouldBeFinal: Local variable 'menu' could be declared final
src/jdepend/swingui/JDepend.java:296:	LocalVariableCouldBeFinal: Local variable 'menu' could be declared final
src/jdepend/swingui/JDepend.java:297:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/swingui/JDepend.java:297:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/jdepend/swingui/JDepend.java:298:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:298:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:298:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:298:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:301:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:301:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:301:	LocalVariableCouldBeFinal: Local variable 'mi' could be declared final
src/jdepend/swingui/JDepend.java:301:	LocalVariableCouldBeFinal: Local variable 'mi' could be declared final
src/jdepend/swingui/JDepend.java:301:	ShortVariable: Avoid variables with short names like mi
src/jdepend/swingui/JDepend.java:301:	ShortVariable: Avoid variables with short names like mi
src/jdepend/swingui/JDepend.java:306:	LocalVariableCouldBeFinal: Local variable 'mnemonic' could be declared final
src/jdepend/swingui/JDepend.java:306:	LocalVariableCouldBeFinal: Local variable 'mnemonic' could be declared final
src/jdepend/swingui/JDepend.java:312:	MethodArgumentCouldBeFinal: Parameter 'key' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:312:	MethodArgumentCouldBeFinal: Parameter 'key' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:314:	LocalVariableCouldBeFinal: Local variable 'mi' could be declared final
src/jdepend/swingui/JDepend.java:314:	LocalVariableCouldBeFinal: Local variable 'mi' could be declared final
src/jdepend/swingui/JDepend.java:314:	ShortVariable: Avoid variables with short names like mi
src/jdepend/swingui/JDepend.java:314:	ShortVariable: Avoid variables with short names like mi
src/jdepend/swingui/JDepend.java:316:	LocalVariableCouldBeFinal: Local variable 'mnemonic' could be declared final
src/jdepend/swingui/JDepend.java:316:	LocalVariableCouldBeFinal: Local variable 'mnemonic' could be declared final
src/jdepend/swingui/JDepend.java:319:	LocalVariableCouldBeFinal: Local variable 'accelerator' could be declared final
src/jdepend/swingui/JDepend.java:319:	LocalVariableCouldBeFinal: Local variable 'accelerator' could be declared final
src/jdepend/swingui/JDepend.java:323:	LocalVariableCouldBeFinal: Local variable 'actionString' could be declared final
src/jdepend/swingui/JDepend.java:323:	LocalVariableCouldBeFinal: Local variable 'actionString' could be declared final
src/jdepend/swingui/JDepend.java:326:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
src/jdepend/swingui/JDepend.java:326:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
src/jdepend/swingui/JDepend.java:326:	ShortVariable: Avoid variables with short names like a
src/jdepend/swingui/JDepend.java:326:	ShortVariable: Avoid variables with short names like a
src/jdepend/swingui/JDepend.java:327:	ConfusingTernary: Avoid if (x != y) ..; else ..;
src/jdepend/swingui/JDepend.java:327:	ConfusingTernary: Avoid if (x != y) ..; else ..;
src/jdepend/swingui/JDepend.java:338:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:338:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:339:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:339:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:340:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:340:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:344:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:344:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:345:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:345:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:346:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:346:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:389:	MethodArgumentCouldBeFinal: Parameter 'command' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:389:	MethodArgumentCouldBeFinal: Parameter 'command' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:397:	MethodArgumentCouldBeFinal: Parameter 'input' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:397:	MethodArgumentCouldBeFinal: Parameter 'input' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:399:	LocalVariableCouldBeFinal: Local variable 'v' could be declared final
src/jdepend/swingui/JDepend.java:399:	LocalVariableCouldBeFinal: Local variable 'v' could be declared final
src/jdepend/swingui/JDepend.java:399:	ReplaceVectorWithList: Consider replacing this Vector with the newer java.util.List
src/jdepend/swingui/JDepend.java:399:	ReplaceVectorWithList: Consider replacing this Vector with the newer java.util.List
src/jdepend/swingui/JDepend.java:399:	ShortVariable: Avoid variables with short names like v
src/jdepend/swingui/JDepend.java:399:	ShortVariable: Avoid variables with short names like v
src/jdepend/swingui/JDepend.java:400:	LocalVariableCouldBeFinal: Local variable 't' could be declared final
src/jdepend/swingui/JDepend.java:400:	LocalVariableCouldBeFinal: Local variable 't' could be declared final
src/jdepend/swingui/JDepend.java:400:	ShortVariable: Avoid variables with short names like t
src/jdepend/swingui/JDepend.java:400:	ShortVariable: Avoid variables with short names like t
src/jdepend/swingui/JDepend.java:414:	UnusedPrivateMethod: Avoid unused private methods such as 'postStatusMessage(String)'.
src/jdepend/swingui/JDepend.java:414:	UnusedPrivateMethod: Avoid unused private methods such as 'postStatusMessage(String)'.
src/jdepend/swingui/JDepend.java:415:	DoNotUseThreads: To be compliant to J2EE, a webapp should not use any thread.
src/jdepend/swingui/JDepend.java:415:	DoNotUseThreads: To be compliant to J2EE, a webapp should not use any thread.
src/jdepend/swingui/JDepend.java:417:	CommentRequired: Public method and constructor comments are required
src/jdepend/swingui/JDepend.java:417:	CommentRequired: Public method and constructor comments are required
src/jdepend/swingui/JDepend.java:417:	MissingOverride: The method 'run()' is missing an @Override annotation.
src/jdepend/swingui/JDepend.java:417:	MissingOverride: The method 'run()' is missing an @Override annotation.
src/jdepend/swingui/JDepend.java:418:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:418:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:423:	UnusedPrivateMethod: Avoid unused private methods such as 'postStatusError(String)'.
src/jdepend/swingui/JDepend.java:423:	UnusedPrivateMethod: Avoid unused private methods such as 'postStatusError(String)'.
src/jdepend/swingui/JDepend.java:424:	DoNotUseThreads: To be compliant to J2EE, a webapp should not use any thread.
src/jdepend/swingui/JDepend.java:424:	DoNotUseThreads: To be compliant to J2EE, a webapp should not use any thread.
src/jdepend/swingui/JDepend.java:426:	CommentRequired: Public method and constructor comments are required
src/jdepend/swingui/JDepend.java:426:	CommentRequired: Public method and constructor comments are required
src/jdepend/swingui/JDepend.java:426:	MissingOverride: The method 'run()' is missing an @Override annotation.
src/jdepend/swingui/JDepend.java:426:	MissingOverride: The method 'run()' is missing an @Override annotation.
src/jdepend/swingui/JDepend.java:427:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:427:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:435:	CommentRequired: Header comments are required
src/jdepend/swingui/JDepend.java:435:	CommentRequired: Header comments are required
src/jdepend/swingui/JDepend.java:440:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TreeListener constructor if you want a default access modifier
src/jdepend/swingui/JDepend.java:440:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TreeListener constructor if you want a default access modifier
src/jdepend/swingui/JDepend.java:440:	UncommentedEmptyConstructor: Document empty constructor
src/jdepend/swingui/JDepend.java:440:	UncommentedEmptyConstructor: Document empty constructor
src/jdepend/swingui/JDepend.java:449:	MethodArgumentCouldBeFinal: Parameter 'te' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:449:	MethodArgumentCouldBeFinal: Parameter 'te' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:449:	MissingOverride: The method 'valueChanged(TreeSelectionEvent)' is missing an @Override annotation.
src/jdepend/swingui/JDepend.java:449:	MissingOverride: The method 'valueChanged(TreeSelectionEvent)' is missing an @Override annotation.
src/jdepend/swingui/JDepend.java:449:	ShortVariable: Avoid variables with short names like te
src/jdepend/swingui/JDepend.java:449:	ShortVariable: Avoid variables with short names like te
src/jdepend/swingui/JDepend.java:451:	LocalVariableCouldBeFinal: Local variable 'path' could be declared final
src/jdepend/swingui/JDepend.java:451:	LocalVariableCouldBeFinal: Local variable 'path' could be declared final
src/jdepend/swingui/JDepend.java:454:	LocalVariableCouldBeFinal: Local variable 'node' could be declared final
src/jdepend/swingui/JDepend.java:454:	LocalVariableCouldBeFinal: Local variable 'node' could be declared final
src/jdepend/swingui/JDepend.java:455:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:455:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:455:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/swingui/JDepend.java:455:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/swingui/JDepend.java:463:	CommentRequired: Header comments are required
src/jdepend/swingui/JDepend.java:463:	CommentRequired: Header comments are required
src/jdepend/swingui/JDepend.java:463:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/jdepend/swingui/JDepend.java:463:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/jdepend/swingui/JDepend.java:468:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the AboutAction constructor if you want a default access modifier
src/jdepend/swingui/JDepend.java:468:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the AboutAction constructor if you want a default access modifier
src/jdepend/swingui/JDepend.java:475:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:475:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:475:	MissingOverride: The method 'actionPerformed(ActionEvent)' is missing an @Override annotation.
src/jdepend/swingui/JDepend.java:475:	MissingOverride: The method 'actionPerformed(ActionEvent)' is missing an @Override annotation.
src/jdepend/swingui/JDepend.java:475:	ShortVariable: Avoid variables with short names like e
src/jdepend/swingui/JDepend.java:475:	ShortVariable: Avoid variables with short names like e
src/jdepend/swingui/JDepend.java:476:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:476:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:476:	LocalVariableCouldBeFinal: Local variable 'd' could be declared final
src/jdepend/swingui/JDepend.java:476:	LocalVariableCouldBeFinal: Local variable 'd' could be declared final
src/jdepend/swingui/JDepend.java:476:	ShortVariable: Avoid variables with short names like d
src/jdepend/swingui/JDepend.java:476:	ShortVariable: Avoid variables with short names like d
src/jdepend/swingui/JDepend.java:486:	CommentRequired: Header comments are required
src/jdepend/swingui/JDepend.java:486:	CommentRequired: Header comments are required
src/jdepend/swingui/JDepend.java:486:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/jdepend/swingui/JDepend.java:486:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/jdepend/swingui/JDepend.java:491:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the ExitAction constructor if you want a default access modifier
src/jdepend/swingui/JDepend.java:491:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the ExitAction constructor if you want a default access modifier
src/jdepend/swingui/JDepend.java:498:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:498:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:498:	MissingOverride: The method 'actionPerformed(ActionEvent)' is missing an @Override annotation.
src/jdepend/swingui/JDepend.java:498:	MissingOverride: The method 'actionPerformed(ActionEvent)' is missing an @Override annotation.
src/jdepend/swingui/JDepend.java:498:	ShortVariable: Avoid variables with short names like e
src/jdepend/swingui/JDepend.java:498:	ShortVariable: Avoid variables with short names like e
src/jdepend/swingui/JDepend.java:499:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:499:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/jdepend/swingui/JDepend.java:500:	DoNotCallSystemExit: System.exit() should not be used in J2EE/JEE apps
src/jdepend/swingui/JDepend.java:500:	DoNotCallSystemExit: System.exit() should not be used in J2EE/JEE apps
src/jdepend/swingui/JDepend.java:504:	MethodArgumentCouldBeFinal: Parameter 'message' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:504:	MethodArgumentCouldBeFinal: Parameter 'message' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:506:	SystemPrintln: System.err.println is used
src/jdepend/swingui/JDepend.java:506:	SystemPrintln: System.err.println is used
src/jdepend/swingui/JDepend.java:509:	LocalVariableCouldBeFinal: Local variable 'baseUsage' could be declared final
src/jdepend/swingui/JDepend.java:509:	LocalVariableCouldBeFinal: Local variable 'baseUsage' could be declared final
src/jdepend/swingui/JDepend.java:511:	SystemPrintln: System.err.println is used
src/jdepend/swingui/JDepend.java:511:	SystemPrintln: System.err.println is used
src/jdepend/swingui/JDepend.java:512:	SystemPrintln: System.err.println is used
src/jdepend/swingui/JDepend.java:512:	SystemPrintln: System.err.println is used
src/jdepend/swingui/JDepend.java:513:	SystemPrintln: System.err.println is used
src/jdepend/swingui/JDepend.java:513:	SystemPrintln: System.err.println is used
src/jdepend/swingui/JDepend.java:515:	DoNotCallSystemExit: System.exit() should not be used in J2EE/JEE apps
src/jdepend/swingui/JDepend.java:515:	DoNotCallSystemExit: System.exit() should not be used in J2EE/JEE apps
src/jdepend/swingui/JDepend.java:518:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:518:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:518:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
src/jdepend/swingui/JDepend.java:518:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
src/jdepend/swingui/JDepend.java:520:	AvoidLiteralsInIfCondition: Avoid using Literals in Conditional Statements
src/jdepend/swingui/JDepend.java:520:	AvoidLiteralsInIfCondition: Avoid using Literals in Conditional Statements
src/jdepend/swingui/JDepend.java:524:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'directoryCount' (lines '524'-'539').
src/jdepend/swingui/JDepend.java:524:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'directoryCount' (lines '524'-'539').
src/jdepend/swingui/JDepend.java:527:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:527:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:527:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:527:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:527:	SimplifyStartsWith: This call to String.startsWith can be rewritten using String.charAt(0)
src/jdepend/swingui/JDepend.java:527:	SimplifyStartsWith: This call to String.startsWith can be rewritten using String.charAt(0)
src/jdepend/swingui/JDepend.java:528:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:528:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:528:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:528:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:532:	AvoidReassigningLoopVariables: Avoid reassigning the loop control variable 'i'
src/jdepend/swingui/JDepend.java:532:	AvoidReassigningLoopVariables: Avoid reassigning the loop control variable 'i'
src/jdepend/swingui/JDepend.java:532:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:532:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:534:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:534:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:538:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:538:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:539:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'directoryCount' (lines '539'-'539').
src/jdepend/swingui/JDepend.java:539:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'directoryCount' (lines '539'-'539').
src/jdepend/swingui/JDepend.java:541:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:541:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/JDepend.java:553:	CommentRequired: Public method and constructor comments are required
src/jdepend/swingui/JDepend.java:553:	CommentRequired: Public method and constructor comments are required
src/jdepend/swingui/JDepend.java:553:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
src/jdepend/swingui/JDepend.java:553:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
src/jdepend/swingui/PackageNode.java:16:	AbstractNaming: Abstract classes should be named AbstractXXX
src/jdepend/swingui/PackageNode.java:16:	AbstractNaming: Abstract classes should be named AbstractXXX
src/jdepend/swingui/PackageNode.java:18:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/PackageNode.java:18:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/PackageNode.java:18:	CommentRequired: Field comments are required
src/jdepend/swingui/PackageNode.java:18:	CommentRequired: Field comments are required
src/jdepend/swingui/PackageNode.java:18:	ImmutableField: Private field 'parent' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/swingui/PackageNode.java:18:	ImmutableField: Private field 'parent' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/swingui/PackageNode.java:20:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/PackageNode.java:20:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/PackageNode.java:20:	CommentRequired: Field comments are required
src/jdepend/swingui/PackageNode.java:20:	CommentRequired: Field comments are required
src/jdepend/swingui/PackageNode.java:20:	ImmutableField: Private field 'jPackage' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/swingui/PackageNode.java:20:	ImmutableField: Private field 'jPackage' could be made final; it is only initialized in the declaration or constructor.
src/jdepend/swingui/PackageNode.java:22:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/PackageNode.java:22:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/swingui/PackageNode.java:22:	CommentRequired: Field comments are required
src/jdepend/swingui/PackageNode.java:22:	CommentRequired: Field comments are required
src/jdepend/swingui/PackageNode.java:22:	LooseCoupling: Avoid using implementation types like 'ArrayList'; use the interface instead
src/jdepend/swingui/PackageNode.java:22:	LooseCoupling: Avoid using implementation types like 'ArrayList'; use the interface instead
src/jdepend/swingui/PackageNode.java:24:	CommentRequired: Field comments are required
src/jdepend/swingui/PackageNode.java:24:	CommentRequired: Field comments are required
src/jdepend/swingui/PackageNode.java:27:	UnsynchronizedStaticFormatter: Static Formatter objects should be accessed in a synchronized manner
src/jdepend/swingui/PackageNode.java:27:	UnsynchronizedStaticFormatter: Static Formatter objects should be accessed in a synchronized manner
src/jdepend/swingui/PackageNode.java:37:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/swingui/PackageNode.java:37:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/swingui/PackageNode.java:37:	MethodArgumentCouldBeFinal: Parameter 'parent' is not assigned and could be declared final
src/jdepend/swingui/PackageNode.java:37:	MethodArgumentCouldBeFinal: Parameter 'parent' is not assigned and could be declared final
src/jdepend/swingui/PackageNode.java:40:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/jdepend/swingui/PackageNode.java:40:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/jdepend/swingui/PackageNode.java:68:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:68:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:68:	SimplifyBooleanReturns: Avoid unnecessary if..then..else statements when returning booleans
src/jdepend/swingui/PackageNode.java:68:	SimplifyBooleanReturns: Avoid unnecessary if..then..else statements when returning booleans
src/jdepend/swingui/PackageNode.java:68:	UseCollectionIsEmpty: Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
src/jdepend/swingui/PackageNode.java:68:	UseCollectionIsEmpty: Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
src/jdepend/swingui/PackageNode.java:69:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/swingui/PackageNode.java:69:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/swingui/PackageNode.java:102:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/swingui/PackageNode.java:102:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/swingui/PackageNode.java:111:	LooseCoupling: Avoid using implementation types like 'ArrayList'; use the interface instead
src/jdepend/swingui/PackageNode.java:111:	LooseCoupling: Avoid using implementation types like 'ArrayList'; use the interface instead
src/jdepend/swingui/PackageNode.java:116:	LocalVariableCouldBeFinal: Local variable 'packages' could be declared final
src/jdepend/swingui/PackageNode.java:116:	LocalVariableCouldBeFinal: Local variable 'packages' could be declared final
src/jdepend/swingui/PackageNode.java:119:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/swingui/PackageNode.java:119:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/swingui/PackageNode.java:119:	ShortVariable: Avoid variables with short names like i
src/jdepend/swingui/PackageNode.java:119:	ShortVariable: Avoid variables with short names like i
src/jdepend/swingui/PackageNode.java:121:	LocalVariableCouldBeFinal: Local variable 'jPackage' could be declared final
src/jdepend/swingui/PackageNode.java:121:	LocalVariableCouldBeFinal: Local variable 'jPackage' could be declared final
src/jdepend/swingui/PackageNode.java:123:	LocalVariableCouldBeFinal: Local variable 'childNode' could be declared final
src/jdepend/swingui/PackageNode.java:123:	LocalVariableCouldBeFinal: Local variable 'childNode' could be declared final
src/jdepend/swingui/PackageNode.java:138:	InsufficientStringBufferDeclaration: StringBuffer constructor is initialized with size 16, but has at least 53 characters appended.
src/jdepend/swingui/PackageNode.java:138:	InsufficientStringBufferDeclaration: StringBuffer constructor is initialized with size 16, but has at least 53 characters appended.
src/jdepend/swingui/PackageNode.java:138:	LocalVariableCouldBeFinal: Local variable 'label' could be declared final
src/jdepend/swingui/PackageNode.java:138:	LocalVariableCouldBeFinal: Local variable 'label' could be declared final
src/jdepend/swingui/PackageNode.java:139:	ConsecutiveAppendsShouldReuse: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.
src/jdepend/swingui/PackageNode.java:139:	ConsecutiveAppendsShouldReuse: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.
src/jdepend/swingui/PackageNode.java:139:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:139:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:140:	ConsecutiveAppendsShouldReuse: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.
src/jdepend/swingui/PackageNode.java:140:	ConsecutiveAppendsShouldReuse: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.
src/jdepend/swingui/PackageNode.java:140:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/swingui/PackageNode.java:140:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/swingui/PackageNode.java:141:	ConsecutiveAppendsShouldReuse: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.
src/jdepend/swingui/PackageNode.java:141:	ConsecutiveAppendsShouldReuse: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.
src/jdepend/swingui/PackageNode.java:141:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/swingui/PackageNode.java:141:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/swingui/PackageNode.java:141:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:141:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:142:	ConsecutiveAppendsShouldReuse: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.
src/jdepend/swingui/PackageNode.java:142:	ConsecutiveAppendsShouldReuse: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.
src/jdepend/swingui/PackageNode.java:142:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/swingui/PackageNode.java:142:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/swingui/PackageNode.java:142:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:142:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:143:	ConsecutiveAppendsShouldReuse: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.
src/jdepend/swingui/PackageNode.java:143:	ConsecutiveAppendsShouldReuse: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.
src/jdepend/swingui/PackageNode.java:143:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/swingui/PackageNode.java:143:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/swingui/PackageNode.java:143:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:143:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:144:	ConsecutiveAppendsShouldReuse: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.
src/jdepend/swingui/PackageNode.java:144:	ConsecutiveAppendsShouldReuse: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.
src/jdepend/swingui/PackageNode.java:144:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/swingui/PackageNode.java:144:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/swingui/PackageNode.java:144:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:144:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:145:	ConsecutiveAppendsShouldReuse: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.
src/jdepend/swingui/PackageNode.java:145:	ConsecutiveAppendsShouldReuse: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.
src/jdepend/swingui/PackageNode.java:145:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/swingui/PackageNode.java:145:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/swingui/PackageNode.java:145:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:145:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:145:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:145:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:146:	ConsecutiveAppendsShouldReuse: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.
src/jdepend/swingui/PackageNode.java:146:	ConsecutiveAppendsShouldReuse: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.
src/jdepend/swingui/PackageNode.java:146:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/swingui/PackageNode.java:146:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/swingui/PackageNode.java:146:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:146:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:146:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:146:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:147:	ConsecutiveAppendsShouldReuse: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.
src/jdepend/swingui/PackageNode.java:147:	ConsecutiveAppendsShouldReuse: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.
src/jdepend/swingui/PackageNode.java:147:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/swingui/PackageNode.java:147:	ConsecutiveLiteralAppends: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.
src/jdepend/swingui/PackageNode.java:147:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:147:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:147:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:147:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:148:	InefficientStringBuffering: Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append().
src/jdepend/swingui/PackageNode.java:148:	InefficientStringBuffering: Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append().
src/jdepend/swingui/PackageNode.java:148:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:148:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:149:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:149:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:153:	AppendCharacterWithChar: Avoid appending characters as strings in StringBuffer.append.
src/jdepend/swingui/PackageNode.java:153:	AppendCharacterWithChar: Avoid appending characters as strings in StringBuffer.append.
src/jdepend/swingui/PackageNode.java:164:	MissingOverride: The method 'toString()' is missing an @Override annotation.
src/jdepend/swingui/PackageNode.java:164:	MissingOverride: The method 'toString()' is missing an @Override annotation.
src/jdepend/swingui/PackageNode.java:166:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:166:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:167:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/swingui/PackageNode.java:167:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/jdepend/swingui/PackageNode.java:170:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:170:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/swingui/PackageNode.java:177:	MethodArgumentCouldBeFinal: Parameter 'f' is not assigned and could be declared final
src/jdepend/swingui/PackageNode.java:177:	MethodArgumentCouldBeFinal: Parameter 'f' is not assigned and could be declared final
src/jdepend/swingui/PackageNode.java:177:	ShortVariable: Avoid variables with short names like f
src/jdepend/swingui/PackageNode.java:177:	ShortVariable: Avoid variables with short names like f
src/jdepend/swingui/PackageNode.java:178:	UnsynchronizedStaticFormatter: Static Formatter objects should be accessed in a synchronized manner
src/jdepend/swingui/PackageNode.java:178:	UnsynchronizedStaticFormatter: Static Formatter objects should be accessed in a synchronized manner
src/jdepend/swingui/StatusPanel.java:7:	CommentSize: Comment is too large: Too many lines
src/jdepend/swingui/StatusPanel.java:7:	CommentSize: Comment is too large: Too many lines
src/jdepend/swingui/StatusPanel.java:17:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/jdepend/swingui/StatusPanel.java:17:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/jdepend/swingui/StatusPanel.java:33:	MethodArgumentCouldBeFinal: Parameter 'component' is not assigned and could be declared final
src/jdepend/swingui/StatusPanel.java:33:	MethodArgumentCouldBeFinal: Parameter 'component' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:21:	GodClass: Possible God Class (WMC=79, ATFD=35, TCC=0.935%)
src/jdepend/textui/JDepend.java:21:	GodClass: Possible God Class (WMC=79, ATFD=35, TCC=0.935%)
src/jdepend/textui/JDepend.java:21:	ModifiedCyclomaticComplexity: The class 'JDepend' has a Modified Cyclomatic Complexity of 2 (Highest = 11).
src/jdepend/textui/JDepend.java:21:	ModifiedCyclomaticComplexity: The class 'JDepend' has a Modified Cyclomatic Complexity of 2 (Highest = 11).
src/jdepend/textui/JDepend.java:21:	TooManyMethods: This class has too many methods, consider refactoring it.
src/jdepend/textui/JDepend.java:21:	TooManyMethods: This class has too many methods, consider refactoring it.
src/jdepend/textui/JDepend.java:23:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/textui/JDepend.java:23:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/textui/JDepend.java:23:	CommentRequired: Field comments are required
src/jdepend/textui/JDepend.java:23:	CommentRequired: Field comments are required
src/jdepend/textui/JDepend.java:25:	CommentRequired: Field comments are required
src/jdepend/textui/JDepend.java:25:	CommentRequired: Field comments are required
src/jdepend/textui/JDepend.java:27:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/textui/JDepend.java:27:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/jdepend/textui/JDepend.java:27:	CommentRequired: Field comments are required
src/jdepend/textui/JDepend.java:27:	CommentRequired: Field comments are required
src/jdepend/textui/JDepend.java:41:	MethodArgumentCouldBeFinal: Parameter 'writer' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:41:	MethodArgumentCouldBeFinal: Parameter 'writer' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:47:	ConstructorCallsOverridableMethod: Overridable method 'setWriter' called during object construction
src/jdepend/textui/JDepend.java:47:	ConstructorCallsOverridableMethod: Overridable method 'setWriter' called during object construction
src/jdepend/textui/JDepend.java:55:	MethodArgumentCouldBeFinal: Parameter 'writer' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:55:	MethodArgumentCouldBeFinal: Parameter 'writer' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:68:	MethodArgumentCouldBeFinal: Parameter 'filter' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:68:	MethodArgumentCouldBeFinal: Parameter 'filter' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:75:	MethodArgumentCouldBeFinal: Parameter 'components' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:75:	MethodArgumentCouldBeFinal: Parameter 'components' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:86:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:86:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:96:	MethodArgumentCouldBeFinal: Parameter 'b' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:96:	MethodArgumentCouldBeFinal: Parameter 'b' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:96:	ShortVariable: Avoid variables with short names like b
src/jdepend/textui/JDepend.java:96:	ShortVariable: Avoid variables with short names like b
src/jdepend/textui/JDepend.java:108:	LocalVariableCouldBeFinal: Local variable 'packages' could be declared final
src/jdepend/textui/JDepend.java:108:	LocalVariableCouldBeFinal: Local variable 'packages' could be declared final
src/jdepend/textui/JDepend.java:110:	LocalVariableCouldBeFinal: Local variable 'packageList' could be declared final
src/jdepend/textui/JDepend.java:110:	LocalVariableCouldBeFinal: Local variable 'packageList' could be declared final
src/jdepend/textui/JDepend.java:123:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:123:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:126:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:126:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:126:	MethodArgumentCouldBeFinal: Parameter 'packages' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:126:	MethodArgumentCouldBeFinal: Parameter 'packages' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:129:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/textui/JDepend.java:129:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/textui/JDepend.java:129:	ShortVariable: Avoid variables with short names like i
src/jdepend/textui/JDepend.java:129:	ShortVariable: Avoid variables with short names like i
src/jdepend/textui/JDepend.java:137:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:137:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:137:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:137:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:141:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:141:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:168:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:168:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:168:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:168:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:171:	LocalVariableCouldBeFinal: Local variable 'members' could be declared final
src/jdepend/textui/JDepend.java:171:	LocalVariableCouldBeFinal: Local variable 'members' could be declared final
src/jdepend/textui/JDepend.java:173:	LocalVariableCouldBeFinal: Local variable 'memberIter' could be declared final
src/jdepend/textui/JDepend.java:173:	LocalVariableCouldBeFinal: Local variable 'memberIter' could be declared final
src/jdepend/textui/JDepend.java:175:	LocalVariableCouldBeFinal: Local variable 'jClass' could be declared final
src/jdepend/textui/JDepend.java:175:	LocalVariableCouldBeFinal: Local variable 'jClass' could be declared final
src/jdepend/textui/JDepend.java:176:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:176:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:184:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:184:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:184:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:184:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:187:	LocalVariableCouldBeFinal: Local variable 'members' could be declared final
src/jdepend/textui/JDepend.java:187:	LocalVariableCouldBeFinal: Local variable 'members' could be declared final
src/jdepend/textui/JDepend.java:189:	LocalVariableCouldBeFinal: Local variable 'memberIter' could be declared final
src/jdepend/textui/JDepend.java:189:	LocalVariableCouldBeFinal: Local variable 'memberIter' could be declared final
src/jdepend/textui/JDepend.java:191:	LocalVariableCouldBeFinal: Local variable 'concrete' could be declared final
src/jdepend/textui/JDepend.java:191:	LocalVariableCouldBeFinal: Local variable 'concrete' could be declared final
src/jdepend/textui/JDepend.java:192:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:192:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:200:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:200:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:200:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:200:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:203:	LocalVariableCouldBeFinal: Local variable 'efferents' could be declared final
src/jdepend/textui/JDepend.java:203:	LocalVariableCouldBeFinal: Local variable 'efferents' could be declared final
src/jdepend/textui/JDepend.java:206:	LocalVariableCouldBeFinal: Local variable 'efferentIter' could be declared final
src/jdepend/textui/JDepend.java:206:	LocalVariableCouldBeFinal: Local variable 'efferentIter' could be declared final
src/jdepend/textui/JDepend.java:208:	LocalVariableCouldBeFinal: Local variable 'efferent' could be declared final
src/jdepend/textui/JDepend.java:208:	LocalVariableCouldBeFinal: Local variable 'efferent' could be declared final
src/jdepend/textui/JDepend.java:211:	UseCollectionIsEmpty: Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
src/jdepend/textui/JDepend.java:211:	UseCollectionIsEmpty: Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
src/jdepend/textui/JDepend.java:218:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:218:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:218:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:218:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:221:	LocalVariableCouldBeFinal: Local variable 'afferents' could be declared final
src/jdepend/textui/JDepend.java:221:	LocalVariableCouldBeFinal: Local variable 'afferents' could be declared final
src/jdepend/textui/JDepend.java:224:	LocalVariableCouldBeFinal: Local variable 'afferentIter' could be declared final
src/jdepend/textui/JDepend.java:224:	LocalVariableCouldBeFinal: Local variable 'afferentIter' could be declared final
src/jdepend/textui/JDepend.java:226:	LocalVariableCouldBeFinal: Local variable 'afferent' could be declared final
src/jdepend/textui/JDepend.java:226:	LocalVariableCouldBeFinal: Local variable 'afferent' could be declared final
src/jdepend/textui/JDepend.java:229:	UseCollectionIsEmpty: Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
src/jdepend/textui/JDepend.java:229:	UseCollectionIsEmpty: Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
src/jdepend/textui/JDepend.java:236:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:236:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:236:	MethodArgumentCouldBeFinal: Parameter 'packages' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:236:	MethodArgumentCouldBeFinal: Parameter 'packages' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:239:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/textui/JDepend.java:239:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/textui/JDepend.java:239:	ShortVariable: Avoid variables with short names like i
src/jdepend/textui/JDepend.java:239:	ShortVariable: Avoid variables with short names like i
src/jdepend/textui/JDepend.java:247:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:247:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:247:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:247:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:249:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/jdepend/textui/JDepend.java:249:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/jdepend/textui/JDepend.java:256:	LocalVariableCouldBeFinal: Local variable 'cyclePackage' could be declared final
src/jdepend/textui/JDepend.java:256:	LocalVariableCouldBeFinal: Local variable 'cyclePackage' could be declared final
src/jdepend/textui/JDepend.java:257:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'cyclePackageName' (lines '257'-'278').
src/jdepend/textui/JDepend.java:257:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'cyclePackageName' (lines '257'-'278').
src/jdepend/textui/JDepend.java:257:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:257:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:257:	LocalVariableCouldBeFinal: Local variable 'cyclePackageName' could be declared final
src/jdepend/textui/JDepend.java:257:	LocalVariableCouldBeFinal: Local variable 'cyclePackageName' could be declared final
src/jdepend/textui/JDepend.java:259:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'i' (lines '259'-'262').
src/jdepend/textui/JDepend.java:259:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'i' (lines '259'-'262').
src/jdepend/textui/JDepend.java:259:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'i' (lines '259'-'278').
src/jdepend/textui/JDepend.java:259:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'i' (lines '259'-'278').
src/jdepend/textui/JDepend.java:259:	ShortVariable: Avoid variables with short names like i
src/jdepend/textui/JDepend.java:259:	ShortVariable: Avoid variables with short names like i
src/jdepend/textui/JDepend.java:260:	LocalVariableCouldBeFinal: Local variable 'pkgIter' could be declared final
src/jdepend/textui/JDepend.java:260:	LocalVariableCouldBeFinal: Local variable 'pkgIter' could be declared final
src/jdepend/textui/JDepend.java:264:	LocalVariableCouldBeFinal: Local variable 'pkg' could be declared final
src/jdepend/textui/JDepend.java:264:	LocalVariableCouldBeFinal: Local variable 'pkg' could be declared final
src/jdepend/textui/JDepend.java:266:	AvoidLiteralsInIfCondition: Avoid using Literals in Conditional Statements
src/jdepend/textui/JDepend.java:266:	AvoidLiteralsInIfCondition: Avoid using Literals in Conditional Statements
src/jdepend/textui/JDepend.java:269:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:269:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:269:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:269:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:280:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:280:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:284:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:284:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:288:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:288:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:292:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:292:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:296:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:296:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:297:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:297:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:301:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:301:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:301:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:301:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:302:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:302:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:304:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:304:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:305:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:305:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:309:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:309:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:309:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:309:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:313:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:313:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:313:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:313:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:314:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:314:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:315:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:315:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:317:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:317:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:321:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:321:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:325:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:325:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:326:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:326:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:327:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:327:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:328:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:328:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:329:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:329:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:331:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:331:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:333:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:333:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:337:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:337:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:337:	MethodArgumentCouldBeFinal: Parameter 'jClass' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:337:	MethodArgumentCouldBeFinal: Parameter 'jClass' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:338:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:338:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:341:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:341:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:341:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:341:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:342:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:342:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:345:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:345:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:346:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:346:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:349:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:349:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:353:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:353:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:354:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:354:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:357:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:357:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:361:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:361:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:362:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:362:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:365:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:365:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:369:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:369:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:370:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:370:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:373:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:373:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:374:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:374:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:377:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:377:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:381:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:381:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:382:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:382:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:385:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:385:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:387:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:387:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:389:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:389:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:390:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:390:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:394:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:394:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:398:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:398:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:398:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:398:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:399:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:399:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:400:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:400:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:403:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:403:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:403:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:403:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:404:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:404:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:407:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:407:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:407:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:407:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:408:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:408:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:411:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:411:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:415:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:415:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:415:	MethodArgumentCouldBeFinal: Parameter 'packages' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:415:	MethodArgumentCouldBeFinal: Parameter 'packages' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:416:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:416:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:418:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:418:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:419:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:419:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:422:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:422:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:426:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/textui/JDepend.java:426:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
src/jdepend/textui/JDepend.java:426:	ShortVariable: Avoid variables with short names like i
src/jdepend/textui/JDepend.java:426:	ShortVariable: Avoid variables with short names like i
src/jdepend/textui/JDepend.java:428:	LocalVariableCouldBeFinal: Local variable 'jPackage' could be declared final
src/jdepend/textui/JDepend.java:428:	LocalVariableCouldBeFinal: Local variable 'jPackage' could be declared final
src/jdepend/textui/JDepend.java:429:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:429:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:429:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:429:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:430:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:430:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:430:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:430:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:431:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:431:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:431:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:431:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:432:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:432:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:432:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:432:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:433:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:433:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:433:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:433:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:434:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:434:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:434:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:434:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:435:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:435:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:435:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:435:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:436:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:436:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:436:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:436:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:437:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:437:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:437:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:437:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/jdepend/textui/JDepend.java:441:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:441:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:442:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:442:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:445:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:445:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:445:	MethodArgumentCouldBeFinal: Parameter 'f' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:445:	MethodArgumentCouldBeFinal: Parameter 'f' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:445:	ShortVariable: Avoid variables with short names like f
src/jdepend/textui/JDepend.java:445:	ShortVariable: Avoid variables with short names like f
src/jdepend/textui/JDepend.java:449:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:449:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:453:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:453:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:453:	MethodArgumentCouldBeFinal: Parameter 'n' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:453:	MethodArgumentCouldBeFinal: Parameter 'n' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:453:	ShortVariable: Avoid variables with short names like n
src/jdepend/textui/JDepend.java:453:	ShortVariable: Avoid variables with short names like n
src/jdepend/textui/JDepend.java:454:	LocalVariableCouldBeFinal: Local variable 's' could be declared final
src/jdepend/textui/JDepend.java:454:	LocalVariableCouldBeFinal: Local variable 's' could be declared final
src/jdepend/textui/JDepend.java:454:	ShortVariable: Avoid variables with short names like s
src/jdepend/textui/JDepend.java:454:	ShortVariable: Avoid variables with short names like s
src/jdepend/textui/JDepend.java:462:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:462:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:462:	MethodArgumentCouldBeFinal: Parameter 'message' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:462:	MethodArgumentCouldBeFinal: Parameter 'message' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:464:	SystemPrintln: System.err.println is used
src/jdepend/textui/JDepend.java:464:	SystemPrintln: System.err.println is used
src/jdepend/textui/JDepend.java:466:	LocalVariableCouldBeFinal: Local variable 'baseUsage' could be declared final
src/jdepend/textui/JDepend.java:466:	LocalVariableCouldBeFinal: Local variable 'baseUsage' could be declared final
src/jdepend/textui/JDepend.java:468:	SystemPrintln: System.err.println is used
src/jdepend/textui/JDepend.java:468:	SystemPrintln: System.err.println is used
src/jdepend/textui/JDepend.java:469:	SystemPrintln: System.err.println is used
src/jdepend/textui/JDepend.java:469:	SystemPrintln: System.err.println is used
src/jdepend/textui/JDepend.java:470:	SystemPrintln: System.err.println is used
src/jdepend/textui/JDepend.java:470:	SystemPrintln: System.err.println is used
src/jdepend/textui/JDepend.java:473:	DoNotCallSystemExit: System.exit() should not be used in J2EE/JEE apps
src/jdepend/textui/JDepend.java:473:	DoNotCallSystemExit: System.exit() should not be used in J2EE/JEE apps
src/jdepend/textui/JDepend.java:476:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:476:	CommentRequired: Protected method constructor comments are required
src/jdepend/textui/JDepend.java:476:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:476:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:476:	ModifiedCyclomaticComplexity: The method 'instanceMain' has a Modified Cyclomatic Complexity of 11.
src/jdepend/textui/JDepend.java:476:	ModifiedCyclomaticComplexity: The method 'instanceMain' has a Modified Cyclomatic Complexity of 11.
src/jdepend/textui/JDepend.java:476:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
src/jdepend/textui/JDepend.java:476:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
src/jdepend/textui/JDepend.java:478:	AvoidLiteralsInIfCondition: Avoid using Literals in Conditional Statements
src/jdepend/textui/JDepend.java:478:	AvoidLiteralsInIfCondition: Avoid using Literals in Conditional Statements
src/jdepend/textui/JDepend.java:482:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'directoryCount' (lines '482'-'510').
src/jdepend/textui/JDepend.java:482:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'directoryCount' (lines '482'-'510').
src/jdepend/textui/JDepend.java:485:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:485:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:485:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:485:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:485:	SimplifyStartsWith: This call to String.startsWith can be rewritten using String.charAt(0)
src/jdepend/textui/JDepend.java:485:	SimplifyStartsWith: This call to String.startsWith can be rewritten using String.charAt(0)
src/jdepend/textui/JDepend.java:486:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:486:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:486:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:486:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:493:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/jdepend/textui/JDepend.java:493:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/jdepend/textui/JDepend.java:494:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/jdepend/textui/JDepend.java:494:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/jdepend/textui/JDepend.java:494:	AvoidReassigningLoopVariables: Avoid reassigning the loop control variable 'i'
src/jdepend/textui/JDepend.java:494:	AvoidReassigningLoopVariables: Avoid reassigning the loop control variable 'i'
src/jdepend/textui/JDepend.java:499:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:499:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:499:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:499:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:503:	AvoidReassigningLoopVariables: Avoid reassigning the loop control variable 'i'
src/jdepend/textui/JDepend.java:503:	AvoidReassigningLoopVariables: Avoid reassigning the loop control variable 'i'
src/jdepend/textui/JDepend.java:503:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:503:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:505:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:505:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:509:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:509:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:510:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'directoryCount' (lines '510'-'510').
src/jdepend/textui/JDepend.java:510:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'directoryCount' (lines '510'-'510').
src/jdepend/textui/JDepend.java:512:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:512:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/textui/JDepend.java:524:	CommentRequired: Public method and constructor comments are required
src/jdepend/textui/JDepend.java:524:	CommentRequired: Public method and constructor comments are required
src/jdepend/textui/JDepend.java:524:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
src/jdepend/textui/JDepend.java:524:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
src/jdepend/xmlui/JDepend.java:20:	TooManyMethods: This class has too many methods, consider refactoring it.
src/jdepend/xmlui/JDepend.java:20:	TooManyMethods: This class has too many methods, consider refactoring it.
src/jdepend/xmlui/JDepend.java:34:	MethodArgumentCouldBeFinal: Parameter 'writer' is not assigned and could be declared final
src/jdepend/xmlui/JDepend.java:34:	MethodArgumentCouldBeFinal: Parameter 'writer' is not assigned and could be declared final
src/jdepend/xmlui/JDepend.java:41:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:41:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:41:	MissingOverride: The method 'printHeader()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:41:	MissingOverride: The method 'printHeader()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:42:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:42:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:43:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:43:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:46:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:46:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:46:	MissingOverride: The method 'printFooter()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:46:	MissingOverride: The method 'printFooter()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:47:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:47:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:50:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:50:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:50:	MissingOverride: The method 'printPackagesHeader()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:50:	MissingOverride: The method 'printPackagesHeader()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:51:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:51:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:54:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:54:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:54:	MissingOverride: The method 'printPackagesFooter()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:54:	MissingOverride: The method 'printPackagesFooter()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:55:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:55:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:58:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:58:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:58:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/xmlui/JDepend.java:58:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/xmlui/JDepend.java:58:	MissingOverride: The method 'printPackageHeader(JavaPackage)' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:58:	MissingOverride: The method 'printPackageHeader(JavaPackage)' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:60:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:60:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:64:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:64:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:64:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/xmlui/JDepend.java:64:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/xmlui/JDepend.java:64:	MissingOverride: The method 'printPackageFooter(JavaPackage)' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:64:	MissingOverride: The method 'printPackageFooter(JavaPackage)' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:65:	AvoidDuplicateLiterals: The String literal "</Package>" appears 4 times in this file; the first occurrence is on line 65
src/jdepend/xmlui/JDepend.java:65:	AvoidDuplicateLiterals: The String literal "</Package>" appears 4 times in this file; the first occurrence is on line 65
src/jdepend/xmlui/JDepend.java:65:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:65:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:68:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:68:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:68:	MissingOverride: The method 'printNoStats()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:68:	MissingOverride: The method 'printNoStats()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:69:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:69:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:74:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:74:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:74:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/xmlui/JDepend.java:74:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/xmlui/JDepend.java:74:	MissingOverride: The method 'printStatistics(JavaPackage)' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:74:	MissingOverride: The method 'printStatistics(JavaPackage)' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:75:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:75:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:76:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:76:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:79:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:79:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:82:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:82:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:85:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:85:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:87:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:87:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:89:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:89:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:92:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:92:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:95:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:95:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:98:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:98:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:99:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:99:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:102:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:102:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:102:	MethodArgumentCouldBeFinal: Parameter 'jClass' is not assigned and could be declared final
src/jdepend/xmlui/JDepend.java:102:	MethodArgumentCouldBeFinal: Parameter 'jClass' is not assigned and could be declared final
src/jdepend/xmlui/JDepend.java:102:	MissingOverride: The method 'printClassName(JavaClass)' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:102:	MissingOverride: The method 'printClassName(JavaClass)' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:103:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:103:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:106:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:106:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:107:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:107:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:110:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:110:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:110:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/xmlui/JDepend.java:110:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/xmlui/JDepend.java:110:	MissingOverride: The method 'printPackageName(JavaPackage)' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:110:	MissingOverride: The method 'printPackageName(JavaPackage)' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:111:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:111:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:115:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:115:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:115:	MissingOverride: The method 'printAbstractClassesHeader()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:115:	MissingOverride: The method 'printAbstractClassesHeader()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:116:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:116:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:119:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:119:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:119:	MissingOverride: The method 'printAbstractClassesFooter()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:119:	MissingOverride: The method 'printAbstractClassesFooter()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:120:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:120:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:123:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:123:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:123:	MissingOverride: The method 'printConcreteClassesHeader()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:123:	MissingOverride: The method 'printConcreteClassesHeader()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:124:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:124:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:127:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:127:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:127:	MissingOverride: The method 'printConcreteClassesFooter()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:127:	MissingOverride: The method 'printConcreteClassesFooter()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:128:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:128:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:131:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:131:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:131:	MissingOverride: The method 'printEfferentsHeader()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:131:	MissingOverride: The method 'printEfferentsHeader()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:132:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:132:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:135:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:135:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:135:	MissingOverride: The method 'printEfferentsFooter()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:135:	MissingOverride: The method 'printEfferentsFooter()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:136:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:136:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:139:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:139:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:139:	MissingOverride: The method 'printEfferentsError()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:139:	MissingOverride: The method 'printEfferentsError()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:143:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:143:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:143:	MissingOverride: The method 'printAfferentsHeader()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:143:	MissingOverride: The method 'printAfferentsHeader()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:144:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:144:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:147:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:147:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:147:	MissingOverride: The method 'printAfferentsFooter()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:147:	MissingOverride: The method 'printAfferentsFooter()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:148:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:148:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:151:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:151:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:151:	MissingOverride: The method 'printAfferentsError()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:151:	MissingOverride: The method 'printAfferentsError()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:155:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:155:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:155:	MissingOverride: The method 'printCyclesHeader()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:155:	MissingOverride: The method 'printCyclesHeader()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:157:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:157:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:160:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:160:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:160:	MissingOverride: The method 'printCyclesFooter()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:160:	MissingOverride: The method 'printCyclesFooter()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:161:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:161:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:164:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:164:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:164:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/xmlui/JDepend.java:164:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/xmlui/JDepend.java:164:	MissingOverride: The method 'printCycleHeader(JavaPackage)' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:164:	MissingOverride: The method 'printCycleHeader(JavaPackage)' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:165:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:165:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:169:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:169:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:169:	MissingOverride: The method 'printCycleFooter()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:169:	MissingOverride: The method 'printCycleFooter()' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:170:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:170:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:174:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:174:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:174:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/xmlui/JDepend.java:174:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/xmlui/JDepend.java:174:	MissingOverride: The method 'printCycleTarget(JavaPackage)' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:174:	MissingOverride: The method 'printCycleTarget(JavaPackage)' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:178:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:178:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:178:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/xmlui/JDepend.java:178:	MethodArgumentCouldBeFinal: Parameter 'jPackage' is not assigned and could be declared final
src/jdepend/xmlui/JDepend.java:178:	MissingOverride: The method 'printCycleContributor(JavaPackage)' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:178:	MissingOverride: The method 'printCycleContributor(JavaPackage)' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:179:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:179:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/jdepend/xmlui/JDepend.java:183:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:183:	CommentRequired: Protected method constructor comments are required
src/jdepend/xmlui/JDepend.java:183:	MethodArgumentCouldBeFinal: Parameter 'packages' is not assigned and could be declared final
src/jdepend/xmlui/JDepend.java:183:	MethodArgumentCouldBeFinal: Parameter 'packages' is not assigned and could be declared final
src/jdepend/xmlui/JDepend.java:183:	MissingOverride: The method 'printSummary(Collection)' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:183:	MissingOverride: The method 'printSummary(Collection)' is missing an @Override annotation.
src/jdepend/xmlui/JDepend.java:190:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
src/jdepend/xmlui/JDepend.java:190:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
test/jdepend/framework/AllTests.java:13:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/AllTests.java:13:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/AllTests.java:13:	JUnit4SuitesShouldUseSuiteAnnotation: JUnit 4 indicates test suites via annotations, not the suite method.
test/jdepend/framework/AllTests.java:13:	JUnit4SuitesShouldUseSuiteAnnotation: JUnit 4 indicates test suites via annotations, not the suite method.
test/jdepend/framework/AllTests.java:15:	LocalVariableCouldBeFinal: Local variable 'suite' could be declared final
test/jdepend/framework/AllTests.java:15:	LocalVariableCouldBeFinal: Local variable 'suite' could be declared final
test/jdepend/framework/AllTests.java:32:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/AllTests.java:32:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/AllTests.java:32:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
test/jdepend/framework/AllTests.java:32:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
test/jdepend/framework/AllTests.java:33:	LawOfDemeter: Potential violation of Law of Demeter (static property access)
test/jdepend/framework/AllTests.java:33:	LawOfDemeter: Potential violation of Law of Demeter (static property access)
test/jdepend/framework/ClassFileParserTest.java:15:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/ClassFileParserTest.java:15:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/ClassFileParserTest.java:15:	CommentRequired: Field comments are required
test/jdepend/framework/ClassFileParserTest.java:15:	CommentRequired: Field comments are required
test/jdepend/framework/ClassFileParserTest.java:17:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ClassFileParserTest.java:17:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ClassFileParserTest.java:17:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/ClassFileParserTest.java:17:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/ClassFileParserTest.java:21:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/ClassFileParserTest.java:21:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/ClassFileParserTest.java:21:	JUnit4TestShouldUseBeforeAnnotation: JUnit 4 tests that set up tests should use the @Before annotation, JUnit5 tests should use @BeforeEach or @BeforeAll
test/jdepend/framework/ClassFileParserTest.java:21:	JUnit4TestShouldUseBeforeAnnotation: JUnit 4 tests that set up tests should use the @Before annotation, JUnit5 tests should use @BeforeEach or @BeforeAll
test/jdepend/framework/ClassFileParserTest.java:21:	MissingOverride: The method 'setUp()' is missing an @Override annotation.
test/jdepend/framework/ClassFileParserTest.java:21:	MissingOverride: The method 'setUp()' is missing an @Override annotation.
test/jdepend/framework/ClassFileParserTest.java:23:	LocalVariableCouldBeFinal: Local variable 'filter' could be declared final
test/jdepend/framework/ClassFileParserTest.java:23:	LocalVariableCouldBeFinal: Local variable 'filter' could be declared final
test/jdepend/framework/ClassFileParserTest.java:27:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/ClassFileParserTest.java:27:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/ClassFileParserTest.java:27:	JUnit4TestShouldUseAfterAnnotation: JUnit 4 tests that clean up tests should use the @After annotation, JUnit5 tests should use @AfterEach or @AfterAll
test/jdepend/framework/ClassFileParserTest.java:27:	JUnit4TestShouldUseAfterAnnotation: JUnit 4 tests that clean up tests should use the @After annotation, JUnit5 tests should use @AfterEach or @AfterAll
test/jdepend/framework/ClassFileParserTest.java:27:	MissingOverride: The method 'tearDown()' is missing an @Override annotation.
test/jdepend/framework/ClassFileParserTest.java:27:	MissingOverride: The method 'tearDown()' is missing an @Override annotation.
test/jdepend/framework/ClassFileParserTest.java:27:	UselessOverridingMethod: Overriding method merely calls super
test/jdepend/framework/ClassFileParserTest.java:27:	UselessOverridingMethod: Overriding method merely calls super
test/jdepend/framework/ClassFileParserTest.java:31:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ClassFileParserTest.java:31:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ClassFileParserTest.java:31:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ClassFileParserTest.java:31:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ClassFileParserTest.java:33:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/ClassFileParserTest.java:33:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/ClassFileParserTest.java:33:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/ClassFileParserTest.java:33:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/ClassFileParserTest.java:42:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:42:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:42:	UnnecessaryBooleanAssertion: assertTrue(true) or similar statements are unnecessary
test/jdepend/framework/ClassFileParserTest.java:42:	UnnecessaryBooleanAssertion: assertTrue(true) or similar statements are unnecessary
test/jdepend/framework/ClassFileParserTest.java:46:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ClassFileParserTest.java:46:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ClassFileParserTest.java:46:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ClassFileParserTest.java:46:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ClassFileParserTest.java:46:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/ClassFileParserTest.java:46:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/ClassFileParserTest.java:48:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/ClassFileParserTest.java:48:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/ClassFileParserTest.java:48:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/ClassFileParserTest.java:48:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/ClassFileParserTest.java:51:	LocalVariableCouldBeFinal: Local variable 'clazz' could be declared final
test/jdepend/framework/ClassFileParserTest.java:51:	LocalVariableCouldBeFinal: Local variable 'clazz' could be declared final
test/jdepend/framework/ClassFileParserTest.java:53:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:53:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:53:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:53:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:55:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:55:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:55:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:55:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:57:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:57:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:57:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:57:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:59:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:59:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:59:	LocalVariableCouldBeFinal: Local variable 'imports' could be declared final
test/jdepend/framework/ClassFileParserTest.java:59:	LocalVariableCouldBeFinal: Local variable 'imports' could be declared final
test/jdepend/framework/ClassFileParserTest.java:60:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:60:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:60:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:60:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:62:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:62:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:63:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:63:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:64:	AvoidDuplicateLiterals: The String literal "java.lang" appears 5 times in this file; the first occurrence is on line 64
test/jdepend/framework/ClassFileParserTest.java:64:	AvoidDuplicateLiterals: The String literal "java.lang" appears 5 times in this file; the first occurrence is on line 64
test/jdepend/framework/ClassFileParserTest.java:64:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:64:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:65:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:65:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:66:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:66:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:67:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:67:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:70:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ClassFileParserTest.java:70:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ClassFileParserTest.java:70:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ClassFileParserTest.java:70:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ClassFileParserTest.java:70:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/ClassFileParserTest.java:70:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/ClassFileParserTest.java:72:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/ClassFileParserTest.java:72:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/ClassFileParserTest.java:72:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/ClassFileParserTest.java:72:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/ClassFileParserTest.java:75:	LocalVariableCouldBeFinal: Local variable 'clazz' could be declared final
test/jdepend/framework/ClassFileParserTest.java:75:	LocalVariableCouldBeFinal: Local variable 'clazz' could be declared final
test/jdepend/framework/ClassFileParserTest.java:77:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:77:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:77:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:77:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:79:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:79:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:79:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:79:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:81:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:81:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:81:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:81:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:83:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:83:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:83:	LocalVariableCouldBeFinal: Local variable 'imports' could be declared final
test/jdepend/framework/ClassFileParserTest.java:83:	LocalVariableCouldBeFinal: Local variable 'imports' could be declared final
test/jdepend/framework/ClassFileParserTest.java:84:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:84:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:84:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:84:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:86:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:86:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:87:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:87:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:88:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:88:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:89:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:89:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:90:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:90:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:91:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:91:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:92:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:92:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:95:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ClassFileParserTest.java:95:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ClassFileParserTest.java:95:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ClassFileParserTest.java:95:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ClassFileParserTest.java:95:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/ClassFileParserTest.java:95:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/ClassFileParserTest.java:97:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/ClassFileParserTest.java:97:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/ClassFileParserTest.java:97:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/ClassFileParserTest.java:97:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/ClassFileParserTest.java:100:	LocalVariableCouldBeFinal: Local variable 'clazz' could be declared final
test/jdepend/framework/ClassFileParserTest.java:100:	LocalVariableCouldBeFinal: Local variable 'clazz' could be declared final
test/jdepend/framework/ClassFileParserTest.java:102:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:102:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:102:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:102:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:104:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:104:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:104:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:104:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:106:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:106:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:106:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:106:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:108:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:108:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:108:	LocalVariableCouldBeFinal: Local variable 'imports' could be declared final
test/jdepend/framework/ClassFileParserTest.java:108:	LocalVariableCouldBeFinal: Local variable 'imports' could be declared final
test/jdepend/framework/ClassFileParserTest.java:109:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:109:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:109:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:109:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:111:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:111:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:112:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:112:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:113:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:113:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:114:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:114:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:115:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:115:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:116:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:116:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:117:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:117:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:118:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:118:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:119:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:119:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:122:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:122:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:123:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:123:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:124:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:124:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:125:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:125:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:126:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:126:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:127:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:127:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:128:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:128:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:129:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:129:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:130:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:130:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:131:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:131:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:134:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ClassFileParserTest.java:134:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ClassFileParserTest.java:134:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ClassFileParserTest.java:134:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ClassFileParserTest.java:134:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/ClassFileParserTest.java:134:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/ClassFileParserTest.java:136:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/ClassFileParserTest.java:136:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/ClassFileParserTest.java:136:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/ClassFileParserTest.java:136:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/ClassFileParserTest.java:139:	LocalVariableCouldBeFinal: Local variable 'clazz' could be declared final
test/jdepend/framework/ClassFileParserTest.java:139:	LocalVariableCouldBeFinal: Local variable 'clazz' could be declared final
test/jdepend/framework/ClassFileParserTest.java:141:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:141:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:141:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:141:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:143:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:143:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:144:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:144:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:146:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:146:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:146:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:146:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:148:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:148:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:148:	LocalVariableCouldBeFinal: Local variable 'imports' could be declared final
test/jdepend/framework/ClassFileParserTest.java:148:	LocalVariableCouldBeFinal: Local variable 'imports' could be declared final
test/jdepend/framework/ClassFileParserTest.java:149:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:149:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:149:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:149:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:151:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:151:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:155:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ClassFileParserTest.java:155:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ClassFileParserTest.java:155:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ClassFileParserTest.java:155:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ClassFileParserTest.java:155:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/ClassFileParserTest.java:155:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/ClassFileParserTest.java:157:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/ClassFileParserTest.java:157:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/ClassFileParserTest.java:157:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/ClassFileParserTest.java:157:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/ClassFileParserTest.java:160:	LocalVariableCouldBeFinal: Local variable 'clazz' could be declared final
test/jdepend/framework/ClassFileParserTest.java:160:	LocalVariableCouldBeFinal: Local variable 'clazz' could be declared final
test/jdepend/framework/ClassFileParserTest.java:162:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:162:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:162:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:162:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:164:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:164:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:164:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:164:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:166:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:166:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:166:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:166:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:168:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:168:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:168:	LocalVariableCouldBeFinal: Local variable 'imports' could be declared final
test/jdepend/framework/ClassFileParserTest.java:168:	LocalVariableCouldBeFinal: Local variable 'imports' could be declared final
test/jdepend/framework/ClassFileParserTest.java:169:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:169:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:169:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:169:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ClassFileParserTest.java:171:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:171:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ClassFileParserTest.java:175:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ClassFileParserTest.java:175:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ClassFileParserTest.java:175:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ClassFileParserTest.java:175:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ClassFileParserTest.java:175:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
test/jdepend/framework/ClassFileParserTest.java:175:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
test/jdepend/framework/ClassFileParserTest.java:177:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/ClassFileParserTest.java:177:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/ClassFileParserTest.java:177:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/ClassFileParserTest.java:177:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/ClassFileParserTest.java:180:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ClassFileParserTest.java:180:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ClassFileParserTest.java:180:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ClassFileParserTest.java:180:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ClassFileParserTest.java:180:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
test/jdepend/framework/ClassFileParserTest.java:180:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
test/jdepend/framework/ClassFileParserTest.java:181:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/ClassFileParserTest.java:181:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/ClassFileParserTest.java:181:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/ClassFileParserTest.java:181:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/CollectAllCyclesTest.java:13:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CollectAllCyclesTest.java:13:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CollectAllCyclesTest.java:13:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:13:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:17:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CollectAllCyclesTest.java:17:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CollectAllCyclesTest.java:17:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CollectAllCyclesTest.java:17:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CollectAllCyclesTest.java:17:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CollectAllCyclesTest.java:17:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CollectAllCyclesTest.java:19:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:19:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:19:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CollectAllCyclesTest.java:19:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CollectAllCyclesTest.java:20:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:20:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:20:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CollectAllCyclesTest.java:20:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CollectAllCyclesTest.java:24:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:24:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:25:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:25:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:25:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:25:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:26:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:26:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:26:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:26:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:29:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:29:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:30:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:30:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:30:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:30:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:31:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:31:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:31:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:31:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:35:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CollectAllCyclesTest.java:35:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CollectAllCyclesTest.java:35:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CollectAllCyclesTest.java:35:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CollectAllCyclesTest.java:35:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CollectAllCyclesTest.java:35:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CollectAllCyclesTest.java:37:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:37:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:37:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CollectAllCyclesTest.java:37:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CollectAllCyclesTest.java:38:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:38:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:38:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CollectAllCyclesTest.java:38:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CollectAllCyclesTest.java:43:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:43:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:44:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:44:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:44:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:44:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:45:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:45:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:45:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:45:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:48:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:48:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:49:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:49:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:49:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:49:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:50:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:50:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:50:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:50:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:54:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CollectAllCyclesTest.java:54:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CollectAllCyclesTest.java:54:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CollectAllCyclesTest.java:54:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CollectAllCyclesTest.java:54:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CollectAllCyclesTest.java:54:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CollectAllCyclesTest.java:56:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:56:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:56:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CollectAllCyclesTest.java:56:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CollectAllCyclesTest.java:57:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:57:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:57:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CollectAllCyclesTest.java:57:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CollectAllCyclesTest.java:58:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:58:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:58:	ShortVariable: Avoid variables with short names like c
test/jdepend/framework/CollectAllCyclesTest.java:58:	ShortVariable: Avoid variables with short names like c
test/jdepend/framework/CollectAllCyclesTest.java:65:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:65:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:66:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:66:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:66:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:66:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:67:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:67:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:67:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:67:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:70:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:70:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:71:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:71:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:71:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:71:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:72:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:72:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:72:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:72:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:75:	LocalVariableCouldBeFinal: Local variable 'cCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:75:	LocalVariableCouldBeFinal: Local variable 'cCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:76:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:76:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:76:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:76:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:77:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:77:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:77:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:77:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:81:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CollectAllCyclesTest.java:81:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CollectAllCyclesTest.java:81:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CollectAllCyclesTest.java:81:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CollectAllCyclesTest.java:81:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CollectAllCyclesTest.java:81:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CollectAllCyclesTest.java:83:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:83:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:83:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CollectAllCyclesTest.java:83:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CollectAllCyclesTest.java:84:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:84:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:84:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CollectAllCyclesTest.java:84:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CollectAllCyclesTest.java:85:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:85:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:85:	ShortVariable: Avoid variables with short names like c
test/jdepend/framework/CollectAllCyclesTest.java:85:	ShortVariable: Avoid variables with short names like c
test/jdepend/framework/CollectAllCyclesTest.java:91:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:91:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:92:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:92:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:92:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:92:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:93:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:93:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:93:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:93:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:96:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:96:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:97:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:97:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:97:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:97:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:98:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:98:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:98:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:98:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:101:	LocalVariableCouldBeFinal: Local variable 'cCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:101:	LocalVariableCouldBeFinal: Local variable 'cCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:102:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:102:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:102:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:102:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:103:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:103:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:103:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:103:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:107:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CollectAllCyclesTest.java:107:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CollectAllCyclesTest.java:107:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CollectAllCyclesTest.java:107:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CollectAllCyclesTest.java:107:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CollectAllCyclesTest.java:107:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CollectAllCyclesTest.java:109:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:109:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:109:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CollectAllCyclesTest.java:109:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CollectAllCyclesTest.java:110:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:110:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:110:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CollectAllCyclesTest.java:110:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CollectAllCyclesTest.java:111:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:111:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:111:	ShortVariable: Avoid variables with short names like c
test/jdepend/framework/CollectAllCyclesTest.java:111:	ShortVariable: Avoid variables with short names like c
test/jdepend/framework/CollectAllCyclesTest.java:119:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:119:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:120:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:120:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:120:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:120:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:121:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:121:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:121:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:121:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:124:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:124:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:125:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:125:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:125:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:125:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:126:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:126:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:126:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:126:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:129:	LocalVariableCouldBeFinal: Local variable 'cCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:129:	LocalVariableCouldBeFinal: Local variable 'cCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:130:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:130:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:130:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:130:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:131:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:131:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:131:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:131:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:135:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CollectAllCyclesTest.java:135:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CollectAllCyclesTest.java:135:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CollectAllCyclesTest.java:135:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CollectAllCyclesTest.java:135:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CollectAllCyclesTest.java:135:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CollectAllCyclesTest.java:137:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:137:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:137:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CollectAllCyclesTest.java:137:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CollectAllCyclesTest.java:138:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:138:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:138:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CollectAllCyclesTest.java:138:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CollectAllCyclesTest.java:139:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:139:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:139:	ShortVariable: Avoid variables with short names like c
test/jdepend/framework/CollectAllCyclesTest.java:139:	ShortVariable: Avoid variables with short names like c
test/jdepend/framework/CollectAllCyclesTest.java:140:	LocalVariableCouldBeFinal: Local variable 'd' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:140:	LocalVariableCouldBeFinal: Local variable 'd' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:140:	ShortVariable: Avoid variables with short names like d
test/jdepend/framework/CollectAllCyclesTest.java:140:	ShortVariable: Avoid variables with short names like d
test/jdepend/framework/CollectAllCyclesTest.java:141:	LocalVariableCouldBeFinal: Local variable 'e' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:141:	LocalVariableCouldBeFinal: Local variable 'e' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:141:	ShortVariable: Avoid variables with short names like e
test/jdepend/framework/CollectAllCyclesTest.java:141:	ShortVariable: Avoid variables with short names like e
test/jdepend/framework/CollectAllCyclesTest.java:151:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:151:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:152:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:152:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:152:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:152:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:153:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:153:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:153:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:153:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:156:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:156:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:157:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:157:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:157:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:157:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:158:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:158:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:158:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:158:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:161:	LocalVariableCouldBeFinal: Local variable 'cCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:161:	LocalVariableCouldBeFinal: Local variable 'cCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:162:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:162:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:162:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:162:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:163:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:163:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:163:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:163:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:166:	LocalVariableCouldBeFinal: Local variable 'dCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:166:	LocalVariableCouldBeFinal: Local variable 'dCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:167:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:167:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:167:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:167:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:168:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:168:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:168:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:168:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:171:	LocalVariableCouldBeFinal: Local variable 'eCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:171:	LocalVariableCouldBeFinal: Local variable 'eCycles' could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:172:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:172:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:172:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:172:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:173:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:173:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:173:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:173:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CollectAllCyclesTest.java:177:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/CollectAllCyclesTest.java:177:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/CollectAllCyclesTest.java:177:	MethodArgumentCouldBeFinal: Parameter 'list' is not assigned and could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:177:	MethodArgumentCouldBeFinal: Parameter 'list' is not assigned and could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:177:	MethodArgumentCouldBeFinal: Parameter 'names' is not assigned and could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:177:	MethodArgumentCouldBeFinal: Parameter 'names' is not assigned and could be declared final
test/jdepend/framework/CollectAllCyclesTest.java:177:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
test/jdepend/framework/CollectAllCyclesTest.java:177:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
test/jdepend/framework/CollectAllCyclesTest.java:179:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:179:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:182:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:182:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CollectAllCyclesTest.java:182:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/CollectAllCyclesTest.java:182:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/CollectAllCyclesTest.java:182:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/CollectAllCyclesTest.java:182:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/CollectAllCyclesTest.java:182:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/CollectAllCyclesTest.java:182:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/ComponentTest.java:14:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/ComponentTest.java:14:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/ComponentTest.java:14:	CommentRequired: Field comments are required
test/jdepend/framework/ComponentTest.java:14:	CommentRequired: Field comments are required
test/jdepend/framework/ComponentTest.java:15:	CommentRequired: Field comments are required
test/jdepend/framework/ComponentTest.java:15:	CommentRequired: Field comments are required
test/jdepend/framework/ComponentTest.java:19:	UnsynchronizedStaticFormatter: Static Formatter objects should be accessed in a synchronized manner
test/jdepend/framework/ComponentTest.java:19:	UnsynchronizedStaticFormatter: Static Formatter objects should be accessed in a synchronized manner
test/jdepend/framework/ComponentTest.java:22:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ComponentTest.java:22:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ComponentTest.java:22:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/ComponentTest.java:22:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/ComponentTest.java:26:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/ComponentTest.java:26:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/ComponentTest.java:26:	JUnit4TestShouldUseBeforeAnnotation: JUnit 4 tests that set up tests should use the @Before annotation, JUnit5 tests should use @BeforeEach or @BeforeAll
test/jdepend/framework/ComponentTest.java:26:	JUnit4TestShouldUseBeforeAnnotation: JUnit 4 tests that set up tests should use the @Before annotation, JUnit5 tests should use @BeforeEach or @BeforeAll
test/jdepend/framework/ComponentTest.java:26:	MissingOverride: The method 'setUp()' is missing an @Override annotation.
test/jdepend/framework/ComponentTest.java:26:	MissingOverride: The method 'setUp()' is missing an @Override annotation.
test/jdepend/framework/ComponentTest.java:32:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/ComponentTest.java:32:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/ComponentTest.java:32:	JUnit4TestShouldUseAfterAnnotation: JUnit 4 tests that clean up tests should use the @After annotation, JUnit5 tests should use @AfterEach or @AfterAll
test/jdepend/framework/ComponentTest.java:32:	JUnit4TestShouldUseAfterAnnotation: JUnit 4 tests that clean up tests should use the @After annotation, JUnit5 tests should use @AfterEach or @AfterAll
test/jdepend/framework/ComponentTest.java:32:	MissingOverride: The method 'tearDown()' is missing an @Override annotation.
test/jdepend/framework/ComponentTest.java:32:	MissingOverride: The method 'tearDown()' is missing an @Override annotation.
test/jdepend/framework/ComponentTest.java:32:	UselessOverridingMethod: Overriding method merely calls super
test/jdepend/framework/ComponentTest.java:32:	UselessOverridingMethod: Overriding method merely calls super
test/jdepend/framework/ComponentTest.java:36:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ComponentTest.java:36:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ComponentTest.java:36:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ComponentTest.java:36:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ComponentTest.java:36:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/ComponentTest.java:36:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/ComponentTest.java:44:	LocalVariableCouldBeFinal: Local variable 'packages' could be declared final
test/jdepend/framework/ComponentTest.java:44:	LocalVariableCouldBeFinal: Local variable 'packages' could be declared final
test/jdepend/framework/ComponentTest.java:45:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:45:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:45:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:45:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:54:	AvoidDuplicateLiterals: The String literal "jdepend" appears 5 times in this file; the first occurrence is on line 54
test/jdepend/framework/ComponentTest.java:54:	AvoidDuplicateLiterals: The String literal "jdepend" appears 5 times in this file; the first occurrence is on line 54
test/jdepend/framework/ComponentTest.java:54:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/ComponentTest.java:54:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/ComponentTest.java:54:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/ComponentTest.java:54:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/ComponentTest.java:55:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:55:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:55:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:55:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:56:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:56:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:56:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:56:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:57:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:57:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:57:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:57:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:58:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:58:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:58:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:58:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:59:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:59:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:59:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:59:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:60:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:60:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:60:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:60:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:61:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:61:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:61:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:61:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:62:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:62:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:62:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:62:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:63:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:63:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:63:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:63:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:65:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:65:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:65:	LocalVariableCouldBeFinal: Local variable 'efferents' could be declared final
test/jdepend/framework/ComponentTest.java:65:	LocalVariableCouldBeFinal: Local variable 'efferents' could be declared final
test/jdepend/framework/ComponentTest.java:66:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:66:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:66:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:66:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:67:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:67:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:68:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:68:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:69:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:69:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:71:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:71:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:71:	LocalVariableCouldBeFinal: Local variable 'afferents' could be declared final
test/jdepend/framework/ComponentTest.java:71:	LocalVariableCouldBeFinal: Local variable 'afferents' could be declared final
test/jdepend/framework/ComponentTest.java:72:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:72:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:72:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:72:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:76:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/ComponentTest.java:76:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/ComponentTest.java:76:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/ComponentTest.java:76:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/ComponentTest.java:77:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:77:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:77:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:77:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:79:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:79:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:79:	LocalVariableCouldBeFinal: Local variable 'afferents' could be declared final
test/jdepend/framework/ComponentTest.java:79:	LocalVariableCouldBeFinal: Local variable 'afferents' could be declared final
test/jdepend/framework/ComponentTest.java:80:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:80:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:80:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:80:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:81:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:81:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:83:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:83:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:83:	LocalVariableCouldBeFinal: Local variable 'efferents' could be declared final
test/jdepend/framework/ComponentTest.java:83:	LocalVariableCouldBeFinal: Local variable 'efferents' could be declared final
test/jdepend/framework/ComponentTest.java:84:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:84:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:84:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:84:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:88:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/ComponentTest.java:88:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/ComponentTest.java:88:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/ComponentTest.java:88:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/ComponentTest.java:89:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:89:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:89:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:89:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:91:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:91:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:91:	LocalVariableCouldBeFinal: Local variable 'afferents' could be declared final
test/jdepend/framework/ComponentTest.java:91:	LocalVariableCouldBeFinal: Local variable 'afferents' could be declared final
test/jdepend/framework/ComponentTest.java:92:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:92:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:92:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:92:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:93:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:93:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:95:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:95:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:95:	LocalVariableCouldBeFinal: Local variable 'efferents' could be declared final
test/jdepend/framework/ComponentTest.java:95:	LocalVariableCouldBeFinal: Local variable 'efferents' could be declared final
test/jdepend/framework/ComponentTest.java:96:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:96:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:96:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:96:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:100:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/ComponentTest.java:100:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/ComponentTest.java:100:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/ComponentTest.java:100:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/ComponentTest.java:101:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:101:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:101:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:101:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:103:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:103:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:103:	LocalVariableCouldBeFinal: Local variable 'afferents' could be declared final
test/jdepend/framework/ComponentTest.java:103:	LocalVariableCouldBeFinal: Local variable 'afferents' could be declared final
test/jdepend/framework/ComponentTest.java:104:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:104:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:104:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:104:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:105:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:105:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:107:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:107:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:107:	LocalVariableCouldBeFinal: Local variable 'efferents' could be declared final
test/jdepend/framework/ComponentTest.java:107:	LocalVariableCouldBeFinal: Local variable 'efferents' could be declared final
test/jdepend/framework/ComponentTest.java:108:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:108:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ComponentTest.java:108:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:108:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ComponentTest.java:111:	MethodArgumentCouldBeFinal: Parameter 'f' is not assigned and could be declared final
test/jdepend/framework/ComponentTest.java:111:	MethodArgumentCouldBeFinal: Parameter 'f' is not assigned and could be declared final
test/jdepend/framework/ComponentTest.java:111:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/ComponentTest.java:111:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/ComponentTest.java:112:	UnsynchronizedStaticFormatter: Static Formatter objects should be accessed in a synchronized manner
test/jdepend/framework/ComponentTest.java:112:	UnsynchronizedStaticFormatter: Static Formatter objects should be accessed in a synchronized manner
test/jdepend/framework/ConstraintTest.java:12:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/ConstraintTest.java:12:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/ConstraintTest.java:12:	CommentRequired: Field comments are required
test/jdepend/framework/ConstraintTest.java:12:	CommentRequired: Field comments are required
test/jdepend/framework/ConstraintTest.java:14:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ConstraintTest.java:14:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ConstraintTest.java:14:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/ConstraintTest.java:14:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/ConstraintTest.java:18:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/ConstraintTest.java:18:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/ConstraintTest.java:18:	JUnit4TestShouldUseBeforeAnnotation: JUnit 4 tests that set up tests should use the @Before annotation, JUnit5 tests should use @BeforeEach or @BeforeAll
test/jdepend/framework/ConstraintTest.java:18:	JUnit4TestShouldUseBeforeAnnotation: JUnit 4 tests that set up tests should use the @Before annotation, JUnit5 tests should use @BeforeEach or @BeforeAll
test/jdepend/framework/ConstraintTest.java:18:	MissingOverride: The method 'setUp()' is missing an @Override annotation.
test/jdepend/framework/ConstraintTest.java:18:	MissingOverride: The method 'setUp()' is missing an @Override annotation.
test/jdepend/framework/ConstraintTest.java:20:	LocalVariableCouldBeFinal: Local variable 'filter' could be declared final
test/jdepend/framework/ConstraintTest.java:20:	LocalVariableCouldBeFinal: Local variable 'filter' could be declared final
test/jdepend/framework/ConstraintTest.java:26:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ConstraintTest.java:26:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ConstraintTest.java:26:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ConstraintTest.java:26:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ConstraintTest.java:28:	LocalVariableCouldBeFinal: Local variable 'constraint' could be declared final
test/jdepend/framework/ConstraintTest.java:28:	LocalVariableCouldBeFinal: Local variable 'constraint' could be declared final
test/jdepend/framework/ConstraintTest.java:30:	LocalVariableCouldBeFinal: Local variable 'expectedA' could be declared final
test/jdepend/framework/ConstraintTest.java:30:	LocalVariableCouldBeFinal: Local variable 'expectedA' could be declared final
test/jdepend/framework/ConstraintTest.java:31:	LocalVariableCouldBeFinal: Local variable 'expectedB' could be declared final
test/jdepend/framework/ConstraintTest.java:31:	LocalVariableCouldBeFinal: Local variable 'expectedB' could be declared final
test/jdepend/framework/ConstraintTest.java:33:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:33:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:35:	LocalVariableCouldBeFinal: Local variable 'actualA' could be declared final
test/jdepend/framework/ConstraintTest.java:35:	LocalVariableCouldBeFinal: Local variable 'actualA' could be declared final
test/jdepend/framework/ConstraintTest.java:36:	LocalVariableCouldBeFinal: Local variable 'actualB' could be declared final
test/jdepend/framework/ConstraintTest.java:36:	LocalVariableCouldBeFinal: Local variable 'actualB' could be declared final
test/jdepend/framework/ConstraintTest.java:43:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ConstraintTest.java:43:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ConstraintTest.java:43:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/ConstraintTest.java:43:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/ConstraintTest.java:46:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ConstraintTest.java:46:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ConstraintTest.java:46:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ConstraintTest.java:46:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ConstraintTest.java:48:	LocalVariableCouldBeFinal: Local variable 'constraint' could be declared final
test/jdepend/framework/ConstraintTest.java:48:	LocalVariableCouldBeFinal: Local variable 'constraint' could be declared final
test/jdepend/framework/ConstraintTest.java:50:	LocalVariableCouldBeFinal: Local variable 'expectedA' could be declared final
test/jdepend/framework/ConstraintTest.java:50:	LocalVariableCouldBeFinal: Local variable 'expectedA' could be declared final
test/jdepend/framework/ConstraintTest.java:51:	LocalVariableCouldBeFinal: Local variable 'expectedB' could be declared final
test/jdepend/framework/ConstraintTest.java:51:	LocalVariableCouldBeFinal: Local variable 'expectedB' could be declared final
test/jdepend/framework/ConstraintTest.java:52:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'expectedC' (lines '52'-'68').
test/jdepend/framework/ConstraintTest.java:52:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'expectedC' (lines '52'-'68').
test/jdepend/framework/ConstraintTest.java:52:	LocalVariableCouldBeFinal: Local variable 'expectedC' could be declared final
test/jdepend/framework/ConstraintTest.java:52:	LocalVariableCouldBeFinal: Local variable 'expectedC' could be declared final
test/jdepend/framework/ConstraintTest.java:52:	UnusedLocalVariable: Avoid unused local variables such as 'expectedC'.
test/jdepend/framework/ConstraintTest.java:52:	UnusedLocalVariable: Avoid unused local variables such as 'expectedC'.
test/jdepend/framework/ConstraintTest.java:54:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:54:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:56:	LocalVariableCouldBeFinal: Local variable 'actualA' could be declared final
test/jdepend/framework/ConstraintTest.java:56:	LocalVariableCouldBeFinal: Local variable 'actualA' could be declared final
test/jdepend/framework/ConstraintTest.java:57:	LocalVariableCouldBeFinal: Local variable 'actualB' could be declared final
test/jdepend/framework/ConstraintTest.java:57:	LocalVariableCouldBeFinal: Local variable 'actualB' could be declared final
test/jdepend/framework/ConstraintTest.java:58:	LocalVariableCouldBeFinal: Local variable 'actualC' could be declared final
test/jdepend/framework/ConstraintTest.java:58:	LocalVariableCouldBeFinal: Local variable 'actualC' could be declared final
test/jdepend/framework/ConstraintTest.java:67:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ConstraintTest.java:67:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ConstraintTest.java:67:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/ConstraintTest.java:67:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/ConstraintTest.java:70:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ConstraintTest.java:70:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ConstraintTest.java:70:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ConstraintTest.java:70:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ConstraintTest.java:76:	LocalVariableCouldBeFinal: Local variable 'constraint' could be declared final
test/jdepend/framework/ConstraintTest.java:76:	LocalVariableCouldBeFinal: Local variable 'constraint' could be declared final
test/jdepend/framework/ConstraintTest.java:78:	LocalVariableCouldBeFinal: Local variable 'junitframework' could be declared final
test/jdepend/framework/ConstraintTest.java:78:	LocalVariableCouldBeFinal: Local variable 'junitframework' could be declared final
test/jdepend/framework/ConstraintTest.java:79:	LocalVariableCouldBeFinal: Local variable 'junitui' could be declared final
test/jdepend/framework/ConstraintTest.java:79:	LocalVariableCouldBeFinal: Local variable 'junitui' could be declared final
test/jdepend/framework/ConstraintTest.java:80:	LocalVariableCouldBeFinal: Local variable 'framework' could be declared final
test/jdepend/framework/ConstraintTest.java:80:	LocalVariableCouldBeFinal: Local variable 'framework' could be declared final
test/jdepend/framework/ConstraintTest.java:81:	LocalVariableCouldBeFinal: Local variable 'text' could be declared final
test/jdepend/framework/ConstraintTest.java:81:	LocalVariableCouldBeFinal: Local variable 'text' could be declared final
test/jdepend/framework/ConstraintTest.java:82:	LocalVariableCouldBeFinal: Local variable 'xml' could be declared final
test/jdepend/framework/ConstraintTest.java:82:	LocalVariableCouldBeFinal: Local variable 'xml' could be declared final
test/jdepend/framework/ConstraintTest.java:83:	LocalVariableCouldBeFinal: Local variable 'swing' could be declared final
test/jdepend/framework/ConstraintTest.java:83:	LocalVariableCouldBeFinal: Local variable 'swing' could be declared final
test/jdepend/framework/ConstraintTest.java:84:	LocalVariableCouldBeFinal: Local variable 'orgjunitrunners' could be declared final
test/jdepend/framework/ConstraintTest.java:84:	LocalVariableCouldBeFinal: Local variable 'orgjunitrunners' could be declared final
test/jdepend/framework/ConstraintTest.java:85:	LocalVariableCouldBeFinal: Local variable 'jdependframeworkp2' could be declared final
test/jdepend/framework/ConstraintTest.java:85:	LocalVariableCouldBeFinal: Local variable 'jdependframeworkp2' could be declared final
test/jdepend/framework/ConstraintTest.java:85:	LongVariable: Avoid excessively long variable names like jdependframeworkp2
test/jdepend/framework/ConstraintTest.java:85:	LongVariable: Avoid excessively long variable names like jdependframeworkp2
test/jdepend/framework/ConstraintTest.java:86:	LocalVariableCouldBeFinal: Local variable 'jdependframeworkp3' could be declared final
test/jdepend/framework/ConstraintTest.java:86:	LocalVariableCouldBeFinal: Local variable 'jdependframeworkp3' could be declared final
test/jdepend/framework/ConstraintTest.java:86:	LongVariable: Avoid excessively long variable names like jdependframeworkp3
test/jdepend/framework/ConstraintTest.java:86:	LongVariable: Avoid excessively long variable names like jdependframeworkp3
test/jdepend/framework/ConstraintTest.java:87:	LocalVariableCouldBeFinal: Local variable 'jdependframeworkp1' could be declared final
test/jdepend/framework/ConstraintTest.java:87:	LocalVariableCouldBeFinal: Local variable 'jdependframeworkp1' could be declared final
test/jdepend/framework/ConstraintTest.java:87:	LongVariable: Avoid excessively long variable names like jdependframeworkp1
test/jdepend/framework/ConstraintTest.java:87:	LongVariable: Avoid excessively long variable names like jdependframeworkp1
test/jdepend/framework/ConstraintTest.java:88:	LocalVariableCouldBeFinal: Local variable 'orgjunit' could be declared final
test/jdepend/framework/ConstraintTest.java:88:	LocalVariableCouldBeFinal: Local variable 'orgjunit' could be declared final
test/jdepend/framework/ConstraintTest.java:90:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:90:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:91:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:91:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:92:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:92:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:93:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:93:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:94:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:94:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:95:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:95:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:96:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:96:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:97:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:97:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:98:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:98:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:99:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:99:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:100:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:100:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:101:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:101:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ConstraintTest.java:103:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ConstraintTest.java:103:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/ConstraintTest.java:103:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/ConstraintTest.java:103:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:14:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CycleTest.java:14:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CycleTest.java:14:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/CycleTest.java:14:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/CycleTest.java:18:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CycleTest.java:18:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CycleTest.java:18:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CycleTest.java:18:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CycleTest.java:18:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CycleTest.java:18:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CycleTest.java:20:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CycleTest.java:20:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CycleTest.java:20:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CycleTest.java:20:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CycleTest.java:21:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CycleTest.java:21:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CycleTest.java:21:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CycleTest.java:21:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CycleTest.java:25:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CycleTest.java:25:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CycleTest.java:26:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:26:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:26:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:26:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:27:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:27:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:27:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:27:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:30:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CycleTest.java:30:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CycleTest.java:31:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:31:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:31:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:31:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:32:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:32:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:32:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:32:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:36:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CycleTest.java:36:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CycleTest.java:36:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CycleTest.java:36:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CycleTest.java:36:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CycleTest.java:36:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CycleTest.java:38:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CycleTest.java:38:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CycleTest.java:38:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CycleTest.java:38:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CycleTest.java:39:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CycleTest.java:39:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CycleTest.java:39:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CycleTest.java:39:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CycleTest.java:44:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CycleTest.java:44:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CycleTest.java:45:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:45:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:45:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:45:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:46:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:46:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:46:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:46:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:49:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CycleTest.java:49:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CycleTest.java:50:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:50:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:50:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:50:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:51:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:51:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:51:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:51:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:55:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CycleTest.java:55:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CycleTest.java:55:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CycleTest.java:55:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CycleTest.java:55:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CycleTest.java:55:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CycleTest.java:57:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CycleTest.java:57:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CycleTest.java:57:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CycleTest.java:57:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CycleTest.java:58:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CycleTest.java:58:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CycleTest.java:58:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CycleTest.java:58:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CycleTest.java:59:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
test/jdepend/framework/CycleTest.java:59:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
test/jdepend/framework/CycleTest.java:59:	ShortVariable: Avoid variables with short names like c
test/jdepend/framework/CycleTest.java:59:	ShortVariable: Avoid variables with short names like c
test/jdepend/framework/CycleTest.java:65:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CycleTest.java:65:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CycleTest.java:66:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:66:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:66:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:66:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:67:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:67:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:67:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:67:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:70:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CycleTest.java:70:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CycleTest.java:71:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:71:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:71:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:71:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:72:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:72:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:72:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:72:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:75:	LocalVariableCouldBeFinal: Local variable 'cCycles' could be declared final
test/jdepend/framework/CycleTest.java:75:	LocalVariableCouldBeFinal: Local variable 'cCycles' could be declared final
test/jdepend/framework/CycleTest.java:76:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:76:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:76:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:76:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:77:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:77:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:77:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:77:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:81:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CycleTest.java:81:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CycleTest.java:81:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CycleTest.java:81:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CycleTest.java:81:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CycleTest.java:81:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CycleTest.java:83:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CycleTest.java:83:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CycleTest.java:83:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CycleTest.java:83:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CycleTest.java:84:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CycleTest.java:84:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CycleTest.java:84:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CycleTest.java:84:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CycleTest.java:85:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
test/jdepend/framework/CycleTest.java:85:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
test/jdepend/framework/CycleTest.java:85:	ShortVariable: Avoid variables with short names like c
test/jdepend/framework/CycleTest.java:85:	ShortVariable: Avoid variables with short names like c
test/jdepend/framework/CycleTest.java:91:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CycleTest.java:91:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CycleTest.java:92:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:92:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:92:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:92:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:93:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:93:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:93:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:93:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:96:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CycleTest.java:96:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CycleTest.java:97:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:97:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:97:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:97:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:98:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:98:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:98:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:98:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:101:	LocalVariableCouldBeFinal: Local variable 'cCycles' could be declared final
test/jdepend/framework/CycleTest.java:101:	LocalVariableCouldBeFinal: Local variable 'cCycles' could be declared final
test/jdepend/framework/CycleTest.java:102:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:102:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:102:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:102:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:103:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:103:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:103:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:103:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:107:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CycleTest.java:107:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CycleTest.java:107:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CycleTest.java:107:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CycleTest.java:107:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CycleTest.java:107:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CycleTest.java:109:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CycleTest.java:109:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CycleTest.java:109:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CycleTest.java:109:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CycleTest.java:110:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CycleTest.java:110:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CycleTest.java:110:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CycleTest.java:110:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CycleTest.java:111:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
test/jdepend/framework/CycleTest.java:111:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
test/jdepend/framework/CycleTest.java:111:	ShortVariable: Avoid variables with short names like c
test/jdepend/framework/CycleTest.java:111:	ShortVariable: Avoid variables with short names like c
test/jdepend/framework/CycleTest.java:119:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CycleTest.java:119:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CycleTest.java:120:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:120:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:120:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:120:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:121:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:121:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:121:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:121:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:124:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CycleTest.java:124:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CycleTest.java:125:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:125:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:125:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:125:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:126:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:126:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:126:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:126:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:129:	LocalVariableCouldBeFinal: Local variable 'cCycles' could be declared final
test/jdepend/framework/CycleTest.java:129:	LocalVariableCouldBeFinal: Local variable 'cCycles' could be declared final
test/jdepend/framework/CycleTest.java:130:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:130:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:130:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:130:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:131:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:131:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:131:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:131:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:135:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CycleTest.java:135:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/CycleTest.java:135:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CycleTest.java:135:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/CycleTest.java:135:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CycleTest.java:135:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/CycleTest.java:137:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CycleTest.java:137:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/CycleTest.java:137:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CycleTest.java:137:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/CycleTest.java:138:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CycleTest.java:138:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/CycleTest.java:138:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CycleTest.java:138:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/CycleTest.java:139:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
test/jdepend/framework/CycleTest.java:139:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
test/jdepend/framework/CycleTest.java:139:	ShortVariable: Avoid variables with short names like c
test/jdepend/framework/CycleTest.java:139:	ShortVariable: Avoid variables with short names like c
test/jdepend/framework/CycleTest.java:140:	LocalVariableCouldBeFinal: Local variable 'd' could be declared final
test/jdepend/framework/CycleTest.java:140:	LocalVariableCouldBeFinal: Local variable 'd' could be declared final
test/jdepend/framework/CycleTest.java:140:	ShortVariable: Avoid variables with short names like d
test/jdepend/framework/CycleTest.java:140:	ShortVariable: Avoid variables with short names like d
test/jdepend/framework/CycleTest.java:141:	LocalVariableCouldBeFinal: Local variable 'e' could be declared final
test/jdepend/framework/CycleTest.java:141:	LocalVariableCouldBeFinal: Local variable 'e' could be declared final
test/jdepend/framework/CycleTest.java:141:	ShortVariable: Avoid variables with short names like e
test/jdepend/framework/CycleTest.java:141:	ShortVariable: Avoid variables with short names like e
test/jdepend/framework/CycleTest.java:151:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CycleTest.java:151:	LocalVariableCouldBeFinal: Local variable 'aCycles' could be declared final
test/jdepend/framework/CycleTest.java:152:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:152:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:152:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:152:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:153:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:153:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:153:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:153:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:156:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CycleTest.java:156:	LocalVariableCouldBeFinal: Local variable 'bCycles' could be declared final
test/jdepend/framework/CycleTest.java:157:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:157:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:157:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:157:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:158:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:158:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:158:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:158:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:161:	LocalVariableCouldBeFinal: Local variable 'cCycles' could be declared final
test/jdepend/framework/CycleTest.java:161:	LocalVariableCouldBeFinal: Local variable 'cCycles' could be declared final
test/jdepend/framework/CycleTest.java:162:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:162:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:162:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:162:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:163:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:163:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:163:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:163:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:166:	LocalVariableCouldBeFinal: Local variable 'dCycles' could be declared final
test/jdepend/framework/CycleTest.java:166:	LocalVariableCouldBeFinal: Local variable 'dCycles' could be declared final
test/jdepend/framework/CycleTest.java:167:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:167:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:167:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:167:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:168:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:168:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:168:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:168:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:171:	LocalVariableCouldBeFinal: Local variable 'eCycles' could be declared final
test/jdepend/framework/CycleTest.java:171:	LocalVariableCouldBeFinal: Local variable 'eCycles' could be declared final
test/jdepend/framework/CycleTest.java:172:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:172:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:172:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:172:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:173:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:173:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:173:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:173:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/CycleTest.java:177:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/CycleTest.java:177:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/CycleTest.java:177:	MethodArgumentCouldBeFinal: Parameter 'list' is not assigned and could be declared final
test/jdepend/framework/CycleTest.java:177:	MethodArgumentCouldBeFinal: Parameter 'list' is not assigned and could be declared final
test/jdepend/framework/CycleTest.java:177:	MethodArgumentCouldBeFinal: Parameter 'names' is not assigned and could be declared final
test/jdepend/framework/CycleTest.java:177:	MethodArgumentCouldBeFinal: Parameter 'names' is not assigned and could be declared final
test/jdepend/framework/CycleTest.java:177:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
test/jdepend/framework/CycleTest.java:177:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
test/jdepend/framework/CycleTest.java:179:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:179:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:182:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:182:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/CycleTest.java:182:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/CycleTest.java:182:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/CycleTest.java:182:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/CycleTest.java:182:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/CycleTest.java:182:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/CycleTest.java:182:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/CycleTest.java:186:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/CycleTest.java:186:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/CycleTest.java:186:	MethodArgumentCouldBeFinal: Parameter 'list' is not assigned and could be declared final
test/jdepend/framework/CycleTest.java:186:	MethodArgumentCouldBeFinal: Parameter 'list' is not assigned and could be declared final
test/jdepend/framework/CycleTest.java:187:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
test/jdepend/framework/CycleTest.java:187:	LocalVariableCouldBeFinal: Local variable 'i' could be declared final
test/jdepend/framework/CycleTest.java:187:	ShortVariable: Avoid variables with short names like i
test/jdepend/framework/CycleTest.java:187:	ShortVariable: Avoid variables with short names like i
test/jdepend/framework/CycleTest.java:189:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/CycleTest.java:189:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/CycleTest.java:189:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/CycleTest.java:189:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/CycleTest.java:191:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/CycleTest.java:191:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/CycleTest.java:191:	SystemPrintln: System.out.print is used
test/jdepend/framework/CycleTest.java:191:	SystemPrintln: System.out.print is used
test/jdepend/framework/CycleTest.java:193:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/CycleTest.java:193:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/CycleTest.java:193:	SystemPrintln: System.out.println is used
test/jdepend/framework/CycleTest.java:193:	SystemPrintln: System.out.println is used
test/jdepend/framework/ExampleAbstractClass.java:10:	AbstractNaming: Abstract classes should be named AbstractXXX
test/jdepend/framework/ExampleAbstractClass.java:10:	AbstractNaming: Abstract classes should be named AbstractXXX
test/jdepend/framework/ExampleAbstractClass.java:10:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
test/jdepend/framework/ExampleAbstractClass.java:10:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
test/jdepend/framework/ExampleAbstractClass.java:13:	CommentRequired: Field comments are required
test/jdepend/framework/ExampleAbstractClass.java:13:	CommentRequired: Field comments are required
test/jdepend/framework/ExampleAbstractClass.java:13:	UnusedPrivateField: Avoid unused private fields such as 'method'.
test/jdepend/framework/ExampleAbstractClass.java:13:	UnusedPrivateField: Avoid unused private fields such as 'method'.
test/jdepend/framework/ExampleAbstractClass.java:15:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleAbstractClass.java:15:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleAbstractClass.java:15:	UncommentedEmptyConstructor: Document empty constructor
test/jdepend/framework/ExampleAbstractClass.java:15:	UncommentedEmptyConstructor: Document empty constructor
test/jdepend/framework/ExampleAbstractClass.java:15:	UnnecessaryConstructor: Avoid unnecessary constructors - the compiler will generate these for you
test/jdepend/framework/ExampleAbstractClass.java:15:	UnnecessaryConstructor: Avoid unnecessary constructors - the compiler will generate these for you
test/jdepend/framework/ExampleAbstractClass.java:18:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleAbstractClass.java:18:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleAbstractClass.java:18:	MissingOverride: The method 'a()' is missing an @Override annotation.
test/jdepend/framework/ExampleAbstractClass.java:18:	MissingOverride: The method 'a()' is missing an @Override annotation.
test/jdepend/framework/ExampleAbstractClass.java:18:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleAbstractClass.java:18:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleAbstractClass.java:19:	LocalVariableCouldBeFinal: Local variable 'url' could be declared final
test/jdepend/framework/ExampleAbstractClass.java:19:	LocalVariableCouldBeFinal: Local variable 'url' could be declared final
test/jdepend/framework/ExampleAbstractClass.java:19:	UnusedLocalVariable: Avoid unused local variables such as 'url'.
test/jdepend/framework/ExampleAbstractClass.java:19:	UnusedLocalVariable: Avoid unused local variables such as 'url'.
test/jdepend/framework/ExampleAbstractClass.java:22:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleAbstractClass.java:22:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleAbstractClass.java:22:	EmptyMethodInAbstractClassShouldBeAbstract: An empty method in an abstract class should be abstract instead
test/jdepend/framework/ExampleAbstractClass.java:22:	EmptyMethodInAbstractClassShouldBeAbstract: An empty method in an abstract class should be abstract instead
test/jdepend/framework/ExampleAbstractClass.java:22:	LooseCoupling: Avoid using implementation types like 'java.util.Vector'; use the interface instead
test/jdepend/framework/ExampleAbstractClass.java:22:	LooseCoupling: Avoid using implementation types like 'java.util.Vector'; use the interface instead
test/jdepend/framework/ExampleAbstractClass.java:22:	MethodArgumentCouldBeFinal: Parameter 'nf' is not assigned and could be declared final
test/jdepend/framework/ExampleAbstractClass.java:22:	MethodArgumentCouldBeFinal: Parameter 'nf' is not assigned and could be declared final
test/jdepend/framework/ExampleAbstractClass.java:22:	MethodArgumentCouldBeFinal: Parameter 's' is not assigned and could be declared final
test/jdepend/framework/ExampleAbstractClass.java:22:	MethodArgumentCouldBeFinal: Parameter 's' is not assigned and could be declared final
test/jdepend/framework/ExampleAbstractClass.java:22:	MissingOverride: The method 'b(String, java.text.NumberFormat)' is missing an @Override annotation.
test/jdepend/framework/ExampleAbstractClass.java:22:	MissingOverride: The method 'b(String, java.text.NumberFormat)' is missing an @Override annotation.
test/jdepend/framework/ExampleAbstractClass.java:22:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleAbstractClass.java:22:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleAbstractClass.java:22:	ShortVariable: Avoid variables with short names like nf
test/jdepend/framework/ExampleAbstractClass.java:22:	ShortVariable: Avoid variables with short names like nf
test/jdepend/framework/ExampleAbstractClass.java:22:	ShortVariable: Avoid variables with short names like s
test/jdepend/framework/ExampleAbstractClass.java:22:	ShortVariable: Avoid variables with short names like s
test/jdepend/framework/ExampleAbstractClass.java:26:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleAbstractClass.java:26:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleAbstractClass.java:26:	EmptyMethodInAbstractClassShouldBeAbstract: An empty method in an abstract class should be abstract instead
test/jdepend/framework/ExampleAbstractClass.java:26:	EmptyMethodInAbstractClassShouldBeAbstract: An empty method in an abstract class should be abstract instead
test/jdepend/framework/ExampleAbstractClass.java:26:	MethodArgumentCouldBeFinal: Parameter 'b' is not assigned and could be declared final
test/jdepend/framework/ExampleAbstractClass.java:26:	MethodArgumentCouldBeFinal: Parameter 'b' is not assigned and could be declared final
test/jdepend/framework/ExampleAbstractClass.java:26:	MethodArgumentCouldBeFinal: Parameter 'bd' is not assigned and could be declared final
test/jdepend/framework/ExampleAbstractClass.java:26:	MethodArgumentCouldBeFinal: Parameter 'bd' is not assigned and could be declared final
test/jdepend/framework/ExampleAbstractClass.java:26:	MissingOverride: The method 'c(BigDecimal, byte)' is missing an @Override annotation.
test/jdepend/framework/ExampleAbstractClass.java:26:	MissingOverride: The method 'c(BigDecimal, byte)' is missing an @Override annotation.
test/jdepend/framework/ExampleAbstractClass.java:26:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleAbstractClass.java:26:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleAbstractClass.java:26:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/ExampleAbstractClass.java:26:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/ExampleAbstractClass.java:26:	ShortVariable: Avoid variables with short names like bd
test/jdepend/framework/ExampleAbstractClass.java:26:	ShortVariable: Avoid variables with short names like bd
test/jdepend/framework/ExampleAbstractClass.java:26:	UncommentedEmptyMethodBody: Document empty method body
test/jdepend/framework/ExampleAbstractClass.java:26:	UncommentedEmptyMethodBody: Document empty method body
test/jdepend/framework/ExampleAbstractClass.java:30:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleAbstractClass.java:30:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleAbstractClass.java:30:	MissingOverride: The method 'd()' is missing an @Override annotation.
test/jdepend/framework/ExampleAbstractClass.java:30:	MissingOverride: The method 'd()' is missing an @Override annotation.
test/jdepend/framework/ExampleAbstractClass.java:30:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleAbstractClass.java:30:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleConcreteClass.java:8:	UnusedImports: Avoid unused imports such as 'org.junit.Ignore'
test/jdepend/framework/ExampleConcreteClass.java:8:	UnusedImports: Avoid unused imports such as 'org.junit.Ignore'
test/jdepend/framework/ExampleConcreteClass.java:9:	UnusedImports: Avoid unused imports such as 'org.junit.Test'
test/jdepend/framework/ExampleConcreteClass.java:9:	UnusedImports: Avoid unused imports such as 'org.junit.Test'
test/jdepend/framework/ExampleConcreteClass.java:10:	UnusedImports: Avoid unused imports such as 'org.junit.runners.Suite.SuiteClasses'
test/jdepend/framework/ExampleConcreteClass.java:10:	UnusedImports: Avoid unused imports such as 'org.junit.runners.Suite.SuiteClasses'
test/jdepend/framework/ExampleConcreteClass.java:17:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'org.junit.runners.Suite.SuiteClasses' due to existing import 'org.junit.runners.Suite.SuiteClasses'
test/jdepend/framework/ExampleConcreteClass.java:17:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'org.junit.runners.Suite.SuiteClasses' due to existing import 'org.junit.runners.Suite.SuiteClasses'
test/jdepend/framework/ExampleConcreteClass.java:18:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
test/jdepend/framework/ExampleConcreteClass.java:18:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
test/jdepend/framework/ExampleConcreteClass.java:20:	CommentRequired: Field comments are required
test/jdepend/framework/ExampleConcreteClass.java:20:	CommentRequired: Field comments are required
test/jdepend/framework/ExampleConcreteClass.java:20:	UnusedPrivateField: Avoid unused private fields such as 'statements'.
test/jdepend/framework/ExampleConcreteClass.java:20:	UnusedPrivateField: Avoid unused private fields such as 'statements'.
test/jdepend/framework/ExampleConcreteClass.java:22:	CallSuperInConstructor: It is a good practice to call super() in a constructor
test/jdepend/framework/ExampleConcreteClass.java:22:	CallSuperInConstructor: It is a good practice to call super() in a constructor
test/jdepend/framework/ExampleConcreteClass.java:22:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleConcreteClass.java:22:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleConcreteClass.java:22:	UncommentedEmptyConstructor: Document empty constructor
test/jdepend/framework/ExampleConcreteClass.java:22:	UncommentedEmptyConstructor: Document empty constructor
test/jdepend/framework/ExampleConcreteClass.java:22:	UnnecessaryConstructor: Avoid unnecessary constructors - the compiler will generate these for you
test/jdepend/framework/ExampleConcreteClass.java:22:	UnnecessaryConstructor: Avoid unnecessary constructors - the compiler will generate these for you
test/jdepend/framework/ExampleConcreteClass.java:25:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleConcreteClass.java:25:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleConcreteClass.java:25:	DetachedTestCase: Probable detached JUnit test case.
test/jdepend/framework/ExampleConcreteClass.java:25:	DetachedTestCase: Probable detached JUnit test case.
test/jdepend/framework/ExampleConcreteClass.java:25:	MissingOverride: The method 'a()' is missing an @Override annotation.
test/jdepend/framework/ExampleConcreteClass.java:25:	MissingOverride: The method 'a()' is missing an @Override annotation.
test/jdepend/framework/ExampleConcreteClass.java:25:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleConcreteClass.java:25:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleConcreteClass.java:27:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'url' (lines '27'-'30').
test/jdepend/framework/ExampleConcreteClass.java:27:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'url' (lines '27'-'30').
test/jdepend/framework/ExampleConcreteClass.java:27:	LocalVariableCouldBeFinal: Local variable 'url' could be declared final
test/jdepend/framework/ExampleConcreteClass.java:27:	LocalVariableCouldBeFinal: Local variable 'url' could be declared final
test/jdepend/framework/ExampleConcreteClass.java:27:	UnusedLocalVariable: Avoid unused local variables such as 'url'.
test/jdepend/framework/ExampleConcreteClass.java:27:	UnusedLocalVariable: Avoid unused local variables such as 'url'.
test/jdepend/framework/ExampleConcreteClass.java:28:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
test/jdepend/framework/ExampleConcreteClass.java:28:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
test/jdepend/framework/ExampleConcreteClass.java:32:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleConcreteClass.java:32:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleConcreteClass.java:32:	LooseCoupling: Avoid using implementation types like 'java.util.Vector'; use the interface instead
test/jdepend/framework/ExampleConcreteClass.java:32:	LooseCoupling: Avoid using implementation types like 'java.util.Vector'; use the interface instead
test/jdepend/framework/ExampleConcreteClass.java:32:	MethodArgumentCouldBeFinal: Parameter 'nf' is not assigned and could be declared final
test/jdepend/framework/ExampleConcreteClass.java:32:	MethodArgumentCouldBeFinal: Parameter 'nf' is not assigned and could be declared final
test/jdepend/framework/ExampleConcreteClass.java:32:	MethodArgumentCouldBeFinal: Parameter 's' is not assigned and could be declared final
test/jdepend/framework/ExampleConcreteClass.java:32:	MethodArgumentCouldBeFinal: Parameter 's' is not assigned and could be declared final
test/jdepend/framework/ExampleConcreteClass.java:32:	MissingOverride: The method 'b(String, java.text.NumberFormat)' is missing an @Override annotation.
test/jdepend/framework/ExampleConcreteClass.java:32:	MissingOverride: The method 'b(String, java.text.NumberFormat)' is missing an @Override annotation.
test/jdepend/framework/ExampleConcreteClass.java:32:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleConcreteClass.java:32:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleConcreteClass.java:32:	ShortVariable: Avoid variables with short names like nf
test/jdepend/framework/ExampleConcreteClass.java:32:	ShortVariable: Avoid variables with short names like nf
test/jdepend/framework/ExampleConcreteClass.java:32:	ShortVariable: Avoid variables with short names like s
test/jdepend/framework/ExampleConcreteClass.java:32:	ShortVariable: Avoid variables with short names like s
test/jdepend/framework/ExampleConcreteClass.java:36:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleConcreteClass.java:36:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleConcreteClass.java:36:	MethodArgumentCouldBeFinal: Parameter 'bd' is not assigned and could be declared final
test/jdepend/framework/ExampleConcreteClass.java:36:	MethodArgumentCouldBeFinal: Parameter 'bd' is not assigned and could be declared final
test/jdepend/framework/ExampleConcreteClass.java:36:	MethodArgumentCouldBeFinal: Parameter 'bytes' is not assigned and could be declared final
test/jdepend/framework/ExampleConcreteClass.java:36:	MethodArgumentCouldBeFinal: Parameter 'bytes' is not assigned and could be declared final
test/jdepend/framework/ExampleConcreteClass.java:36:	MissingOverride: The method 'c(BigDecimal, byte)' is missing an @Override annotation.
test/jdepend/framework/ExampleConcreteClass.java:36:	MissingOverride: The method 'c(BigDecimal, byte)' is missing an @Override annotation.
test/jdepend/framework/ExampleConcreteClass.java:36:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleConcreteClass.java:36:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleConcreteClass.java:36:	ShortVariable: Avoid variables with short names like bd
test/jdepend/framework/ExampleConcreteClass.java:36:	ShortVariable: Avoid variables with short names like bd
test/jdepend/framework/ExampleConcreteClass.java:37:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'a' (lines '37'-'39').
test/jdepend/framework/ExampleConcreteClass.java:37:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'a' (lines '37'-'39').
test/jdepend/framework/ExampleConcreteClass.java:37:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/ExampleConcreteClass.java:37:	LocalVariableCouldBeFinal: Local variable 'a' could be declared final
test/jdepend/framework/ExampleConcreteClass.java:37:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/ExampleConcreteClass.java:37:	ShortVariable: Avoid variables with short names like a
test/jdepend/framework/ExampleConcreteClass.java:38:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'b' (lines '38'-'39').
test/jdepend/framework/ExampleConcreteClass.java:38:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'b' (lines '38'-'39').
test/jdepend/framework/ExampleConcreteClass.java:38:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/ExampleConcreteClass.java:38:	LocalVariableCouldBeFinal: Local variable 'b' could be declared final
test/jdepend/framework/ExampleConcreteClass.java:38:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/ExampleConcreteClass.java:38:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/ExampleConcreteClass.java:41:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleConcreteClass.java:41:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleConcreteClass.java:41:	MissingOverride: The method 'd()' is missing an @Override annotation.
test/jdepend/framework/ExampleConcreteClass.java:41:	MissingOverride: The method 'd()' is missing an @Override annotation.
test/jdepend/framework/ExampleConcreteClass.java:41:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleConcreteClass.java:41:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleConcreteClass.java:42:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'files' (lines '42'-'44').
test/jdepend/framework/ExampleConcreteClass.java:42:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'files' (lines '42'-'44').
test/jdepend/framework/ExampleConcreteClass.java:42:	LocalVariableCouldBeFinal: Local variable 'files' could be declared final
test/jdepend/framework/ExampleConcreteClass.java:42:	LocalVariableCouldBeFinal: Local variable 'files' could be declared final
test/jdepend/framework/ExampleConcreteClass.java:42:	PrematureDeclaration: Avoid declaring a variable if it is unreferenced before a possible exit point.
test/jdepend/framework/ExampleConcreteClass.java:42:	PrematureDeclaration: Avoid declaring a variable if it is unreferenced before a possible exit point.
test/jdepend/framework/ExampleConcreteClass.java:46:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleConcreteClass.java:46:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleConcreteClass.java:46:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleConcreteClass.java:46:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleConcreteClass.java:46:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
test/jdepend/framework/ExampleConcreteClass.java:46:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
test/jdepend/framework/ExampleConcreteClass.java:47:	LocalVariableCouldBeFinal: Local variable 'strings' could be declared final
test/jdepend/framework/ExampleConcreteClass.java:47:	LocalVariableCouldBeFinal: Local variable 'strings' could be declared final
test/jdepend/framework/ExampleConcreteClass.java:47:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
test/jdepend/framework/ExampleConcreteClass.java:47:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
test/jdepend/framework/ExampleConcreteClass.java:47:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
test/jdepend/framework/ExampleConcreteClass.java:47:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
test/jdepend/framework/ExampleConcreteClass.java:48:	UnnecessaryLocalBeforeReturn: Consider simply returning the value vs storing it in local variable 'strings'
test/jdepend/framework/ExampleConcreteClass.java:48:	UnnecessaryLocalBeforeReturn: Consider simply returning the value vs storing it in local variable 'strings'
test/jdepend/framework/ExampleConcreteClass.java:51:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'org.junit.Test' due to existing import 'org.junit.Test'
test/jdepend/framework/ExampleConcreteClass.java:51:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'org.junit.Test' due to existing import 'org.junit.Test'
test/jdepend/framework/ExampleConcreteClass.java:59:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'org.junit.Ignore' due to existing import 'org.junit.Ignore'
test/jdepend/framework/ExampleConcreteClass.java:59:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'org.junit.Ignore' due to existing import 'org.junit.Ignore'
test/jdepend/framework/ExampleConcreteClass.java:60:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleConcreteClass.java:60:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleConcreteClass.java:60:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleConcreteClass.java:60:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleConcreteClass.java:60:	UncommentedEmptyMethodBody: Document empty method body
test/jdepend/framework/ExampleConcreteClass.java:60:	UncommentedEmptyMethodBody: Document empty method body
test/jdepend/framework/ExampleConcreteClass.java:63:	AtLeastOneConstructor: Each class should declare at least one constructor
test/jdepend/framework/ExampleConcreteClass.java:63:	AtLeastOneConstructor: Each class should declare at least one constructor
test/jdepend/framework/ExampleConcreteClass.java:63:	CommentRequired: Header comments are required
test/jdepend/framework/ExampleConcreteClass.java:63:	CommentRequired: Header comments are required
test/jdepend/framework/ExampleConcreteClass.java:67:	AtLeastOneConstructor: Each class should declare at least one constructor
test/jdepend/framework/ExampleConcreteClass.java:67:	AtLeastOneConstructor: Each class should declare at least one constructor
test/jdepend/framework/ExampleConcreteClass.java:67:	CommentRequired: Header comments are required
test/jdepend/framework/ExampleConcreteClass.java:67:	CommentRequired: Header comments are required
test/jdepend/framework/ExampleConcreteClass.java:67:	TestClassWithoutTestCases: This class name ends with Test but contains no test cases
test/jdepend/framework/ExampleConcreteClass.java:67:	TestClassWithoutTestCases: This class name ends with Test but contains no test cases
test/jdepend/framework/ExampleInterface.java:12:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleInterface.java:12:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleInterface.java:12:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleInterface.java:12:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleInterface.java:12:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'a': the method is declared in an interface type
test/jdepend/framework/ExampleInterface.java:12:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'a': the method is declared in an interface type
test/jdepend/framework/ExampleInterface.java:14:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleInterface.java:14:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleInterface.java:14:	LooseCoupling: Avoid using implementation types like 'java.util.Vector'; use the interface instead
test/jdepend/framework/ExampleInterface.java:14:	LooseCoupling: Avoid using implementation types like 'java.util.Vector'; use the interface instead
test/jdepend/framework/ExampleInterface.java:14:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleInterface.java:14:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleInterface.java:14:	ShortVariable: Avoid variables with short names like nf
test/jdepend/framework/ExampleInterface.java:14:	ShortVariable: Avoid variables with short names like nf
test/jdepend/framework/ExampleInterface.java:14:	ShortVariable: Avoid variables with short names like s
test/jdepend/framework/ExampleInterface.java:14:	ShortVariable: Avoid variables with short names like s
test/jdepend/framework/ExampleInterface.java:14:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'b': the method is declared in an interface type
test/jdepend/framework/ExampleInterface.java:14:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'b': the method is declared in an interface type
test/jdepend/framework/ExampleInterface.java:16:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleInterface.java:16:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleInterface.java:16:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleInterface.java:16:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleInterface.java:16:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/ExampleInterface.java:16:	ShortVariable: Avoid variables with short names like b
test/jdepend/framework/ExampleInterface.java:16:	ShortVariable: Avoid variables with short names like bd
test/jdepend/framework/ExampleInterface.java:16:	ShortVariable: Avoid variables with short names like bd
test/jdepend/framework/ExampleInterface.java:16:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'c': the method is declared in an interface type
test/jdepend/framework/ExampleInterface.java:16:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'c': the method is declared in an interface type
test/jdepend/framework/ExampleInterface.java:18:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleInterface.java:18:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleInterface.java:18:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleInterface.java:18:	ShortMethodName: Avoid using short method names
test/jdepend/framework/ExampleInterface.java:18:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'd': the method is declared in an interface type
test/jdepend/framework/ExampleInterface.java:18:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'd': the method is declared in an interface type
test/jdepend/framework/ExampleTest.java:10:	CommentSize: Comment is too large: Too many lines
test/jdepend/framework/ExampleTest.java:10:	CommentSize: Comment is too large: Too many lines
test/jdepend/framework/ExampleTest.java:24:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/ExampleTest.java:24:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/ExampleTest.java:24:	CommentRequired: Field comments are required
test/jdepend/framework/ExampleTest.java:24:	CommentRequired: Field comments are required
test/jdepend/framework/ExampleTest.java:26:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/ExampleTest.java:26:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/ExampleTest.java:26:	CommentRequired: Field comments are required
test/jdepend/framework/ExampleTest.java:26:	CommentRequired: Field comments are required
test/jdepend/framework/ExampleTest.java:26:	LongVariable: Avoid excessively long variable names like jdependHomeDirectory
test/jdepend/framework/ExampleTest.java:26:	LongVariable: Avoid excessively long variable names like jdependHomeDirectory
test/jdepend/framework/ExampleTest.java:28:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleTest.java:28:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleTest.java:28:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/ExampleTest.java:28:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/ExampleTest.java:32:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/ExampleTest.java:32:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/ExampleTest.java:32:	JUnit4TestShouldUseBeforeAnnotation: JUnit 4 tests that set up tests should use the @Before annotation, JUnit5 tests should use @BeforeEach or @BeforeAll
test/jdepend/framework/ExampleTest.java:32:	JUnit4TestShouldUseBeforeAnnotation: JUnit 4 tests that set up tests should use the @Before annotation, JUnit5 tests should use @BeforeEach or @BeforeAll
test/jdepend/framework/ExampleTest.java:32:	MissingOverride: The method 'setUp()' is missing an @Override annotation.
test/jdepend/framework/ExampleTest.java:32:	MissingOverride: The method 'setUp()' is missing an @Override annotation.
test/jdepend/framework/ExampleTest.java:39:	LocalVariableCouldBeFinal: Local variable 'filter' could be declared final
test/jdepend/framework/ExampleTest.java:39:	LocalVariableCouldBeFinal: Local variable 'filter' could be declared final
test/jdepend/framework/ExampleTest.java:44:	LocalVariableCouldBeFinal: Local variable 'classesDir' could be declared final
test/jdepend/framework/ExampleTest.java:44:	LocalVariableCouldBeFinal: Local variable 'classesDir' could be declared final
test/jdepend/framework/ExampleTest.java:54:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ExampleTest.java:54:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ExampleTest.java:56:	LocalVariableCouldBeFinal: Local variable 'ideal' could be declared final
test/jdepend/framework/ExampleTest.java:56:	LocalVariableCouldBeFinal: Local variable 'ideal' could be declared final
test/jdepend/framework/ExampleTest.java:57:	LocalVariableCouldBeFinal: Local variable 'tolerance' could be declared final
test/jdepend/framework/ExampleTest.java:57:	LocalVariableCouldBeFinal: Local variable 'tolerance' could be declared final
test/jdepend/framework/ExampleTest.java:61:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/ExampleTest.java:61:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/ExampleTest.java:61:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/ExampleTest.java:61:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/ExampleTest.java:63:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:63:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:64:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:64:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:71:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ExampleTest.java:71:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ExampleTest.java:75:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/ExampleTest.java:75:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/ExampleTest.java:75:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/ExampleTest.java:75:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/ExampleTest.java:77:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:77:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:77:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/ExampleTest.java:77:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/ExampleTest.java:78:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:78:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:85:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ExampleTest.java:85:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ExampleTest.java:87:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'ideal' (lines '87'-'97').
test/jdepend/framework/ExampleTest.java:87:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'ideal' (lines '87'-'97').
test/jdepend/framework/ExampleTest.java:87:	LocalVariableCouldBeFinal: Local variable 'ideal' could be declared final
test/jdepend/framework/ExampleTest.java:87:	LocalVariableCouldBeFinal: Local variable 'ideal' could be declared final
test/jdepend/framework/ExampleTest.java:88:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'tolerance' (lines '88'-'97').
test/jdepend/framework/ExampleTest.java:88:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'tolerance' (lines '88'-'97').
test/jdepend/framework/ExampleTest.java:88:	LocalVariableCouldBeFinal: Local variable 'tolerance' could be declared final
test/jdepend/framework/ExampleTest.java:88:	LocalVariableCouldBeFinal: Local variable 'tolerance' could be declared final
test/jdepend/framework/ExampleTest.java:90:	LocalVariableCouldBeFinal: Local variable 'packages' could be declared final
test/jdepend/framework/ExampleTest.java:90:	LocalVariableCouldBeFinal: Local variable 'packages' could be declared final
test/jdepend/framework/ExampleTest.java:92:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
test/jdepend/framework/ExampleTest.java:92:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
test/jdepend/framework/ExampleTest.java:92:	LocalVariableCouldBeFinal: Local variable 'iter' could be declared final
test/jdepend/framework/ExampleTest.java:92:	LocalVariableCouldBeFinal: Local variable 'iter' could be declared final
test/jdepend/framework/ExampleTest.java:93:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/ExampleTest.java:93:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/ExampleTest.java:93:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/ExampleTest.java:93:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/ExampleTest.java:94:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:94:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:95:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:95:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:103:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ExampleTest.java:103:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ExampleTest.java:105:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'packages' (lines '105'-'108').
test/jdepend/framework/ExampleTest.java:105:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'packages' (lines '105'-'108').
test/jdepend/framework/ExampleTest.java:105:	LocalVariableCouldBeFinal: Local variable 'packages' could be declared final
test/jdepend/framework/ExampleTest.java:105:	LocalVariableCouldBeFinal: Local variable 'packages' could be declared final
test/jdepend/framework/ExampleTest.java:105:	UnusedLocalVariable: Avoid unused local variables such as 'packages'.
test/jdepend/framework/ExampleTest.java:105:	UnusedLocalVariable: Avoid unused local variables such as 'packages'.
test/jdepend/framework/ExampleTest.java:107:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/ExampleTest.java:107:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/ExampleTest.java:117:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ExampleTest.java:117:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/ExampleTest.java:119:	LocalVariableCouldBeFinal: Local variable 'constraint' could be declared final
test/jdepend/framework/ExampleTest.java:119:	LocalVariableCouldBeFinal: Local variable 'constraint' could be declared final
test/jdepend/framework/ExampleTest.java:121:	LocalVariableCouldBeFinal: Local variable 'junitframework' could be declared final
test/jdepend/framework/ExampleTest.java:121:	LocalVariableCouldBeFinal: Local variable 'junitframework' could be declared final
test/jdepend/framework/ExampleTest.java:122:	LocalVariableCouldBeFinal: Local variable 'junitui' could be declared final
test/jdepend/framework/ExampleTest.java:122:	LocalVariableCouldBeFinal: Local variable 'junitui' could be declared final
test/jdepend/framework/ExampleTest.java:123:	LocalVariableCouldBeFinal: Local variable 'framework' could be declared final
test/jdepend/framework/ExampleTest.java:123:	LocalVariableCouldBeFinal: Local variable 'framework' could be declared final
test/jdepend/framework/ExampleTest.java:124:	LocalVariableCouldBeFinal: Local variable 'text' could be declared final
test/jdepend/framework/ExampleTest.java:124:	LocalVariableCouldBeFinal: Local variable 'text' could be declared final
test/jdepend/framework/ExampleTest.java:125:	LocalVariableCouldBeFinal: Local variable 'xml' could be declared final
test/jdepend/framework/ExampleTest.java:125:	LocalVariableCouldBeFinal: Local variable 'xml' could be declared final
test/jdepend/framework/ExampleTest.java:126:	LocalVariableCouldBeFinal: Local variable 'swing' could be declared final
test/jdepend/framework/ExampleTest.java:126:	LocalVariableCouldBeFinal: Local variable 'swing' could be declared final
test/jdepend/framework/ExampleTest.java:127:	LocalVariableCouldBeFinal: Local variable 'orgjunitrunners' could be declared final
test/jdepend/framework/ExampleTest.java:127:	LocalVariableCouldBeFinal: Local variable 'orgjunitrunners' could be declared final
test/jdepend/framework/ExampleTest.java:128:	LocalVariableCouldBeFinal: Local variable 'jdependframeworkp2' could be declared final
test/jdepend/framework/ExampleTest.java:128:	LocalVariableCouldBeFinal: Local variable 'jdependframeworkp2' could be declared final
test/jdepend/framework/ExampleTest.java:128:	LongVariable: Avoid excessively long variable names like jdependframeworkp2
test/jdepend/framework/ExampleTest.java:128:	LongVariable: Avoid excessively long variable names like jdependframeworkp2
test/jdepend/framework/ExampleTest.java:129:	LocalVariableCouldBeFinal: Local variable 'jdependframeworkp3' could be declared final
test/jdepend/framework/ExampleTest.java:129:	LocalVariableCouldBeFinal: Local variable 'jdependframeworkp3' could be declared final
test/jdepend/framework/ExampleTest.java:129:	LongVariable: Avoid excessively long variable names like jdependframeworkp3
test/jdepend/framework/ExampleTest.java:129:	LongVariable: Avoid excessively long variable names like jdependframeworkp3
test/jdepend/framework/ExampleTest.java:130:	LocalVariableCouldBeFinal: Local variable 'jdependframeworkp1' could be declared final
test/jdepend/framework/ExampleTest.java:130:	LocalVariableCouldBeFinal: Local variable 'jdependframeworkp1' could be declared final
test/jdepend/framework/ExampleTest.java:130:	LongVariable: Avoid excessively long variable names like jdependframeworkp1
test/jdepend/framework/ExampleTest.java:130:	LongVariable: Avoid excessively long variable names like jdependframeworkp1
test/jdepend/framework/ExampleTest.java:131:	LocalVariableCouldBeFinal: Local variable 'orgjunit' could be declared final
test/jdepend/framework/ExampleTest.java:131:	LocalVariableCouldBeFinal: Local variable 'orgjunit' could be declared final
test/jdepend/framework/ExampleTest.java:133:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:133:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:134:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:134:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:135:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:135:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:136:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:136:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:137:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:137:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:138:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:138:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:139:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:139:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:140:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:140:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:141:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:141:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:142:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:142:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:143:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:143:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/ExampleTest.java:147:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/ExampleTest.java:147:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/ExampleTest.java:151:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleTest.java:151:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ExampleTest.java:151:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
test/jdepend/framework/ExampleTest.java:151:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
test/jdepend/framework/ExampleTest.java:152:	LawOfDemeter: Potential violation of Law of Demeter (static property access)
test/jdepend/framework/ExampleTest.java:152:	LawOfDemeter: Potential violation of Law of Demeter (static property access)
test/jdepend/framework/FileManagerTest.java:11:	TooManyMethods: This class has too many methods, consider refactoring it.
test/jdepend/framework/FileManagerTest.java:11:	TooManyMethods: This class has too many methods, consider refactoring it.
test/jdepend/framework/FileManagerTest.java:13:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/FileManagerTest.java:13:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/FileManagerTest.java:13:	CommentRequired: Field comments are required
test/jdepend/framework/FileManagerTest.java:13:	CommentRequired: Field comments are required
test/jdepend/framework/FileManagerTest.java:15:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FileManagerTest.java:15:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FileManagerTest.java:15:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/FileManagerTest.java:15:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/FileManagerTest.java:19:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/FileManagerTest.java:19:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/FileManagerTest.java:19:	JUnit4TestShouldUseBeforeAnnotation: JUnit 4 tests that set up tests should use the @Before annotation, JUnit5 tests should use @BeforeEach or @BeforeAll
test/jdepend/framework/FileManagerTest.java:19:	JUnit4TestShouldUseBeforeAnnotation: JUnit 4 tests that set up tests should use the @Before annotation, JUnit5 tests should use @BeforeEach or @BeforeAll
test/jdepend/framework/FileManagerTest.java:19:	MissingOverride: The method 'setUp()' is missing an @Override annotation.
test/jdepend/framework/FileManagerTest.java:19:	MissingOverride: The method 'setUp()' is missing an @Override annotation.
test/jdepend/framework/FileManagerTest.java:25:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/FileManagerTest.java:25:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/FileManagerTest.java:25:	JUnit4TestShouldUseAfterAnnotation: JUnit 4 tests that clean up tests should use the @After annotation, JUnit5 tests should use @AfterEach or @AfterAll
test/jdepend/framework/FileManagerTest.java:25:	JUnit4TestShouldUseAfterAnnotation: JUnit 4 tests that clean up tests should use the @After annotation, JUnit5 tests should use @AfterEach or @AfterAll
test/jdepend/framework/FileManagerTest.java:25:	MissingOverride: The method 'tearDown()' is missing an @Override annotation.
test/jdepend/framework/FileManagerTest.java:25:	MissingOverride: The method 'tearDown()' is missing an @Override annotation.
test/jdepend/framework/FileManagerTest.java:25:	UselessOverridingMethod: Overriding method merely calls super
test/jdepend/framework/FileManagerTest.java:25:	UselessOverridingMethod: Overriding method merely calls super
test/jdepend/framework/FileManagerTest.java:29:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FileManagerTest.java:29:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FileManagerTest.java:29:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FileManagerTest.java:29:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FileManagerTest.java:30:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FileManagerTest.java:30:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FileManagerTest.java:30:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FileManagerTest.java:30:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FileManagerTest.java:30:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FileManagerTest.java:30:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FileManagerTest.java:33:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FileManagerTest.java:33:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FileManagerTest.java:33:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FileManagerTest.java:33:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FileManagerTest.java:35:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FileManagerTest.java:35:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FileManagerTest.java:35:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FileManagerTest.java:35:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FileManagerTest.java:35:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FileManagerTest.java:35:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FileManagerTest.java:38:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FileManagerTest.java:38:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FileManagerTest.java:38:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FileManagerTest.java:38:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FileManagerTest.java:46:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FileManagerTest.java:46:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FileManagerTest.java:46:	UnnecessaryBooleanAssertion: assertTrue(true) or similar statements are unnecessary
test/jdepend/framework/FileManagerTest.java:46:	UnnecessaryBooleanAssertion: assertTrue(true) or similar statements are unnecessary
test/jdepend/framework/FileManagerTest.java:50:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FileManagerTest.java:50:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FileManagerTest.java:50:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FileManagerTest.java:50:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FileManagerTest.java:52:	LocalVariableCouldBeFinal: Local variable 'file' could be declared final
test/jdepend/framework/FileManagerTest.java:52:	LocalVariableCouldBeFinal: Local variable 'file' could be declared final
test/jdepend/framework/FileManagerTest.java:60:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FileManagerTest.java:60:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FileManagerTest.java:60:	UnnecessaryBooleanAssertion: assertTrue(true) or similar statements are unnecessary
test/jdepend/framework/FileManagerTest.java:60:	UnnecessaryBooleanAssertion: assertTrue(true) or similar statements are unnecessary
test/jdepend/framework/FileManagerTest.java:64:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FileManagerTest.java:64:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FileManagerTest.java:64:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FileManagerTest.java:64:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FileManagerTest.java:66:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/FileManagerTest.java:66:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/FileManagerTest.java:66:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/FileManagerTest.java:66:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/FileManagerTest.java:68:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FileManagerTest.java:68:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FileManagerTest.java:68:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/FileManagerTest.java:68:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/FileManagerTest.java:71:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FileManagerTest.java:71:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FileManagerTest.java:71:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FileManagerTest.java:71:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FileManagerTest.java:72:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/FileManagerTest.java:72:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/FileManagerTest.java:72:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/FileManagerTest.java:72:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/FileManagerTest.java:73:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FileManagerTest.java:73:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FileManagerTest.java:73:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/FileManagerTest.java:73:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/FileManagerTest.java:76:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FileManagerTest.java:76:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FileManagerTest.java:76:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FileManagerTest.java:76:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FileManagerTest.java:77:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/FileManagerTest.java:77:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/FileManagerTest.java:77:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/FileManagerTest.java:77:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/FileManagerTest.java:78:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FileManagerTest.java:78:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FileManagerTest.java:78:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/FileManagerTest.java:78:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
test/jdepend/framework/FileManagerTest.java:81:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FileManagerTest.java:81:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FileManagerTest.java:81:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FileManagerTest.java:81:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FileManagerTest.java:81:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
test/jdepend/framework/FileManagerTest.java:81:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
test/jdepend/framework/FileManagerTest.java:82:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/FileManagerTest.java:82:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/FileManagerTest.java:82:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/FileManagerTest.java:82:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/FileManagerTest.java:88:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FileManagerTest.java:88:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FileManagerTest.java:88:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FileManagerTest.java:88:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FileManagerTest.java:88:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
test/jdepend/framework/FileManagerTest.java:88:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
test/jdepend/framework/FileManagerTest.java:89:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/FileManagerTest.java:89:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/FileManagerTest.java:89:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/FileManagerTest.java:89:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/FileManagerTest.java:95:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FileManagerTest.java:95:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FileManagerTest.java:95:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FileManagerTest.java:95:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FileManagerTest.java:95:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
test/jdepend/framework/FileManagerTest.java:95:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
test/jdepend/framework/FileManagerTest.java:96:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/FileManagerTest.java:96:	LocalVariableCouldBeFinal: Local variable 'f' could be declared final
test/jdepend/framework/FileManagerTest.java:96:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/FileManagerTest.java:96:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/FilterTest.java:15:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FilterTest.java:15:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FilterTest.java:15:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/FilterTest.java:15:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/FilterTest.java:19:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/FilterTest.java:19:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/FilterTest.java:19:	JUnit4TestShouldUseBeforeAnnotation: JUnit 4 tests that set up tests should use the @Before annotation, JUnit5 tests should use @BeforeEach or @BeforeAll
test/jdepend/framework/FilterTest.java:19:	JUnit4TestShouldUseBeforeAnnotation: JUnit 4 tests that set up tests should use the @Before annotation, JUnit5 tests should use @BeforeEach or @BeforeAll
test/jdepend/framework/FilterTest.java:19:	MissingOverride: The method 'setUp()' is missing an @Override annotation.
test/jdepend/framework/FilterTest.java:19:	MissingOverride: The method 'setUp()' is missing an @Override annotation.
test/jdepend/framework/FilterTest.java:24:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/FilterTest.java:24:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/FilterTest.java:24:	JUnit4TestShouldUseAfterAnnotation: JUnit 4 tests that clean up tests should use the @After annotation, JUnit5 tests should use @AfterEach or @AfterAll
test/jdepend/framework/FilterTest.java:24:	JUnit4TestShouldUseAfterAnnotation: JUnit 4 tests that clean up tests should use the @After annotation, JUnit5 tests should use @AfterEach or @AfterAll
test/jdepend/framework/FilterTest.java:24:	MissingOverride: The method 'tearDown()' is missing an @Override annotation.
test/jdepend/framework/FilterTest.java:24:	MissingOverride: The method 'tearDown()' is missing an @Override annotation.
test/jdepend/framework/FilterTest.java:24:	UselessOverridingMethod: Overriding method merely calls super
test/jdepend/framework/FilterTest.java:24:	UselessOverridingMethod: Overriding method merely calls super
test/jdepend/framework/FilterTest.java:28:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FilterTest.java:28:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FilterTest.java:28:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FilterTest.java:28:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FilterTest.java:28:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/FilterTest.java:28:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/FilterTest.java:29:	LocalVariableCouldBeFinal: Local variable 'filter' could be declared final
test/jdepend/framework/FilterTest.java:29:	LocalVariableCouldBeFinal: Local variable 'filter' could be declared final
test/jdepend/framework/FilterTest.java:30:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FilterTest.java:30:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FilterTest.java:30:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FilterTest.java:30:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FilterTest.java:30:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FilterTest.java:30:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FilterTest.java:34:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FilterTest.java:34:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FilterTest.java:34:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FilterTest.java:34:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FilterTest.java:34:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/FilterTest.java:34:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/FilterTest.java:36:	LocalVariableCouldBeFinal: Local variable 'filterFile' could be declared final
test/jdepend/framework/FilterTest.java:36:	LocalVariableCouldBeFinal: Local variable 'filterFile' could be declared final
test/jdepend/framework/FilterTest.java:38:	LocalVariableCouldBeFinal: Local variable 'filter' could be declared final
test/jdepend/framework/FilterTest.java:38:	LocalVariableCouldBeFinal: Local variable 'filter' could be declared final
test/jdepend/framework/FilterTest.java:39:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FilterTest.java:39:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FilterTest.java:39:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FilterTest.java:39:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FilterTest.java:39:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FilterTest.java:39:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FilterTest.java:43:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FilterTest.java:43:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FilterTest.java:43:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FilterTest.java:43:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FilterTest.java:43:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/FilterTest.java:43:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/FilterTest.java:45:	LocalVariableCouldBeFinal: Local variable 'filters' could be declared final
test/jdepend/framework/FilterTest.java:45:	LocalVariableCouldBeFinal: Local variable 'filters' could be declared final
test/jdepend/framework/FilterTest.java:52:	LocalVariableCouldBeFinal: Local variable 'filter' could be declared final
test/jdepend/framework/FilterTest.java:52:	LocalVariableCouldBeFinal: Local variable 'filter' could be declared final
test/jdepend/framework/FilterTest.java:53:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FilterTest.java:53:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FilterTest.java:53:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FilterTest.java:53:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FilterTest.java:53:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FilterTest.java:53:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FilterTest.java:57:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FilterTest.java:57:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/FilterTest.java:57:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FilterTest.java:57:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/FilterTest.java:58:	LocalVariableCouldBeFinal: Local variable 'filters' could be declared final
test/jdepend/framework/FilterTest.java:58:	LocalVariableCouldBeFinal: Local variable 'filters' could be declared final
test/jdepend/framework/FilterTest.java:60:	LocalVariableCouldBeFinal: Local variable 'filter' could be declared final
test/jdepend/framework/FilterTest.java:60:	LocalVariableCouldBeFinal: Local variable 'filter' could be declared final
test/jdepend/framework/FilterTest.java:61:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FilterTest.java:61:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FilterTest.java:61:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FilterTest.java:61:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FilterTest.java:61:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FilterTest.java:61:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
test/jdepend/framework/FilterTest.java:64:	MethodArgumentCouldBeFinal: Parameter 'filter' is not assigned and could be declared final
test/jdepend/framework/FilterTest.java:64:	MethodArgumentCouldBeFinal: Parameter 'filter' is not assigned and could be declared final
test/jdepend/framework/FilterTest.java:65:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FilterTest.java:65:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FilterTest.java:66:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FilterTest.java:66:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FilterTest.java:67:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FilterTest.java:67:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FilterTest.java:68:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FilterTest.java:68:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FilterTest.java:69:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/FilterTest.java:69:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JDependTestCase.java:3:	UnusedImports: Avoid unused imports such as 'java.io'
test/jdepend/framework/JDependTestCase.java:3:	UnusedImports: Avoid unused imports such as 'java.io'
test/jdepend/framework/JDependTestCase.java:12:	DataClass: The class 'JDependTestCase' is suspected to be a Data Class (WOC=0.000%, NOPA=0, NOAM=5, WMC=9)
test/jdepend/framework/JDependTestCase.java:12:	DataClass: The class 'JDependTestCase' is suspected to be a Data Class (WOC=0.000%, NOPA=0, NOAM=5, WMC=9)
test/jdepend/framework/JDependTestCase.java:12:	TestClassWithoutTestCases: This class name ends with Test but contains no test cases
test/jdepend/framework/JDependTestCase.java:12:	TestClassWithoutTestCases: This class name ends with Test but contains no test cases
test/jdepend/framework/JDependTestCase.java:14:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/JDependTestCase.java:14:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/JDependTestCase.java:14:	CommentRequired: Field comments are required
test/jdepend/framework/JDependTestCase.java:14:	CommentRequired: Field comments are required
test/jdepend/framework/JDependTestCase.java:15:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/JDependTestCase.java:15:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/JDependTestCase.java:15:	CommentRequired: Field comments are required
test/jdepend/framework/JDependTestCase.java:15:	CommentRequired: Field comments are required
test/jdepend/framework/JDependTestCase.java:16:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/JDependTestCase.java:16:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/JDependTestCase.java:16:	CommentRequired: Field comments are required
test/jdepend/framework/JDependTestCase.java:16:	CommentRequired: Field comments are required
test/jdepend/framework/JDependTestCase.java:17:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/JDependTestCase.java:17:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/JDependTestCase.java:17:	CommentRequired: Field comments are required
test/jdepend/framework/JDependTestCase.java:17:	CommentRequired: Field comments are required
test/jdepend/framework/JDependTestCase.java:18:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/JDependTestCase.java:18:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/JDependTestCase.java:18:	CommentRequired: Field comments are required
test/jdepend/framework/JDependTestCase.java:18:	CommentRequired: Field comments are required
test/jdepend/framework/JDependTestCase.java:19:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/JDependTestCase.java:19:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/JDependTestCase.java:19:	CommentRequired: Field comments are required
test/jdepend/framework/JDependTestCase.java:19:	CommentRequired: Field comments are required
test/jdepend/framework/JDependTestCase.java:22:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/JDependTestCase.java:22:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/JDependTestCase.java:22:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/JDependTestCase.java:22:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/JDependTestCase.java:26:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/JDependTestCase.java:26:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/JDependTestCase.java:26:	JUnit4TestShouldUseBeforeAnnotation: JUnit 4 tests that set up tests should use the @Before annotation, JUnit5 tests should use @BeforeEach or @BeforeAll
test/jdepend/framework/JDependTestCase.java:26:	JUnit4TestShouldUseBeforeAnnotation: JUnit 4 tests that set up tests should use the @Before annotation, JUnit5 tests should use @BeforeEach or @BeforeAll
test/jdepend/framework/JDependTestCase.java:26:	MissingOverride: The method 'setUp()' is missing an @Override annotation.
test/jdepend/framework/JDependTestCase.java:26:	MissingOverride: The method 'setUp()' is missing an @Override annotation.
test/jdepend/framework/JDependTestCase.java:41:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/JDependTestCase.java:41:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/JDependTestCase.java:41:	JUnit4TestShouldUseAfterAnnotation: JUnit 4 tests that clean up tests should use the @After annotation, JUnit5 tests should use @AfterEach or @AfterAll
test/jdepend/framework/JDependTestCase.java:41:	JUnit4TestShouldUseAfterAnnotation: JUnit 4 tests that clean up tests should use the @After annotation, JUnit5 tests should use @AfterEach or @AfterAll
test/jdepend/framework/JDependTestCase.java:41:	MissingOverride: The method 'tearDown()' is missing an @Override annotation.
test/jdepend/framework/JDependTestCase.java:41:	MissingOverride: The method 'tearDown()' is missing an @Override annotation.
test/jdepend/framework/JarFileParserTest.java:14:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/JarFileParserTest.java:14:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/JarFileParserTest.java:14:	CommentRequired: Field comments are required
test/jdepend/framework/JarFileParserTest.java:14:	CommentRequired: Field comments are required
test/jdepend/framework/JarFileParserTest.java:15:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/JarFileParserTest.java:15:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/JarFileParserTest.java:15:	CommentRequired: Field comments are required
test/jdepend/framework/JarFileParserTest.java:15:	CommentRequired: Field comments are required
test/jdepend/framework/JarFileParserTest.java:17:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/JarFileParserTest.java:17:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/JarFileParserTest.java:17:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/JarFileParserTest.java:17:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/JarFileParserTest.java:21:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/JarFileParserTest.java:21:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/JarFileParserTest.java:21:	JUnit4TestShouldUseBeforeAnnotation: JUnit 4 tests that set up tests should use the @Before annotation, JUnit5 tests should use @BeforeEach or @BeforeAll
test/jdepend/framework/JarFileParserTest.java:21:	JUnit4TestShouldUseBeforeAnnotation: JUnit 4 tests that set up tests should use the @Before annotation, JUnit5 tests should use @BeforeEach or @BeforeAll
test/jdepend/framework/JarFileParserTest.java:21:	MissingOverride: The method 'setUp()' is missing an @Override annotation.
test/jdepend/framework/JarFileParserTest.java:21:	MissingOverride: The method 'setUp()' is missing an @Override annotation.
test/jdepend/framework/JarFileParserTest.java:28:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/JarFileParserTest.java:28:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/JarFileParserTest.java:28:	JUnit4TestShouldUseAfterAnnotation: JUnit 4 tests that clean up tests should use the @After annotation, JUnit5 tests should use @AfterEach or @AfterAll
test/jdepend/framework/JarFileParserTest.java:28:	JUnit4TestShouldUseAfterAnnotation: JUnit 4 tests that clean up tests should use the @After annotation, JUnit5 tests should use @AfterEach or @AfterAll
test/jdepend/framework/JarFileParserTest.java:28:	MissingOverride: The method 'tearDown()' is missing an @Override annotation.
test/jdepend/framework/JarFileParserTest.java:28:	MissingOverride: The method 'tearDown()' is missing an @Override annotation.
test/jdepend/framework/JarFileParserTest.java:28:	UselessOverridingMethod: Overriding method merely calls super
test/jdepend/framework/JarFileParserTest.java:28:	UselessOverridingMethod: Overriding method merely calls super
test/jdepend/framework/JarFileParserTest.java:32:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/JarFileParserTest.java:32:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/JarFileParserTest.java:32:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/JarFileParserTest.java:32:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/JarFileParserTest.java:34:	LocalVariableCouldBeFinal: Local variable 'builder' could be declared final
test/jdepend/framework/JarFileParserTest.java:34:	LocalVariableCouldBeFinal: Local variable 'builder' could be declared final
test/jdepend/framework/JarFileParserTest.java:35:	LocalVariableCouldBeFinal: Local variable 'bogusFile' could be declared final
test/jdepend/framework/JarFileParserTest.java:35:	LocalVariableCouldBeFinal: Local variable 'bogusFile' could be declared final
test/jdepend/framework/JarFileParserTest.java:43:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JarFileParserTest.java:43:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JarFileParserTest.java:43:	UnnecessaryBooleanAssertion: assertTrue(true) or similar statements are unnecessary
test/jdepend/framework/JarFileParserTest.java:43:	UnnecessaryBooleanAssertion: assertTrue(true) or similar statements are unnecessary
test/jdepend/framework/JarFileParserTest.java:47:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/JarFileParserTest.java:47:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/JarFileParserTest.java:47:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/JarFileParserTest.java:47:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/JarFileParserTest.java:49:	LocalVariableCouldBeFinal: Local variable 'builder' could be declared final
test/jdepend/framework/JarFileParserTest.java:49:	LocalVariableCouldBeFinal: Local variable 'builder' could be declared final
test/jdepend/framework/JarFileParserTest.java:50:	LocalVariableCouldBeFinal: Local variable 'bogusFile' could be declared final
test/jdepend/framework/JarFileParserTest.java:50:	LocalVariableCouldBeFinal: Local variable 'bogusFile' could be declared final
test/jdepend/framework/JarFileParserTest.java:58:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JarFileParserTest.java:58:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JarFileParserTest.java:58:	UnnecessaryBooleanAssertion: assertTrue(true) or similar statements are unnecessary
test/jdepend/framework/JarFileParserTest.java:58:	UnnecessaryBooleanAssertion: assertTrue(true) or similar statements are unnecessary
test/jdepend/framework/JarFileParserTest.java:62:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/JarFileParserTest.java:62:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/JarFileParserTest.java:62:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/JarFileParserTest.java:62:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/JarFileParserTest.java:62:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/JarFileParserTest.java:62:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/JarFileParserTest.java:64:	LocalVariableCouldBeFinal: Local variable 'builder' could be declared final
test/jdepend/framework/JarFileParserTest.java:64:	LocalVariableCouldBeFinal: Local variable 'builder' could be declared final
test/jdepend/framework/JarFileParserTest.java:66:	LocalVariableCouldBeFinal: Local variable 'classes' could be declared final
test/jdepend/framework/JarFileParserTest.java:66:	LocalVariableCouldBeFinal: Local variable 'classes' could be declared final
test/jdepend/framework/JarFileParserTest.java:67:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JarFileParserTest.java:67:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JarFileParserTest.java:67:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/JarFileParserTest.java:67:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/JarFileParserTest.java:73:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/JarFileParserTest.java:73:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/JarFileParserTest.java:73:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/JarFileParserTest.java:73:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/JarFileParserTest.java:73:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/JarFileParserTest.java:73:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/JarFileParserTest.java:75:	LocalVariableCouldBeFinal: Local variable 'fm' could be declared final
test/jdepend/framework/JarFileParserTest.java:75:	LocalVariableCouldBeFinal: Local variable 'fm' could be declared final
test/jdepend/framework/JarFileParserTest.java:75:	ShortVariable: Avoid variables with short names like fm
test/jdepend/framework/JarFileParserTest.java:75:	ShortVariable: Avoid variables with short names like fm
test/jdepend/framework/JarFileParserTest.java:78:	LocalVariableCouldBeFinal: Local variable 'builder' could be declared final
test/jdepend/framework/JarFileParserTest.java:78:	LocalVariableCouldBeFinal: Local variable 'builder' could be declared final
test/jdepend/framework/JarFileParserTest.java:80:	LocalVariableCouldBeFinal: Local variable 'classes' could be declared final
test/jdepend/framework/JarFileParserTest.java:80:	LocalVariableCouldBeFinal: Local variable 'classes' could be declared final
test/jdepend/framework/JarFileParserTest.java:81:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JarFileParserTest.java:81:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JarFileParserTest.java:81:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/JarFileParserTest.java:81:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/JarFileParserTest.java:86:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/JarFileParserTest.java:86:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/JarFileParserTest.java:86:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/JarFileParserTest.java:86:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/JarFileParserTest.java:86:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/JarFileParserTest.java:86:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/JarFileParserTest.java:88:	LocalVariableCouldBeFinal: Local variable 'builder' could be declared final
test/jdepend/framework/JarFileParserTest.java:88:	LocalVariableCouldBeFinal: Local variable 'builder' could be declared final
test/jdepend/framework/JarFileParserTest.java:90:	LocalVariableCouldBeFinal: Local variable 'classes' could be declared final
test/jdepend/framework/JarFileParserTest.java:90:	LocalVariableCouldBeFinal: Local variable 'classes' could be declared final
test/jdepend/framework/JarFileParserTest.java:91:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JarFileParserTest.java:91:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JarFileParserTest.java:91:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/JarFileParserTest.java:91:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/JarFileParserTest.java:97:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/JarFileParserTest.java:97:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/JarFileParserTest.java:97:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/JarFileParserTest.java:97:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/JarFileParserTest.java:97:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/JarFileParserTest.java:97:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/JarFileParserTest.java:99:	LocalVariableCouldBeFinal: Local variable 'fm' could be declared final
test/jdepend/framework/JarFileParserTest.java:99:	LocalVariableCouldBeFinal: Local variable 'fm' could be declared final
test/jdepend/framework/JarFileParserTest.java:99:	ShortVariable: Avoid variables with short names like fm
test/jdepend/framework/JarFileParserTest.java:99:	ShortVariable: Avoid variables with short names like fm
test/jdepend/framework/JarFileParserTest.java:102:	LocalVariableCouldBeFinal: Local variable 'builder' could be declared final
test/jdepend/framework/JarFileParserTest.java:102:	LocalVariableCouldBeFinal: Local variable 'builder' could be declared final
test/jdepend/framework/JarFileParserTest.java:104:	LocalVariableCouldBeFinal: Local variable 'classes' could be declared final
test/jdepend/framework/JarFileParserTest.java:104:	LocalVariableCouldBeFinal: Local variable 'classes' could be declared final
test/jdepend/framework/JarFileParserTest.java:105:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JarFileParserTest.java:105:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JarFileParserTest.java:105:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/JarFileParserTest.java:105:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/JarFileParserTest.java:110:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/JarFileParserTest.java:110:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/JarFileParserTest.java:110:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/JarFileParserTest.java:110:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/JarFileParserTest.java:110:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/JarFileParserTest.java:110:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/JarFileParserTest.java:112:	LocalVariableCouldBeFinal: Local variable 'jdepend' could be declared final
test/jdepend/framework/JarFileParserTest.java:112:	LocalVariableCouldBeFinal: Local variable 'jdepend' could be declared final
test/jdepend/framework/JarFileParserTest.java:116:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JarFileParserTest.java:116:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JarFileParserTest.java:119:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JarFileParserTest.java:119:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JarFileParserTest.java:122:	MethodArgumentCouldBeFinal: Parameter 'classes' is not assigned and could be declared final
test/jdepend/framework/JarFileParserTest.java:122:	MethodArgumentCouldBeFinal: Parameter 'classes' is not assigned and could be declared final
test/jdepend/framework/JarFileParserTest.java:123:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JarFileParserTest.java:123:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JarFileParserTest.java:125:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JarFileParserTest.java:125:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JarFileParserTest.java:127:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JarFileParserTest.java:127:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JarFileParserTest.java:131:	MethodArgumentCouldBeFinal: Parameter 'classes' is not assigned and could be declared final
test/jdepend/framework/JarFileParserTest.java:131:	MethodArgumentCouldBeFinal: Parameter 'classes' is not assigned and could be declared final
test/jdepend/framework/JarFileParserTest.java:132:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/JarFileParserTest.java:132:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:13:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/MetricTest.java:13:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
test/jdepend/framework/MetricTest.java:13:	CommentRequired: Field comments are required
test/jdepend/framework/MetricTest.java:13:	CommentRequired: Field comments are required
test/jdepend/framework/MetricTest.java:14:	CommentRequired: Field comments are required
test/jdepend/framework/MetricTest.java:14:	CommentRequired: Field comments are required
test/jdepend/framework/MetricTest.java:18:	UnsynchronizedStaticFormatter: Static Formatter objects should be accessed in a synchronized manner
test/jdepend/framework/MetricTest.java:18:	UnsynchronizedStaticFormatter: Static Formatter objects should be accessed in a synchronized manner
test/jdepend/framework/MetricTest.java:21:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/MetricTest.java:21:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/MetricTest.java:21:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/MetricTest.java:21:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/MetricTest.java:25:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/MetricTest.java:25:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/MetricTest.java:25:	JUnit4TestShouldUseBeforeAnnotation: JUnit 4 tests that set up tests should use the @Before annotation, JUnit5 tests should use @BeforeEach or @BeforeAll
test/jdepend/framework/MetricTest.java:25:	JUnit4TestShouldUseBeforeAnnotation: JUnit 4 tests that set up tests should use the @Before annotation, JUnit5 tests should use @BeforeEach or @BeforeAll
test/jdepend/framework/MetricTest.java:25:	MissingOverride: The method 'setUp()' is missing an @Override annotation.
test/jdepend/framework/MetricTest.java:25:	MissingOverride: The method 'setUp()' is missing an @Override annotation.
test/jdepend/framework/MetricTest.java:28:	LocalVariableCouldBeFinal: Local variable 'filter' could be declared final
test/jdepend/framework/MetricTest.java:28:	LocalVariableCouldBeFinal: Local variable 'filter' could be declared final
test/jdepend/framework/MetricTest.java:36:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/MetricTest.java:36:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/MetricTest.java:36:	JUnit4TestShouldUseAfterAnnotation: JUnit 4 tests that clean up tests should use the @After annotation, JUnit5 tests should use @AfterEach or @AfterAll
test/jdepend/framework/MetricTest.java:36:	JUnit4TestShouldUseAfterAnnotation: JUnit 4 tests that clean up tests should use the @After annotation, JUnit5 tests should use @AfterEach or @AfterAll
test/jdepend/framework/MetricTest.java:36:	MissingOverride: The method 'tearDown()' is missing an @Override annotation.
test/jdepend/framework/MetricTest.java:36:	MissingOverride: The method 'tearDown()' is missing an @Override annotation.
test/jdepend/framework/MetricTest.java:36:	UselessOverridingMethod: Overriding method merely calls super
test/jdepend/framework/MetricTest.java:36:	UselessOverridingMethod: Overriding method merely calls super
test/jdepend/framework/MetricTest.java:40:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/MetricTest.java:40:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/MetricTest.java:40:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/MetricTest.java:40:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/MetricTest.java:47:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:47:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:49:	LocalVariableCouldBeFinal: Local variable 'filter' could be declared final
test/jdepend/framework/MetricTest.java:49:	LocalVariableCouldBeFinal: Local variable 'filter' could be declared final
test/jdepend/framework/MetricTest.java:50:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:50:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:62:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/MetricTest.java:62:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/MetricTest.java:62:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/MetricTest.java:62:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/MetricTest.java:63:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:63:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:65:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:65:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:65:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:65:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:66:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:66:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:66:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:66:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:67:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:67:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:67:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:67:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:68:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:68:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:68:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:68:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:69:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:69:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:69:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:69:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:70:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:70:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:70:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:70:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:71:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:71:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:71:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:71:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:72:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:72:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:72:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:72:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:77:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/MetricTest.java:77:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/MetricTest.java:77:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/MetricTest.java:77:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/MetricTest.java:78:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:78:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:80:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:80:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:80:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:80:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:81:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:81:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:81:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:81:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:82:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:82:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:82:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:82:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:83:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:83:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:83:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:83:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:84:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:84:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:84:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:84:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:85:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:85:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:85:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:85:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:86:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:86:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:86:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:86:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:87:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:87:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:87:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:87:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:92:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/MetricTest.java:92:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/MetricTest.java:92:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/MetricTest.java:92:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/MetricTest.java:93:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:93:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:95:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:95:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:95:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:95:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:96:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:96:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:96:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:96:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:97:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:97:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:97:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:97:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:98:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:98:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:98:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:98:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:99:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:99:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:99:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:99:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:100:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:100:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:100:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:100:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:101:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:101:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:101:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:101:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:102:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:102:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:102:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:102:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:107:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/MetricTest.java:107:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
test/jdepend/framework/MetricTest.java:107:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/MetricTest.java:107:	ShortVariable: Avoid variables with short names like p
test/jdepend/framework/MetricTest.java:108:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:108:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:110:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:110:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:110:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:110:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:111:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:111:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:111:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:111:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:112:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:112:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:112:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:112:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:113:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:113:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:113:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:113:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:114:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:114:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:114:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:114:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:115:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:115:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:115:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:115:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:116:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:116:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:116:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:116:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:117:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:117:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:117:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:117:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:120:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/MetricTest.java:120:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/MetricTest.java:120:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/MetricTest.java:120:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/MetricTest.java:120:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/MetricTest.java:120:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/MetricTest.java:124:	LocalVariableCouldBeFinal: Local variable 'pkg' could be declared final
test/jdepend/framework/MetricTest.java:124:	LocalVariableCouldBeFinal: Local variable 'pkg' could be declared final
test/jdepend/framework/MetricTest.java:131:	LocalVariableCouldBeFinal: Local variable 'analyzedPkg' could be declared final
test/jdepend/framework/MetricTest.java:131:	LocalVariableCouldBeFinal: Local variable 'analyzedPkg' could be declared final
test/jdepend/framework/MetricTest.java:132:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:132:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:132:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:132:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:133:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:133:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:133:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:133:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:134:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:134:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/MetricTest.java:134:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:134:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/MetricTest.java:137:	MethodArgumentCouldBeFinal: Parameter 'f' is not assigned and could be declared final
test/jdepend/framework/MetricTest.java:137:	MethodArgumentCouldBeFinal: Parameter 'f' is not assigned and could be declared final
test/jdepend/framework/MetricTest.java:137:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/MetricTest.java:137:	ShortVariable: Avoid variables with short names like f
test/jdepend/framework/MetricTest.java:138:	UnsynchronizedStaticFormatter: Static Formatter objects should be accessed in a synchronized manner
test/jdepend/framework/MetricTest.java:138:	UnsynchronizedStaticFormatter: Static Formatter objects should be accessed in a synchronized manner
test/jdepend/framework/ProfilingHarness.java:5:	CommentRequired: Header comments are required
test/jdepend/framework/ProfilingHarness.java:5:	CommentRequired: Header comments are required
test/jdepend/framework/ProfilingHarness.java:5:	UseUtilityClass: All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
test/jdepend/framework/ProfilingHarness.java:5:	UseUtilityClass: All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
test/jdepend/framework/ProfilingHarness.java:7:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ProfilingHarness.java:7:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/ProfilingHarness.java:7:	DataflowAnomalyAnalysis: Found 'UR'-anomaly for variable 'arg' (lines '7'-'12').
test/jdepend/framework/ProfilingHarness.java:7:	DataflowAnomalyAnalysis: Found 'UR'-anomaly for variable 'arg' (lines '7'-'12').
test/jdepend/framework/ProfilingHarness.java:7:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
test/jdepend/framework/ProfilingHarness.java:7:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
test/jdepend/framework/ProfilingHarness.java:7:	SignatureDeclareThrowsException: A method/constructor should not explicitly throw java.lang.Exception
test/jdepend/framework/ProfilingHarness.java:7:	SignatureDeclareThrowsException: A method/constructor should not explicitly throw java.lang.Exception
test/jdepend/framework/ProfilingHarness.java:8:	LocalVariableCouldBeFinal: Local variable 'start' could be declared final
test/jdepend/framework/ProfilingHarness.java:8:	LocalVariableCouldBeFinal: Local variable 'start' could be declared final
test/jdepend/framework/ProfilingHarness.java:10:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
test/jdepend/framework/ProfilingHarness.java:10:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
test/jdepend/framework/ProfilingHarness.java:10:	LocalVariableCouldBeFinal: Local variable 'jDepend' could be declared final
test/jdepend/framework/ProfilingHarness.java:10:	LocalVariableCouldBeFinal: Local variable 'jDepend' could be declared final
test/jdepend/framework/ProfilingHarness.java:11:	LocalVariableCouldBeFinal: Local variable 'arg' could be declared final
test/jdepend/framework/ProfilingHarness.java:11:	LocalVariableCouldBeFinal: Local variable 'arg' could be declared final
test/jdepend/framework/ProfilingHarness.java:14:	SystemPrintln: System.out.println is used
test/jdepend/framework/ProfilingHarness.java:14:	SystemPrintln: System.out.println is used
test/jdepend/framework/ProfilingHarness.java:16:	LocalVariableCouldBeFinal: Local variable 'end' could be declared final
test/jdepend/framework/ProfilingHarness.java:16:	LocalVariableCouldBeFinal: Local variable 'end' could be declared final
test/jdepend/framework/ProfilingHarness.java:17:	SystemPrintln: System.out.println is used
test/jdepend/framework/ProfilingHarness.java:17:	SystemPrintln: System.out.println is used
test/jdepend/framework/ProfilingHarness.java:17:	UselessParentheses: Useless parentheses.
test/jdepend/framework/ProfilingHarness.java:17:	UselessParentheses: Useless parentheses.
test/jdepend/framework/PropertyConfiguratorTest.java:14:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/PropertyConfiguratorTest.java:14:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/PropertyConfiguratorTest.java:14:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/PropertyConfiguratorTest.java:14:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
test/jdepend/framework/PropertyConfiguratorTest.java:18:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/PropertyConfiguratorTest.java:18:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/PropertyConfiguratorTest.java:18:	JUnit4TestShouldUseBeforeAnnotation: JUnit 4 tests that set up tests should use the @Before annotation, JUnit5 tests should use @BeforeEach or @BeforeAll
test/jdepend/framework/PropertyConfiguratorTest.java:18:	JUnit4TestShouldUseBeforeAnnotation: JUnit 4 tests that set up tests should use the @Before annotation, JUnit5 tests should use @BeforeEach or @BeforeAll
test/jdepend/framework/PropertyConfiguratorTest.java:18:	MissingOverride: The method 'setUp()' is missing an @Override annotation.
test/jdepend/framework/PropertyConfiguratorTest.java:18:	MissingOverride: The method 'setUp()' is missing an @Override annotation.
test/jdepend/framework/PropertyConfiguratorTest.java:24:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/PropertyConfiguratorTest.java:24:	CommentRequired: Protected method constructor comments are required
test/jdepend/framework/PropertyConfiguratorTest.java:24:	JUnit4TestShouldUseAfterAnnotation: JUnit 4 tests that clean up tests should use the @After annotation, JUnit5 tests should use @AfterEach or @AfterAll
test/jdepend/framework/PropertyConfiguratorTest.java:24:	JUnit4TestShouldUseAfterAnnotation: JUnit 4 tests that clean up tests should use the @After annotation, JUnit5 tests should use @AfterEach or @AfterAll
test/jdepend/framework/PropertyConfiguratorTest.java:24:	MissingOverride: The method 'tearDown()' is missing an @Override annotation.
test/jdepend/framework/PropertyConfiguratorTest.java:24:	MissingOverride: The method 'tearDown()' is missing an @Override annotation.
test/jdepend/framework/PropertyConfiguratorTest.java:24:	UselessOverridingMethod: Overriding method merely calls super
test/jdepend/framework/PropertyConfiguratorTest.java:24:	UselessOverridingMethod: Overriding method merely calls super
test/jdepend/framework/PropertyConfiguratorTest.java:28:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/PropertyConfiguratorTest.java:28:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/PropertyConfiguratorTest.java:28:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/PropertyConfiguratorTest.java:28:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/PropertyConfiguratorTest.java:28:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/PropertyConfiguratorTest.java:28:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/PropertyConfiguratorTest.java:29:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
test/jdepend/framework/PropertyConfiguratorTest.java:29:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
test/jdepend/framework/PropertyConfiguratorTest.java:29:	ShortVariable: Avoid variables with short names like c
test/jdepend/framework/PropertyConfiguratorTest.java:29:	ShortVariable: Avoid variables with short names like c
test/jdepend/framework/PropertyConfiguratorTest.java:31:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:31:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:34:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/PropertyConfiguratorTest.java:34:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/PropertyConfiguratorTest.java:34:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/PropertyConfiguratorTest.java:34:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/PropertyConfiguratorTest.java:34:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/PropertyConfiguratorTest.java:34:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/PropertyConfiguratorTest.java:36:	LocalVariableCouldBeFinal: Local variable 'file' could be declared final
test/jdepend/framework/PropertyConfiguratorTest.java:36:	LocalVariableCouldBeFinal: Local variable 'file' could be declared final
test/jdepend/framework/PropertyConfiguratorTest.java:38:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
test/jdepend/framework/PropertyConfiguratorTest.java:38:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
test/jdepend/framework/PropertyConfiguratorTest.java:38:	ShortVariable: Avoid variables with short names like c
test/jdepend/framework/PropertyConfiguratorTest.java:38:	ShortVariable: Avoid variables with short names like c
test/jdepend/framework/PropertyConfiguratorTest.java:41:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:41:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:44:	MethodArgumentCouldBeFinal: Parameter 'filters' is not assigned and could be declared final
test/jdepend/framework/PropertyConfiguratorTest.java:44:	MethodArgumentCouldBeFinal: Parameter 'filters' is not assigned and could be declared final
test/jdepend/framework/PropertyConfiguratorTest.java:45:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:45:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:46:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:46:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:47:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:47:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:48:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:48:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:49:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:49:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:50:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:50:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:53:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/PropertyConfiguratorTest.java:53:	CommentRequired: Public method and constructor comments are required
test/jdepend/framework/PropertyConfiguratorTest.java:53:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/PropertyConfiguratorTest.java:53:	JUnit4TestShouldUseTestAnnotation: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest
test/jdepend/framework/PropertyConfiguratorTest.java:53:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/PropertyConfiguratorTest.java:53:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
test/jdepend/framework/PropertyConfiguratorTest.java:54:	LocalVariableCouldBeFinal: Local variable 'j' could be declared final
test/jdepend/framework/PropertyConfiguratorTest.java:54:	LocalVariableCouldBeFinal: Local variable 'j' could be declared final
test/jdepend/framework/PropertyConfiguratorTest.java:54:	ShortVariable: Avoid variables with short names like j
test/jdepend/framework/PropertyConfiguratorTest.java:54:	ShortVariable: Avoid variables with short names like j
test/jdepend/framework/PropertyConfiguratorTest.java:57:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:57:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:58:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:58:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:58:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/PropertyConfiguratorTest.java:58:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/PropertyConfiguratorTest.java:61:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:61:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:62:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:62:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:62:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/PropertyConfiguratorTest.java:62:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
test/jdepend/framework/PropertyConfiguratorTest.java:65:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/PropertyConfiguratorTest.java:65:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
test/jdepend/framework/p2/ExampleEnum.java:3:	CommentRequired: Enum comments are required
test/jdepend/framework/p2/ExampleEnum.java:3:	CommentRequired: Enum comments are required
test/jdepend/framework/p3/ExampleSecondEnum.java:3:	CommentRequired: Enum comments are required
test/jdepend/framework/p3/ExampleSecondEnum.java:3:	CommentRequired: Enum comments are required
